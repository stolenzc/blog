<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Auto.js自动化脚本开发</title>
    <url>/2020/autojs/</url>
    <content><![CDATA[<h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><p><a href="https://stolenzc.lanzoui.com/iwN5Vhcxlkd" target="_blank" rel="noopener">Auto.js手机app</a></p>
<p>电脑开发推荐使用<a href="/2020/vscode">VScode</a></p>
<h2 id="开发步骤"><a href="#开发步骤" class="headerlink" title="开发步骤"></a>开发步骤</h2><p>VScode编辑js脚本文件</p>
<p>VScode点击<code>查看&gt;命令面板</code>输入<code>auto.js:start server</code>启动服务；手机打开auto.js然后左滑打开连接电脑，输入电脑的ip地址（局域网地址），连接成功后VScode右下角会有弹出连接成功显示；电脑按<code>F5</code>键就可以将当前活动页代码发送到手机上执行。</p>
<h2 id="操作命令"><a href="#操作命令" class="headerlink" title="操作命令"></a>操作命令</h2><p>VScode：</p>
<ul>
<li><code>auto.js:Start Server</code> - 启动远程操作服务</li>
<li><code>auto.js:Stop Server</code> - 停止远程操作服务</li>
<li><code>auto.js:Run</code> / <code>F5</code> - 在手机上运行当前活动页程序</li>
<li><code>auto.js:Stop</code> - 在手机上停止当前活动页脚本</li>
<li><code>auto.js:StopAll</code> - 停止手机上运行的所有脚本</li>
<li><code>auto.js:Save</code> - 将当前文件保存到手机默认目录下</li>
<li><code>auto.js:Run Project</code> - 在手机上运行项目</li>
<li><code>auto.js:Save Project</code> - 在手机上保存项目</li>
</ul>
<h2 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h2><p>详细参考命令到<a href="https://hyb1996.github.io/AutoJs-Docs/#/" target="_blank" rel="noopener">Auto.js文档</a></p>
<p><strong>注意</strong>：此处仅仅介绍本人用过的命令</p>
<h3 id="一般全局函数"><a href="#一般全局函数" class="headerlink" title="一般全局函数"></a>一般全局函数</h3><ul>
<li><code>sleep(n)</code> - 暂停运行n毫秒的时间</li>
<li><code>home()</code> - 相当于点击安卓的home按键</li>
<li><code>back()</code> - 相当于点击安卓的back按键</li>
<li><code>toast(message)</code> - 以气泡显示信息message几秒，安卓一般为2秒</li>
<li><code>exit()</code> - 立刻停止脚本运行</li>
<li><code>setScreenMetrics(x, y)</code> - 设置屏幕分辨率</li>
</ul>
<h3 id="点击"><a href="#点击" class="headerlink" title="点击"></a>点击</h3><ul>
<li><code>click(x, y)</code> - 点击指定的像素点</li>
<li><code>click(text[, i])</code> - 点击文本，入过有多个，则点击第i个，i从0开始数，不指定则会将所有的文本点击一次，返回是否全部成功</li>
<li><code>while(!click(&quot;扫一扫&quot;));</code> - 点击扫一扫，从文本处向其父视图寻找，直至发现一个可点击的部件为止。</li>
<li><code>swipe(x1, y1, x2, y2, duration)</code> - 从(x1, y1)滑动到(x2, y2)，持续时间为duration毫秒</li>
<li><code>press(x, y, duration)</code> - 长按(x, y)点，持续时间为duration毫秒</li>
</ul>
<h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><ul>
<li><code>launchApp(appName)</code> - 指定应用名启动应用，如“支付宝”</li>
<li><code>launch(packageName)</code> - 指定应用的包名启动应用，如“com.eg.android.AlipayGphone”，该方法启动应用更快</li>
</ul>
<h3 id="图片和颜色"><a href="#图片和颜色" class="headerlink" title="图片和颜色"></a>图片和颜色</h3><ul>
<li><code>requestScreenCapture([landscape])</code> - 获取截图权限，返回是否具有权限；landscape为false, 则表示竖屏截图; true为横屏截图；该方法只用执行一次</li>
<li><code>captureScreen()</code> - 截取屏幕，返回一个image对象</li>
<li><code>images.pixel(image, x, y)</code> - 返回image图片(x, y)位置的ARGB值，用0xAARRGGBB表示</li>
<li><code>images.findColor(image, color, options)</code> - 区域找色，image中找color颜色，options为一个类似python字典的对象，region为区域，指定左上角x，y和区域的宽和高，threshold为颜色相似度，0为相同，255为所有颜色都相似，默认为4</li>
<li><code>images.findColorInRegion(img, color, x, y[, width, height, threshold])</code> - 用法同findColor</li>
<li><code>images.findImage(img, template[, options])</code> - 以图找图，img为原图，template为模板图，options和findColor用法相似；threshold图片相似度，取值范围为0~1的浮点数。默认值为0.9。region找图区域，用法和findColor一样，level默认不设置，会自动调整图片大小。</li>
<li><code>images.findImageInRegion(img, template, x, y[, width, height, threshold])</code> - 用法和findImage一样</li>
<li><code>colors.toString(color)</code> - 将颜色值转换为字符串</li>
</ul>
<h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><p>监控我的支付宝蚂蚁庄园是否有小鸡偷吃的脚本</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">"auto"</span>;</span><br><span class="line"><span class="comment">// 设置分辨率</span></span><br><span class="line">setScreenMetrics(<span class="number">1080</span>, <span class="number">1920</span>);</span><br><span class="line"><span class="comment">// 获取竖屏截图权限</span></span><br><span class="line">requestScreenCapture(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">main();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    app.launch(<span class="string">"com.eg.android.AlipayGphone"</span>);</span><br><span class="line">    sleep(<span class="number">2000</span>);</span><br><span class="line">    <span class="comment">// 判断是否是主页</span></span><br><span class="line">    <span class="keyword">while</span>(!check_alipay_home())&#123;</span><br><span class="line">        back();</span><br><span class="line">        sleep(<span class="number">1000</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// check_ant_home();</span></span><br><span class="line">    watched_me();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查并进入支付宝首页</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_alipay_home</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> scan = text(<span class="string">'首页'</span>).findOnce();</span><br><span class="line">    <span class="keyword">var</span> pay = text(<span class="string">'理财'</span>).findOnce();</span><br><span class="line">    <span class="keyword">if</span>(scan != <span class="literal">null</span> &amp;&amp; pay != <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span>(!click(<span class="string">"首页"</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否进入了蚂蚁界面</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_ant_home</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(!click(<span class="string">"蚂蚁庄园"</span>));</span><br><span class="line">    sleep(<span class="number">800</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> img = captureScreen();</span><br><span class="line">        <span class="keyword">var</span> color1 = images.pixel(img, <span class="number">100</span>, <span class="number">200</span>);</span><br><span class="line">        <span class="keyword">var</span> colors1 = colors.toString(color1);</span><br><span class="line">        <span class="keyword">if</span>(colors1 == <span class="string">"#ffb7eaff"</span>)&#123;</span><br><span class="line">            sleep(<span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            sleep(<span class="number">500</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监控我的蚂蚁庄园</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">watched_me</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="comment">// 进入蚂蚁庄园主页</span></span><br><span class="line">        check_ant_home();</span><br><span class="line">        <span class="comment">// 获取截图</span></span><br><span class="line">        <span class="keyword">var</span> img = captureScreen();</span><br><span class="line">        <span class="comment">// 判断左右是否有小鸡</span></span><br><span class="line">        <span class="keyword">var</span> color1 = images.pixel(img, <span class="number">400</span>, <span class="number">1300</span>);</span><br><span class="line">        <span class="keyword">var</span> color2 = images.pixel(img, <span class="number">850</span>, <span class="number">1300</span>);</span><br><span class="line">        <span class="keyword">var</span> colors1 = colors.toString(color1);</span><br><span class="line">        <span class="keyword">var</span> colors2 = colors.toString(color2);</span><br><span class="line">        <span class="comment">// 如果有小鸡来了，播放歌曲后退出</span></span><br><span class="line">        <span class="keyword">if</span>(colors1==<span class="string">"#ff000000"</span> || colors2==<span class="string">"#ff000000"</span>)&#123;</span><br><span class="line">            media.playMusic(<span class="string">"/storage/emulated/0/MIUI/.ringtone/五月天 我不愿让你一个人_&amp;_5b2e2bd6-6230-45c4-a1a5-e2a6bcdcd4b2.mp3"</span>);</span><br><span class="line">            sleep(<span class="number">30000</span>);</span><br><span class="line">            exit();</span><br><span class="line">        &#125;</span><br><span class="line">        toast(colors1 + colors2)</span><br><span class="line">        back();</span><br><span class="line">        sleep(<span class="number">700</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>监控蚂蚁庄园前三名是否有小鸡偷吃的脚本</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">"auto"</span>;</span><br><span class="line"><span class="comment">// 设置分辨率</span></span><br><span class="line">setScreenMetrics(<span class="number">1080</span>, <span class="number">1920</span>);</span><br><span class="line"><span class="comment">// 获取竖屏截图权限</span></span><br><span class="line">requestScreenCapture(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">main();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    app.launch(<span class="string">"com.eg.android.AlipayGphone"</span>);</span><br><span class="line">    sleep(<span class="number">2000</span>);</span><br><span class="line">    <span class="comment">// 判断是否是主页</span></span><br><span class="line">    <span class="keyword">while</span>(!check_alipay_home())&#123;</span><br><span class="line">        back();</span><br><span class="line">        sleep(<span class="number">1000</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// check_ant_home();</span></span><br><span class="line">    watched_other();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查并进入支付宝首页</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_alipay_home</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> scan = text(<span class="string">'首页'</span>).findOnce();</span><br><span class="line">    <span class="keyword">var</span> pay = text(<span class="string">'理财'</span>).findOnce();</span><br><span class="line">    <span class="keyword">if</span>(scan != <span class="literal">null</span> &amp;&amp; pay != <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span>(!click(<span class="string">"首页"</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否进入了蚂蚁界面</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_ant_home</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(!click(<span class="string">"蚂蚁庄园"</span>));</span><br><span class="line">    sleep(<span class="number">800</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> img = captureScreen();</span><br><span class="line">        <span class="keyword">var</span> color1 = images.pixel(img, <span class="number">100</span>, <span class="number">200</span>);</span><br><span class="line">        <span class="keyword">var</span> colors1 = colors.toString(color1);</span><br><span class="line">        <span class="keyword">if</span>(colors1 == <span class="string">"#ffb7eaff"</span>)&#123;</span><br><span class="line">            sleep(<span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            sleep(<span class="number">500</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">watched_other</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    check_ant_home();</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="comment">// 点击小鸡庄园的好友</span></span><br><span class="line">        click(<span class="number">156</span>,<span class="number">1721</span>);</span><br><span class="line">        sleep(<span class="number">1000</span>);</span><br><span class="line">        <span class="comment">// 截图</span></span><br><span class="line">        <span class="keyword">var</span> img = captureScreen();</span><br><span class="line">        <span class="comment">// 监控第一位好友</span></span><br><span class="line">        <span class="keyword">var</span> color1 = images.pixel(img,<span class="number">940</span>,<span class="number">1380</span>);</span><br><span class="line">        <span class="keyword">var</span> colors1 = colors.toString(color1);</span><br><span class="line">        <span class="comment">// 监控第二位好友</span></span><br><span class="line">        <span class="keyword">var</span> color2 = images.pixel(img,<span class="number">940</span>,<span class="number">1570</span>);</span><br><span class="line">        <span class="keyword">var</span> colors2 = colors.toString(color2);</span><br><span class="line">        <span class="comment">// 监控第三个好友</span></span><br><span class="line">        <span class="keyword">var</span> color3 = images.pixel(img,<span class="number">940</span>,<span class="number">1760</span>);</span><br><span class="line">        <span class="keyword">var</span> colors3 = colors.toString(color3);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断是否有小鸡来了，有小鸡来了像素点的值为#ff333333</span></span><br><span class="line">        <span class="keyword">if</span>(colors1==<span class="string">"#ff333333"</span> ||colors2==<span class="string">"#ff333333"</span> ||colors3==<span class="string">"#ff333333"</span> )&#123;</span><br><span class="line">            media.playMusic(<span class="string">"/storage/emulated/0/MIUI/.ringtone/五月天 我不愿让你一个人_&amp;_5b2e2bd6-6230-45c4-a1a5-e2a6bcdcd4b2.mp3"</span>);</span><br><span class="line">            sleep(<span class="number">30000</span>);</span><br><span class="line">            exit();</span><br><span class="line">        &#125;</span><br><span class="line">        toast(colors1 + colors2 + colors3)</span><br><span class="line">        back();</span><br><span class="line">        sleep(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Auto.js</tag>
      </tags>
  </entry>
  <entry>
    <title>占卜</title>
    <url>/2020/divination/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">您好, 这里需要密码.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="299f7a211bbe8ac286089ad8d38365c4875da24bc284ac4736389baf072107fe">026e53d398fb888d53294d4b9737bc667ea2e4a449841ca3ef4aa781349701636df27151531cef4d62e9958365e6fd0407de34acb398f6854631d8b20da036fb2b6f071c036ea9b820762a9e5936f50a28e511bebd26d714d54b042db8500a50592e0304e3708d4c1628bb5dadcfa732789642ce8eb75eaa6528516b227bb83fec2a90504e2909eb2edb4576fe4532ebce0f5ff0cd117d4ebcb2646fb7e0209ce2a046e693c42a17c3bda9f3ccdbea58f2d533f6426d07a8706dc7db583f47f79df345c170349b572b077c1a3ecf5abd5b01e9edc900f33d8e4695c530078f49c84e178f956689f82ae68d29c4a7468824302c7e2c79d5a5156486e915f7eddece87576b1b3b8a6ff837b6c386f8ca80e075d247fc9f66d412e3f55386e046ece84bb3216befef2f112b4e29d520d048150cb365e5f01bcefacc3a133b5f0b93f181c730d17e1c09b7f9e194ef7d6a00b81a773c81481cc59821772e1ccd9a197073b22878ac06c36fe9b957e588f47ae72e4013c874381aa3391c4b8a5d4209e2c57d6546af852c4a4f1a169bb4a982d0177ea7382c4dfe9d7c4b6e4b98eb7e0205b4b66567cafaaf04928c85b011e9289594541b199d45b017871bb79471a44030b1a3b97af31f9b31da88c443e04c8305cd180be8871bea9c6b6e251240a77df43b21df8a3f6fc3ab0466666794e04c477c2b80d15fff15eb03090003e0e0cee04dcc6697b10b6a9a4778ed4107398fd7156d99fbbe2b8f29f7054ff1228288094f1579b6824f29bba97e2a7a1397b92ad4d977c54a1866d52151d36935ad8301a06d25b1870a1c259bb3776e133ac6a19424a0f41d0ff79c929e9470111f449e781fd838e7a85cfc9fc38ad6c948248eb4af2b2afcbfde4a69bfba14e56e865a86c303e7a2395c3b11a989bedff0766e6d5576f4382ef952f8eb4c66e760e8fd2b46c07a0aa21c1df90ea0b62af7783613f2a67facafcfd03e55d60c92ff70e1892c126087c873f7ce76c81f7db042133d08193dd3245e096bf1319ebb4c85f0c15cb8c6b24ab7e6894fc854b1ab8d230dd13a83c80652360f30a4e1e78d3d854bb0934c7e2a1e5016d5d9604833c7d3e0f51746191c6ea59fa7c06ee4814c1a407e1d478511aa6da89098ad8e359dd9b1e4253fb5a487dd1023de9f0a00c9a51bf09f424669a6887eca282ec4473f96d6d72485ff3e11161df7eb64f574665908cac9f4d39928e825c7282c7080e4448c0e13344d4ff18e2afda3baf67340606160ef7f69e371b52076ffb5d8f68fed3e20d2e2ce61bd506932c3e3e96877cf74130a68eae174815957607d00ac06c88433db45492db04706ab35396bad231ac266be0a3af0b8bedfe0c8dd6c1ea63451505c92c4dd69b2868166d987dfd37fc08cd62b297d61ef64591864377e93f159ba8022de4dcf4d89ff76974af4fd0db9d6a8201efb57b99a8e2045224ee39281240bb9fd0ebd91fa549870294931fd3e2283be416a7bb39f9b744b306eb2148618a644cc5451ee98471c0d46ed27d134ea3966aa1120e87600f910c788eab21a3506e9de89ce0db8e350a1d53de0c64446cd554ca077db718889b1679f14299c5c46fae4e662c87071e8bf9cf3eb0beab50600b4c1036100d345c23c7ad2d602c842badd3525e30edf511104dcebeb6b2ed59273208b226ffe10a3b41e09b9cd1c1120add097468e3a0283db22c587e7440797c495f4dd9896ee1f03b21c1761eafd046c63fee943f39df9138601066d067412e61ccf24672d7ffaf41e48909a685208ffa6a5e36b8818558c76eddf5de89361dc9dbc591346840a49cd2e48578b4870df8ff53f20e4a74d35ce59e407d49d5ac2f61af74f4a9ba5cda4627d2c944106fb3907ba64c4595cda386fd831b081ef5afa4817a53165af99479e3e78eb0a593f05baa61b4d25ee86bf3b7a8ecb212bc315d72847ea8600c4c084f3a787952eb1c58fab7291e71cb66f2f76126a29e163f02af2f79f14f68c6516da26f8432496180cf7c5285962067fa320bc25e7367e967d9773ccb95595314788d8f61764c5b916ebbaf091bf3c58fbaa7cdf3efae0c6c2bdbb56db257f03086157d2b2d79ebe0d2efb4f2ee4bdeace9c65b45067c1f9425b1979ef67cb7d809192acda04488998cdd33414c839d93272b7298a23d46119b7e0251211abe69196ac0d12bfb1d48cd927fbccf36d8d694310b8bffe94622e69bee015db00d7c78eb4d01000d0957853075cc67cb03b3be3c18fc10f412d9c1e1e2f2481a0ee3d7a92630d02b2660121a7a2afd698cc7df60713af039978d6bfc1da88d0e27069042b9d20a99f601b0a3101344807364964c8bc866fe59b0469be0e34f7857bfdd6e155d7dabf79c62a7de853664d94c3659d00a2a1af25a9cb389f31125d7ae0deed57a9cec7002685e1e510ff544abdc90dfa196377e77851efe967dbbdbac18312a7eb01efe1440264c2f7f750ed4147fdcc1c8fceb494bd455156bf3d1d57c358ff56bdf5028265fdb4f7195ff6c93c5b436cc5c20489a11b0a17df1db7b1c4f96b5f58bd13c9adb9e546ffca5714532307f5eedafc51eb2b18811be9f4d6a4662f865c1d85614bda3a2994518a4f688c554f002a25ce3d1c747c76c6ebc0bdf825ecb45521229cf4b4b0dea8f16f0289c7b9f5cfecb19884e202334a7951b95cb6388eb6b62f1a4dfdcd52c8ad90a646f025fccbd2c56779ead55d1b20ab879511bddd83d3a380dd3f66344ce937c915bd5a299bc89d133a8b22a25766711bf1ed3ad8788978da0a42d9ae46f8f2be2745a75bf22d1d727e816a3986359c0cbb384e09dca7b642c6aa5a6e11505d85ff305249f7657743b513ee3673b5f9c0b4cfe300fe289010b1c7722d31a19fd338ab60ed5385d1999c48f9c42cb9913c670574eee46f093c81801e04994b8b905d3d03677ffe85906cbc590366fa88b91555ea642142b0120a86d831e7bee41bd2fdb19d72225f1e31a656cf638f946f7489c1f32d8f4652e68f89ebbef6eaaab2f93108cd299cd40343fe0ddc43386164bc80ab1547b782ba0638bccaa7b6de8b5d4dcb5cb7d80b0d4d471547b3d9e0abf15fb90da45eb2e162810a672bc5a63539b107647baa966d58ea393ecaa1d070dab3e78fa02783a1da61ff7d147bdc5505de06fd87cd66a2c541f2cccf13793521ccfe8f349caf1e8b6403400a194729b284c56ef3ccd9e490da9162396c8b2c948eb3051c4ed3f6f514442f288ca9d5afd22bfb5b44054c20f1706b998d412e16df6d7fd6d4ff17d68efc6dbcc0204eacdcc805bd5a4b550c950b48c974a3bd1b15908e45ef3a5547bae31289981a75c88ed9073e09ab00a7429cee6767d5e326caaebfe00b1103d2ba9aa811a48a0dd11d13aa1123480c03d549cf1c8cfc514c1d6553802c96460867f3cbf633593b9aa64faad846bf7b5ef56d432c6e30916d29480106c27fa59e233aab1a21a3ab64c59bab26ed3eae6f765d2629fc2b1653f02105e7cdd932d40886065a6ea365f5f827333831abe0c73ea93a0d001c844113a4a1c28558b794ede44a03335784c6c3adfefac154b778d09d0f8ea87501b6401cff21a8456c4d964da58bd95ef27bf3362e942c965879f8a948730b534cc91627f6a45ac643ba9f9b8224258884eca1102be9f963ca2edd6789a72110486565b2d319238a9c34e78de998c0ea1f94113f3b7357a539aff37d080f918d7624793b86bf01ea7a0e882844cc44fde364dab824cd9d29af157cfeb9c48869d0e59f79e6722a9316d0e06aaf8f6364d614e5504fe57c7fc5867ff805f76391ea92716e2da665386f994ae936e02458e72360995a5f0b6d58604e62f73b61e94b4e0a9980c9a55223764bf119c7860b18e78956e7b74590c503d2e920073ffcc876f9228b4e592a4b5e934586d202308e9b45699bf40dd27ff6a2933ab75ebdadedbccb00ec9e7191939b85724c1173d0c3648586172f852707fa7dbe0d13ba1e39f2f2bb44a3052a6b0ad34c4116318bdea9ae9cc8018945128db8196d725c57e8fd8bfc34309fce52e0a356b546fb379873a8cac25616261c86a4ac5a49c65d73332cba940d67f12d0753abc84e5b702e0fb6cadbedbe61fa2e728dd14c805c9f072fc5c19ef7021eab25e643548e379d07ea14f2fb7166aed08b736bb61dc93db6c75c34f867d4627b1d0aff8ec8e2650aebc585f15c3d2a33b4eb46223eeaa0f6811d9d79c622c2d3cb4884ab8e1216b6fe3f45ca33ce511737752cba3795eb55b8beb58d7a7a699df37fa81bf3235127a9b9fd57965f6de3be101b6c14f6507014078ca9b68958796f5e1592a639e62b8cef3288d37a49dbe2acddd9168db131de29df0189bcee9264ed5627cbfd5590ee712a59d6c5dcb29a9e1637ad88800d789cf5d5266995026598f8ee3b46664b150cac93c6ddb676d7800f3e8d8a9d2528d2a1e4608a239379aff7967d2e8dff76740cdb83adb7baae6a2fbf56f48a4763c3ba106c9f0c68ac8b7cc464905552bcf6f42a54c26ae98de5c97c63c2b657bee4a49b8afc969226c667c4a11321cc07a2bb376867ea00614cec65ff4abc8b255f170b36d6f2ea18b84094d843f187992f3e3f6455aa327c4760635f436ba2e79fc0d330624c48e6a1b21e3f1f12d483263b1e54be565cad427d5585ec16012ca604f6c369eb7e44d1caa9c979b584f29f912d7b03d221d6ee4fd78557911371c3a0fe99eeed9cf5fa817d40af07796734ac803d09fb991ee4869667d208e3f8ed5c641a969d5234af9c99a27c060d2500a4fd189b78ef97a908da7e628272c3a241507760ec83de3a7a4c0be5cff84a6e2d2494eab82b94a1c70c95960f66ae30dabd40ed8c46daf2b4e74ca4be9a85f38a1155ff57808434b8ddc9b7c4b7e1ce6c06639a3809ae24e8cc5be1296fbac0186429ff3073925c5be72ac3d3c4c8b456b43e623727ca43e94254faa78bc4ef3fa56a302e2796282318a67fe187bf3323c73a418f69919aa46c30fa78474cc7b6708715909c64c0a7036745550f6e23949eca691fd8c31d0c9c732181a612d202a9d4f16e316dff2e13de8659d2782bd8a87a795f3ff6d5b582eb6bfbb8ae91c6aa2a147d81e822c5568e61a5ef44a477cecf1b220321595cf4e36560c1519bcb277b5f0306d453cfa747d4643f28cd6bae55304e74ca43d6758aee4069f3bf6f9fa5203cb8efc0ad163272b5528003ca2d1d07318305d0229adbbc07b54f3b7cd0585580f30f84f231d43f377c8b6d1a96f6945d11cce5118e35d7bbe19db6419c15ba5617a809f055e57efa66902cbeb55a1d0e4921be7a8571765ed5c7bbb97926d8dcf866ddecd3ac12aca714db9c81ecce03f88218cfc370c21ca5dd5282f720b700352c273b7ac59bfe11c7513ba7f0cddd2dbbce4a5063ea86ae662dd74a0e45b05edae8439e4d8847c84d084431352214e566fb40314d5737a623c3de2c7e875657e43c16d714d304ef9d854c14cfa728c37f5250cacfd23f37f635e65d15399374a41f6633e15d7cb72e40e663f4712c4e0f97e6ae37d688230814be6787c66fb3f048e9054dfeb0178c9d531ed07221fcc1905ba8bb645d1d90d3ee411f802f75d7da4a6793f70c831bb009e940ad86c8edf4723c515d3cdebd229cefa809cc3157cfdaf90862ac00eeafdc179cf0f44e3088fd668584b91bc1f0d922e94205b0e7619e282a210427bf27208c5e7e66d072959a7545f8c6dab572534017c0cd04d6fe42eb897607fcf1712cd8c69eb77c52f6302b46301c1eb6415089a381dc6cbdabbb34734075e6c6bf1b5baff914f65f4141b40dc1202c8a1decff7271e12819f96700a163f666ff30fbc13491b8df7b1edf538a29281774478e73ec07b959acbd95b21fbef9d37d9c4d190c433bd06e74df9b8b7fee131fe3192aace15cdee8c05956c1c3a03aadcdfabd9ec52448b26a61c89b432b12dede6177143e41e1a66c34843b970473fb2cfc624b86680e764b7f76d2e03850128b69915235fb22ecc47de655c9f22d3a1f8d1c0212643448ef84ac9e5e89adbac7488c549772c2ff96cda0bfa778540e60b54904304c8a4ac5e5bb92d5ec1b313e6d87a8251636c2aeb77222948603b3ea9c880b4067b7a1717b29a37e6441ca5d22e1772ea48684f482eb9b9de5a5831e14f197ce2add74f1b9d79c63e06f06f500a2e92a3e92c86d78bbe037f3ffa83f237c2fdb750ef92c0afd5cb977b39f276f29f54a36545babc210bd061cd6744ca3bc98e9f0fb99bf36800b0c03c9a7baeb31dad1b5409c09221510993aecafd7e9a99d96415e8579ed2a7c4a3b367713ee1f109cd31704e157fb84d38a4a171a0a23728895bed4f057a59c0e564731cacf65b0ec5dfdd0c21068f6b086c15d732691de656c97712002df64a9c856191dd5fe6fef919f04399e5f4bc182a2772bcb3d7eb3b30be96360fcc8dc8b37a622580a56b61296e50952efb1e9075837ef7887b6c853bd453e2ae6ac51e9dcd8bad9d0a7ea1387296f858e218facb81e910b31b7591a4fabe85da7fc5be8157276d375548feef055724923423760627d52e63406711d5c4db0d4964477d5ec09cab45bfa6148a01c8c5e29cdb6745469793a5dc9f4c3d4c5db4e252b8ea11e3240bc132d97f255682a2e62d14c10e5987161e466c8d9790415fbf04d2a507559223cbcf7e765fb23ded58effb72a0684d3a6b66d351109246643b9aa078e1484f42e984788a9803c0c11afeccabbea20c52214dbf228b0516df5d02471b4391c85d4823a68a04da07e10480262d29465c3e972861dff9ab9c2cc74cd958291b5e852b70c8aeb65709d24eb3d2b2d9e10f5d16d9032c870334e77be9bb56a766cf8f4f915035615a2326d8fa65dd37d08f47183b2b0d2d1ffc7e2324640393c3340134dd1e7eef716e34d480829c84d9300abaf07a27d11d95e9c215e08e5fcfc3378793ed516e2d4f6afde2ff1c5696a4308151d7ed29941cf86c14d4d5aeb9ae9de9bf56a66935fb57a5a18db69c2623a6197c064012369ce64df813477bfa956ff1e71e4d9656c6a58452cb9e8e721874f531d0546ff9dae7cdada1616624c615c8009bdc477e6d78c06c744af005545bd992ec7bdc232b53f98a2f706293298dd629e4e3c021538fa98233db790ad4a18932a9e0f1a36489b05ded42cb96c67ce4b7b1f2fbaf77731bb730130f9efa7b8faa6a87565b5d48530a0366b71fb2221b7124470ddb1f70af2ee9412a5af85428ba011d97d52c5d94f0d484bd654fc3956a82b21a37063a156e10da18bc49c5d4374070563ae524d2accb0732142498dab71c10a455dfe723ca3b26811b2fc923ddb045091e6b44576d47c38a8cb9ba3d0b887d42ecef6de7e5bbb32c483d6537e25d386105405b4e9c19904e61a9a57146116137997a41ae3d45532dce741514011773b82d3de75a70044003c96318db59a0c59c16139481cf735aae8bb6122c68e7ca2a51a2baa2cef091788bf5508dfee6ec9edd232cfe24e7c9a880cafd52d4c5a5e9650d20d3a4d68da72afb0c629b4e8422ac9c961d924028bd88f18d1341604513c1dc79e1c46d018e951cdde245dbfd135e7b303def4a9e11de2430b0a7e507b0663e6ab9b96b356549d713c80a9987e8efae9c1bb22e88ebba3b83c62595b5e3d95986029befc105f32cea4fd693f0aa7e148fa56511cad3740ad06566611eb778778ca2b77403dd5c20e6539d5e2ad04f6f93b765995a216283fde9b0103570fcffe34b30d0e4574453fc0b466bee2e12012713ef3f8d1ab10e564716261606458913580c0a06e4d5ed0642ca42c682639f38f5064f5a019ff73ad78859a260451a76af8177c2ef29d93940d2f4bc882ccdf646275551623f75282f87af45162fd64db18e8d2cfa6690d674fc065c857879082af691edb7909acaef66c268cdae587687e35e7a8177adaffa862d1a12316d28aa79866493a296947ccf30fe96350d06533b4a4f6e8ad5ff4e9e5cb2582428bb9956582e3df8b42de400e8acd6e23f921ff8313cc62ceba63f40ceca3fc12c22d93f7091b4ae3cc36572fe967979fd3a8036be9d700ed29a11597b063021f6ffc46d1ba4a7fadb5a84c68b0b41e4b5320f8feafaae7922f3103d19e4aadeca797d5a482d3e062f6317ecd2c139ee06622061b8d31cbee0247821964877c8d0d29c9b601400d80b10633e72f55883b8a02faa43c5a0180f8d113418ab67d2b2e88cb65e083179133a265373093fb47885524b5f3fca8961f84db9af610a8e79a4175a5a85b7d7de67c8bd4ff6dd8074cc4088433407f27932789b8ed2571c10117d80d20b82dcbabb2669509afdffecd018457c56a981d8959d215cd310050f029fa5f0960a5a84a4eba9d6e9dce80d023f6f9754daba45e7d1f1730e82ab0980397a0fef94537f5799e51daf614c84c8bfe48ecb7db96bf8d0a605dba87391d41ada2313145089bb96fc84c7519869fe23bcb8956e2b7b01058924c6d7efa0e3cf58dafd25d76a82fad7a85340d70b42b56fee32dc1a089b35f5955137299cb54df66a18f2cbbc25f44f6a8b525cb84b0245c8af193bda1890986ad9e9e646b516cb1fd536a7ecd933abff35c4906c88ae35b20b5c0c51c871119ab02df635e7630ec5fafbeaa425a4d6b28a967a76c0a0401c59bf413e52a19495c72e8a6af2fbdbe41872e265ef202da3f07c460d84b0c10e3b18612c1053cee7bc1870d10b936db8e54ea9f7ddbb2200a37154c72bde43069a6cbebbcb48318da1cd3aaccbb9b9b46af00976d11c9f383f0c22d1f8710d668d2173cfdfeaafc7d2ace1e7137adf72ca404f90cf84e7ee2879e2408464239983820fc9095be18d848c5253ad9b15119ebfbb95f80ef2feec493c3b1b77ea4a49cc81dacd1b4409eb8eef87ccb5be5b845a3ff4b2ccce6e68fc7372bec06f152879e86cd4677385e2750ecfaae32b3dbc665ec4dd33e58f55e9dee93e29c0f8863cc9868949965209a3c98309002dc596c09f91fdb2655ca0dfb71f437d4a2dfe1aab5b6bd379cb8ca4a4d8dd580f89113d8ff48304f2b048ebb4263c42cb716d43560cfa502af119d99d2a087c0293680976262c1721e5df04a06f2f42dde9e2a92a4069aea8422e1ae484a5ebf5826505fd920dc3a4507d736cde6dd1b02961b11c27917f39575909418e85e6d3ebac6c654045e1b832cc8d775f2beebd08872f777f82e87d2b00e8f8ea9d57c626c7408ffa4b328e01856acc13df81a67436011d8c220df088f8b7240dfcb161869009a53a9ba2c43bbdf3487b0e2aed4f39960bb7cc99340f2a2f4ec3a52fd6b5bef47cd9306444dc9b8110538dccb10bfe23ce3430fafc82b0d92a53b8cd15fee7b2f196948acf3b98b42f6f1b8d6bcd8fbe82ceca93b47995220df4f9918ec87b18628f3bad99c62c84cf9f9f031cbcebc9d9695b4d82067445b2b1b7f986d3efbf821a9d73069721414b059e167800de5aed959d669103e88103e4e173b8a8ccaa70050776011f8d8b06f341f0915887f8770bf5acd17aae7fe01d28b0cce041c999d59d4bda4fee3accfad8782e56b9a4769fd83b029b1e4da4a424b120e725cb665ff44286181c83aa35cc5bdc1019f6abea7928a3f8ee0ef95db1f93f128f88aecca96a36afb4de2e052899a019b33b1196531c6a73791a2c24994372371e14a3a751f37ccf72f844d6e505105a80553055c9bd521bf3f7b1b8b37daaa894da1e269f22ddbb5e872d86a89556e75df53c7ce45f4ce4fe7aaa69f5f65f867df5f9c914623a652b419f1746f26bba0b5413d4b74c4692c47c63fdfda1ef663bf1fa48ddd65de47bdc6bf3f1502a57085185795f911d6713f12c82da559f422b473f1db747e693e2a29857fbb5f8f7494795862bc5ccf3a2b865c38947fe415d4395ad65019f8ab8023863d02ab25ee035ca8c205f4d03cc1c9acf41993baa8e475bef706b3b162219ca4dac5d94e7efe12b80e4b68623181b7a7504f7f6d8ce10a94abe9aef0bbb373a8783afd4fe650566a57e8411519b9c9082cd95ba5f255afc6c2cc1c1c48b4011c127953e2c2819aa1383511c37ce3cf2b7f37b25c05cca8603c1150a8ffce69b778561000d9456aa4c6849cd05315e2317e93e41f15e77a082d1c21eacbefe35d620d1c3ceb36b9b558591808d820d06e9f80e270af264f29a0bc672853e793e4add6d8db2133200340622dd800f8b76d570ee89c2cb6cddfdeae94f8002ae60ac459bf0da36929f428992e81c19578fbbc62bc2db6f54dcd6439a4dd67ddb154e847f68252dc3566b38ad97edc25182f57080c3c27d38f9ac64721756e001e66d342cb08214b5ef9650f1e33deb913c323027b42d0891ecae4e6c91b55e9e202fb37</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>加密手册</category>
      </categories>
      <tags>
        <tag>加密手册</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker的安装及其日常使用</title>
    <url>/2020/docker/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Ubuntu安装</p>
<ol>
<li><code>sudo apt update</code> - 更新软件包</li>
<li><code>sudo apt -y install apt-transport-https ca-certificates curl software-properties-common</code> - 安装可能用到的依赖</li>
<li><code>curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</code> - 添加阿里云源的密钥</li>
<li><code>sudo add-apt-repository &quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;</code> - 添加阿里云源信息</li>
<li><code>sudo apt update</code> - 更新索引库</li>
<li><code>sudo apt-get remove docker docker-engine docker.io</code> - 如果存在docker需要先删除</li>
<li><code>sudo apt install docker-ce</code> - 安装docker</li>
</ol>
<p>Centos安装</p>
<ol>
<li><code>uname -r</code> - 查看内核版本(centos7 64位要求3.10+，centos6 64位要求2.6+)</li>
<li><code>yum update</code> - 更新底层库文件</li>
<li><code>yum erase -y docker docker-common docker-engine</code> - 移除可能存在的旧版docker</li>
<li><code>yum install -y yum-utils device-mapper-persistent-data lvm2</code> - 安装工具包和依赖项</li>
<li><code>yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</code> - 添加docker-ce源</li>
<li><code>yum makecache fast</code> - 做本地缓存，加快安装速度</li>
<li><code>yum -y install docker-ce</code> - yum安装docker</li>
<li><code>systemctl start docker</code> - 启动docker</li>
<li><code>systemctl enable docker</code> - 设置开机自启动</li>
</ol>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>配置主要就是更换docker源</p>
<p>Linux下更改国内镜像在<code>/etc/docker/daemon.json</code>中添加以下代码</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [</span><br><span class="line">        <span class="string">"http://hub-mirror.c.163.com"</span>,</span><br><span class="line">        <span class="string">"https://registry.docker-cn.com"</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="http://hub.daocloud.io/" target="_blank" rel="noopener">daocloud</a>也可以下载镜像，且有较详细的配置参数</p>
</blockquote>
<p>配置私服拉取镜像</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># /etc/docker/daemon.json</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line">  <span class="attr">"registry-mirrors":</span> <span class="string">["https://registry.docker-cn.com"],</span></span><br><span class="line">  <span class="attr">"insecure-registries":</span> <span class="string">["ip:port"]</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="comment"># systemctl daemon-reload</span></span><br><span class="line"><span class="comment"># systemctl restart docker</span></span><br></pre></td></tr></table></figure>

<p>也可以访问<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors" target="_blank" rel="noopener">阿里云镜像服务</a>，注册后获取镜像加速地址</p>
<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><h3 id="普通命令"><a href="#普通命令" class="headerlink" title="普通命令"></a>普通命令</h3><ul>
<li><code>docker version</code> - 查看docker版本</li>
<li><code>docker info</code> - 查看详细信息</li>
<li><code>docker network create isolated</code> - 创建docker网络</li>
</ul>
<h3 id="镜像管理"><a href="#镜像管理" class="headerlink" title="镜像管理"></a>镜像管理</h3><ul>
<li><code>docker pull 镜像名</code> - 下载镜像</li>
<li><code>docker images</code> - 查看所有本地的镜像</li>
<li><code>docker search 镜像名</code> - 查找镜像</li>
<li><code>docker rmi 镜像id/镜像名</code> - 删除镜像</li>
<li><code>docker save -o 导出的路径 镜像id</code> - 导出镜像到文件</li>
<li><code>docker load -i 镜像文件</code> - 加载本地到镜像文件</li>
<li><code>docker tag 镜像id 镜像名:镜像版本</code> - 重命名镜像</li>
<li><code>docker tag 旧镜像名:旧版本 新镜像名:新版本</code> - 复制一个镜像</li>
<li><code>docker push 地址名/仓库名/镜像名:版本名</code> - 推送镜像</li>
</ul>
<h3 id="容器管理"><a href="#容器管理" class="headerlink" title="容器管理"></a>容器管理</h3><ul>
<li><p><code>docker run -d -p 80:80 --name mynginx --rm nginx:latest [command]</code> - 创建并运行容器，</p>
<blockquote>
<ul>
<li><code>-d</code> - 后台运行</li>
<li><code>-i</code> - 启动一个可交互的容器，并持续打开标准输入</li>
<li><code>-t</code> - 终端关联到容器的标准输入输出上</li>
<li><code>-p port1:port2</code> - 指定端口 外部端口:内部端口</li>
<li><code>-v/--volume 外部文件夹:内部文件夹</code> - 数据卷操作，将外部文件夹映射到容器内部文件夹</li>
<li><code>--link 容器名:自定义网络别名</code> - 给容器网络设置别名</li>
<li><code>--name 容器名字</code> - 给创建的容器命名</li>
<li><code>-e 环境变量名=环境变量值</code> - 设置容器全局变量</li>
<li><code>--rm</code> - 为停止容器的时候容器自动删除</li>
<li><code>镜像名:版本号</code> - 指定镜像和版本，latest为最新版本，默认不写也为最新版本</li>
<li><code>command</code> - 表示运行容器时的启动命令</li>
</ul>
</blockquote>
</li>
<li><p><code>docker ps [-qa]</code> - 查看正在运行到容器</p>
<blockquote>
<ul>
<li><code>-q</code> - 只查看容器到标识</li>
<li><code>-a</code> - 查看全部到容器，包括未运行到容器</li>
</ul>
</blockquote>
</li>
<li><p><code>docker logs -f 容器id</code> - 查看容器到日志</p>
<blockquote>
<ul>
<li><code>-f</code> - 可以滚动到查看日志到最后几行</li>
</ul>
</blockquote>
</li>
<li><p><code>docker exec -it 容器ID/容器名 bash</code> - 进入到容器内部命令行</p>
</li>
<li><p><code>docker stop 容器名称/容器id</code> - 停止正在运行的容器</p>
</li>
<li><p><code>docker stop $(docker ps -qa)</code> - 停止所有的容器</p>
</li>
<li><p><code>docker rm -f 容器id</code> - 删除容器</p>
<blockquote>
<ul>
<li><code>-f</code> - 强制删除容器（包括正在运行的容器）</li>
</ul>
</blockquote>
</li>
<li><p><code>docker start 容器名称</code> - 运行已经创建的容器</p>
</li>
<li><p><code>docker restart 容器名称</code> - 重启正在运行的容器</p>
</li>
<li><p><code>docker cp 文件名 容器id:容器内部路径</code> - 拷贝文件到容器中</p>
</li>
<li><p><code>docker container ls -a</code> - 查看所有的容器，不加-a表示正在运行的容器</p>
</li>
<li><p><code>docker container prune</code> - 清空所有容器</p>
</li>
<li><p><code>docker inspect 容器id</code> - 获取容器底层信息</p>
<blockquote>
<ul>
<li><code>IPAddress</code> - ip地址</li>
</ul>
</blockquote>
</li>
</ul>
<h3 id="数据卷"><a href="#数据卷" class="headerlink" title="数据卷"></a>数据卷</h3><ul>
<li><p><code>docker volume create 数据卷名称</code> - 创建数据卷</p>
<blockquote>
<p>创建数据卷之后，默认会存放在/var/lib/docker/volumes/数据卷名称/_data</p>
</blockquote>
</li>
<li><p><code>docker volume inspect 数据卷名称</code> - 查看数据卷详细信息</p>
</li>
<li><p><code>docker volumes ls</code> - 查看全部数据卷</p>
</li>
<li><p><code>docker volumes rm 数据卷名称</code> - 删除数据卷</p>
</li>
<li><p><code>docker run -v 数据卷名称:容器内部路径 镜像id</code> - 映射数据卷，会自动复制容器的文件到宿主机文件夹</p>
</li>
<li><p><code>docker run -v 宿主机路径:容器内部路径 镜像id</code> - 直接指定一个路径作为数据卷的存放地址，这个地址是空的</p>
</li>
</ul>
<h3 id="自定义docker镜像"><a href="#自定义docker镜像" class="headerlink" title="自定义docker镜像"></a>自定义docker镜像</h3><ol>
<li>创建一个Dockerfile文件，并指定自定义镜像<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment">#: 注释，指令大小写不敏感，但是建议指令大写，内容小写</span></span><br><span class="line"><span class="keyword">FROM</span>: 指定当前自定义镜像依赖的环境，dockerfile第一条非注释的命令必须是<span class="keyword">from</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash">: 将相对路径下的内容复制到镜像中</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash">: 将文件写入到镜像中（和copy的区别是copy是运行镜像时拷贝文件，add是构建镜像时拷贝进入）</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash">: 生命镜像到默认目录</span></span><br><span class="line"><span class="keyword">USER</span>: 镜像中的启动用户名</span><br><span class="line"><span class="keyword">RUN</span><span class="bash">: 构建镜像时执行命令</span></span><br><span class="line"><span class="keyword">ENV</span>: 指定镜像中的环境变量</span><br><span class="line"><span class="keyword">CMD</span><span class="bash">: 需要执行的命令（在workdir下执行，可以写多个，以最后一个为准）</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash">: 如果dockerfile中没有run命令，则运行镜像中 /entrypoint.sh 文件，注意需要给执行权限</span></span><br><span class="line"><span class="keyword">ARG</span>: 用于指定传递给构建运行时的变量</span><br><span class="line"><span class="keyword">EXPOSE</span>: 指定于外界交互的端口</span><br><span class="line"><span class="keyword">LABEL</span><span class="bash">: 用于为镜像添加元数据</span></span><br><span class="line">  <span class="keyword">maintainer</span>: 维护者信息</span><br><span class="line">  version: 版本信息</span><br></pre></td></tr></table></figure></li>
<li>制作镜像<code>docker build -t 镜像名称:[tag] .</code><blockquote>
<ul>
<li><code>-t</code> - 指定版本</li>
<li><code>.</code> - 表示将当前目录下的文件编译为镜像</li>
</ul>
</blockquote>
</li>
<li>docker commit和docker build的区别<br><code>docker commit 容器id 自定义镜像名字</code> - 将容器打包成镜像<br><code>docker build -t 镜像名称:[tag] .</code> - 通过dockerfile创建镜像</li>
</ol>
<h3 id="Docker-compoes"><a href="#Docker-compoes" class="headerlink" title="Docker-compoes"></a>Docker-compoes</h3><ol>
<li>下载docker-compose文件，直接从github下载对应文件，修改文件的可执行权限并配置环境变量即可使用</li>
<li>编写docker-compose.yml文件<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span>          <span class="comment"># 指定版本号，该配置为固定配置，根据不同的docker-compose决定</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql:</span>              <span class="comment"># 服务的名称</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span>   <span class="comment"># 表示只要docker启动了，容器就一起启动</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7</span>  <span class="comment"># 指定镜像</span></span><br><span class="line">    <span class="attr">continer_name:</span> <span class="string">mysql</span>  <span class="comment"># 指定容器的名称</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3306</span><span class="string">:3306</span>     <span class="comment"># 指定端口号映射</span></span><br><span class="line">    <span class="attr">envirement:</span>       <span class="comment"># 指定环境变量</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">~/volumes/mysql/data:/var/lib/mysql</span>   <span class="comment"># 指定数据卷</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="推送镜像到阿里云"><a href="#推送镜像到阿里云" class="headerlink" title="推送镜像到阿里云"></a>推送镜像到阿里云</h2><ol>
<li>首先在阿里云创建命名空间，相当于仓库名</li>
<li><code>docker login --username=王大锤 registry.cn-hangzhou.aliyuncs.com</code> 本地登录阿里云</li>
<li><code>docker tag 旧镜像名:旧版本 新镜像名:新版本</code> 修改镜像名称<br><strong>注意</strong>：新镜像名需要按照：<code>阿里云地址/阿里云创建到命名空间/自定义名称或者阿里云创建的仓库名:版本</code>的格式</li>
<li><code>docker push 新镜像名:版本号</code>推送到阿里云镜像仓库</li>
<li><code>docker pull 新镜像名:版本号</code>将远端到镜像拉到本地</li>
</ol>
<h2 id="常见容器创建命令"><a href="#常见容器创建命令" class="headerlink" title="常见容器创建命令"></a>常见容器创建命令</h2><p><code>docker run -d -p 6379:6379 --name redis-master redis:latest redis-server --requirepass 1qaz2wsx</code> - 创建一个redis容器并设置密码为1qaz2wsx</p>
<p><code>docker run -d -p 6380:6379 --link redis-master:redis-master --name redis-slave-1 redis:latest redis-server --slaveof redis-master 6379 --masterauth 1qaz2wsx</code> - 创建一个redis从机容器，并关联名称为redis-server的主机</p>
<p><code>docker run -d -p 3306:3306 -v /root/docker/mysql/conf:/etc/mysql/mysql.conf.d -v /root/docker/mysql/data:/var/lib/mysql --name mysql57 -e &quot;MYSQL_ROOT_PASSWORD=123456&quot; mysql:5.7.29</code> - 创建一个MySQL的容器设置数据库密码为123456并将做数据备份</p>
<h2 id="常见故障"><a href="#常见故障" class="headerlink" title="常见故障"></a>常见故障</h2><h3 id="docker启动后命令无法使用"><a href="#docker启动后命令无法使用" class="headerlink" title="docker启动后命令无法使用"></a>docker启动后命令无法使用</h3><p>报错：Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.40/containers/json: dial unix /var/run/docker.sock: connect: permission denied</p>
<p>原因：docker进程使用Unix Socket而不是TCP端口。而默认情况下，Unix socket属于root用户，需要root权限才能访问。</p>
<p>解决办法：</p>
<ol>
<li>获取root权限使用docker</li>
<li>docker守护进程启动的时候，会默认赋予名字为docker的用户组读写Unix socket的权限，因此只要创建docker用户组，并将当前用户加入到docker用户组中，那么当前用户就有权限访问Unix socket了，进而也就可以执行docker相关命令</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo groupadd docker     <span class="comment">#添加docker用户组</span></span><br><span class="line">sudo gpasswd -a <span class="variable">$USER</span> docker     <span class="comment">#将登陆用户加入到docker用户组中</span></span><br><span class="line">newgrp docker     <span class="comment">#更新用户组</span></span><br><span class="line">docker ps    <span class="comment">#测试docker命令是否可以使用sudo正常使用</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>DRF的Serializer</title>
    <url>/2020/drf_serializer/</url>
    <content><![CDATA[<p>快速搞懂DRF并方便的使用<a id="more"></a></p>
<h2 id="名词释义："><a href="#名词释义：" class="headerlink" title="名词释义："></a>名词释义：</h2><p>序列化：模型转换为json，即对象-字典-json</p>
<p>反序列化：json转换为模型，即json-字典-对象</p>
<h2 id="字段参数"><a href="#字段参数" class="headerlink" title="字段参数"></a>字段参数</h2><p>默认使用模型中的字段约束进行校验，自定义字段约束参考<a href="https://www.django-rest-framework.org/api-guide/fields/" target="_blank" rel="noopener">Serializer fields</a></p>
<p>常用的约束包括：</p>
<ol>
<li>通用参数</li>
</ol>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td><code>read_only = True</code></td>
<td>当前字段只能进行序列化输出（用于不需要反序列化输入的字段）</td>
</tr>
<tr>
<td><code>write_only = True</code></td>
<td>当前字段只能进行反序列化输入，不进行序列化输出</td>
</tr>
<tr>
<td><code>required = True</code></td>
<td>在反序列化时是必填字段，默认为True</td>
</tr>
<tr>
<td><code>allow_null = False</code></td>
<td>当前字段是否允许传None，默认是False（必填字段False，反之则True）</td>
</tr>
<tr>
<td><code>allow_blank = False</code></td>
<td>当前字段是否运行为空，默认是False（必填字段False，反之则True）</td>
</tr>
<tr>
<td><code>default = xx</code></td>
<td>指定在反序列化时，当前字段没值时所使用的默认值</td>
</tr>
<tr>
<td><code>validators=校验器</code></td>
<td>当前字段所使用的校验器（下面介绍常用的）</td>
</tr>
<tr>
<td><code>error_messages</code></td>
<td>包含错误key-value的字段（下面会举例）</td>
</tr>
<tr>
<td><code>label</code></td>
<td>当前字段在前端的api页面中所显示的字段名称</td>
</tr>
</tbody></table>
<ol start="2">
<li>选项参数</li>
</ol>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td><code>max_length</code></td>
<td>字段最大长度</td>
</tr>
<tr>
<td><code>min_length</code></td>
<td>字段最小长度</td>
</tr>
<tr>
<td><code>trim_whitespace</code></td>
<td>是否截断空字符串</td>
</tr>
<tr>
<td><code>max_value</code></td>
<td>字段最大值</td>
</tr>
<tr>
<td><code>min_value</code></td>
<td>字段最小值</td>
</tr>
</tbody></table>
<h2 id="字段校验-反序列化"><a href="#字段校验-反序列化" class="headerlink" title="字段校验(反序列化)"></a>字段校验(反序列化)</h2><p>对单个字段校验使用的是<code>validate_&lt;filed_name&gt;</code>，如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">validate_name</span><span class="params">(self, value)</span>:</span></span><br><span class="line">	<span class="keyword">if</span> User.objects.filter(name=value):</span><br><span class="line">		<span class="keyword">raise</span> serializers.ValidationError(detail=<span class="string">'用户名已存在'</span>)</span><br><span class="line">	<span class="keyword">return</span> value</span><br></pre></td></tr></table></figure>

<p>对所有字段校验使用的是<code>validate</code>，如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">validate</span><span class="params">(self,attr)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> attr[<span class="string">'name'</span>] <span class="keyword">or</span> attr[<span class="string">'email'</span>]:</span><br><span class="line">        <span class="keyword">return</span> attr</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> serializers.ValidationError(detail=<span class="string">'用户名或邮箱至少填一个'</span>)</span><br></pre></td></tr></table></figure>

<p>校验顺序：</p>
<ol>
<li>参数限定校验，（失败则不会向下校验）</li>
<li>单字段校验（无论成功或失败都会继续校验）</li>
<li>多字段校验</li>
</ol>
<p>校验数据的使用：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 指定需要校验的数据</span></span><br><span class="line">serializer = self.serializer_class(data=request.data)</span><br><span class="line"><span class="comment"># 进行字段校验，如果失败则会报错</span></span><br><span class="line">serializer.is_valid(raise_exception=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 获取校验未通过的提示</span></span><br><span class="line">serializer.errors</span><br><span class="line"><span class="comment"># 获取校验通过的数据</span></span><br><span class="line">serializer.validated_date</span><br></pre></td></tr></table></figure>

<h2 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h2><p>指定序列化字段：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">    model = User</span><br><span class="line">    <span class="comment"># 指定字段使用元组，所有字段使用"__all__"</span></span><br><span class="line">    fields = (<span class="string">'name'</span>, <span class="string">'age'</span>,)</span><br><span class="line">    <span class="comment"># 指定只能序列化，无法反序列化的字段</span></span><br><span class="line">    read_only_fields = (<span class="string">'created_at'</span>, <span class="string">'updated_at'</span>)</span><br></pre></td></tr></table></figure>

<p>指定单个字段进行自定义序列化：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">password = serializers.SerializerMethodField()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_password</span><span class="params">(self, instance)</span>:</span></span><br><span class="line">    <span class="comment"># instance为当前的实例，即view中的get_object()</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"******"</span></span><br></pre></td></tr></table></figure>

<p>对所有字段进行自定义序列化：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_representation</span><span class="params">(self, instance)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> dict()</span><br></pre></td></tr></table></figure>

<p>view使用序列化：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 对data进行序列化，data为queryset或者object，如果是queryset，需要加上many=True</span></span><br><span class="line">serializer = self.serializer_class(data, many=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 返回一个OrderedDict，转换为列表即可得到指定的值</span></span><br><span class="line">result_dict = serializer.data</span><br></pre></td></tr></table></figure>

<h2 id="数据库写入操作"><a href="#数据库写入操作" class="headerlink" title="数据库写入操作"></a>数据库写入操作</h2><p>serializer提供了create和update的功能，分别对应post请求和put/patch请求。如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(self, instance, validated_data)</span>:</span></span><br><span class="line">    instance.update(**validated_data)</span><br><span class="line">    instance.updated_at = timezone.now()</span><br><span class="line">    instance.save()</span><br><span class="line">    <span class="keyword">return</span> instance</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create</span><span class="params">(self, validated_data)</span>:</span></span><br><span class="line">    instance = User(**validated_data)</span><br><span class="line">    instance.save()</span><br><span class="line">    <span class="keyword">return</span> instance</span><br></pre></td></tr></table></figure>

<h2 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h2><p><a href="https://www.jianshu.com/p/36b5c410b357" target="_blank" rel="noopener">Django_rest framework_序列化器和自定义校验</a></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Django</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Edge上手</title>
    <url>/2020/edge/</url>
    <content><![CDATA[<p>记录一些Edge插件和用法<a id="more"></a></p>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="iGG谷歌访问助手"><a href="#iGG谷歌访问助手" class="headerlink" title="iGG谷歌访问助手"></a>iGG谷歌访问助手</h3><p>安装地址：<a href="https://microsoftedge.microsoft.com/addons/detail/mchibleoefileemjfghfejaggonplmmg?hl=zh-CN" target="_blank" rel="noopener">iGG谷歌访问助手</a></p>
<p>该插件可以通过Edge商店安装，安装该助手可以访问到google旗下的一些网站，例如谷歌搜索、谷歌play、Gmail，最重要的是可以访问Chrome插件商店，那么Chrome商店中所有的插件都可以安装了。</p>
<h3 id="PDF-Viewer"><a href="#PDF-Viewer" class="headerlink" title="PDF Viewer"></a>PDF Viewer</h3><p>安装地址：<a href="https://chrome.google.com/webstore/detail/pdf-viewer/oemmndcbldboiebfnladdacbdfmadadm" target="_blank" rel="noopener">PDF Viewer</a></p>
<p>Edge目前有一个较大的功能缺失就是PDF阅读，使用该插件可以有效的弥补该功能的缺陷，该插件在Edge插件商店没有上架，只能科学上网访问Chrome插件商店安装。</p>
<p><strong>注意</strong>：</p>
<blockquote>
<ol>
<li>Edge 86以上的版本中阅读pdf已经带有目录</li>
<li>使用该插件需要在插件的设置中勾选允许访问文件URL</li>
</ol>
</blockquote>
<h3 id="IDM-Integration-Module"><a href="#IDM-Integration-Module" class="headerlink" title="IDM Integration Module"></a>IDM Integration Module</h3><p>这是一个IDM的补充插件，在安装IDM的时候会自动进入微软商店进行安装。安装好后可以进行网页嗅探，比如视频，歌曲等内容都能嗅探到下载链接。该插件没有安装地址，只需安装IDM即可。IDM相关信息详见：<a href="/2020/04/21/Windows%E8%BD%AF%E4%BB%B6%E6%89%8B%E5%86%8C/#IDM">IDM</a></p>
<p><strong>注意</strong>：该插件只适用于Windows</p>
<h3 id="Tampermonkey"><a href="#Tampermonkey" class="headerlink" title="Tampermonkey"></a>Tampermonkey</h3><p>安装地址：<a href="https://microsoftedge.microsoft.com/addons/detail/tampermonkey/iikmkjmpaadaobahmlepeloendndfphd?hl=zh-CN" target="_blank" rel="noopener">Tampermonkey</a></p>
<p>油猴插件，浏览器最强大的扩展插件，通过安装脚本可以获得许多高级的功能，该插件在Edge插件商店和Chrome插件商店都有。</p>
<p>脚本推荐：</p>
<blockquote>
<ol>
<li>科学上网插件，详情参见<a href="/2020/gwf/">科学上网</a></li>
<li>网盘助手插件， <a href="https://greasyfork.org/zh-CN/scripts/378301" target="_blank" rel="noopener">网盘助手</a> 获取脚本，进入百度网盘，选中文件，点击生成链接，获得链接后使用IDM或者迅雷即可下载</li>
<li>网页翻译插件，<a href="https://greasyfork.org/zh-CN/scripts/389784" target="_blank" rel="noopener">翻译</a> 获取脚本，支持三种翻译引擎</li>
<li>百度优化插件，<a href="https://greasyfork.org/zh-CN/scripts/14178" target="_blank" rel="noopener">百度重定向插件</a> 获取脚本，支持去除百度链接的重定向，去除广告，自动翻页等功能</li>
<li>倍速视频插件，<a href="https://greasyfork.org/zh-CN/scripts/372673" target="_blank" rel="noopener">计时器掌控者</a> 自定义倍速视频，可以方便跳过广告</li>
</ol>
</blockquote>
<h3 id="谷歌翻译"><a href="#谷歌翻译" class="headerlink" title="谷歌翻译"></a>谷歌翻译</h3><p>安装地址：<a href="https://chrome.google.com/webstore/detail/google-translate/aapbdbdomjkkjkaonfhkkikfgjllcleb" target="_blank" rel="noopener">谷歌翻译</a></p>
<p>便捷上国外网站使用，可以进行网页翻译，也可以使用划词查询。使用划词查询需要允许上传内容。</p>
<p><strong>注意</strong>：该插件的所有翻译均是通过translate.google.com提供支持。需要使用科学上网才能进行正常的翻译使用。使用谷歌访问助手也可。</p>
<h3 id="彩云小译"><a href="#彩云小译" class="headerlink" title="彩云小译"></a>彩云小译</h3><p>安装地址：<a href="https://microsoftedge.microsoft.com/addons/detail/%E5%BD%A9%E4%BA%91%E5%B0%8F%E8%AF%91-%E7%BD%91%E9%A1%B5%E7%BF%BB%E8%AF%91%E6%8F%92%E4%BB%B6/abbgboelhkajgikdbjclaecchkneaoma" target="_blank" rel="noopener">彩云小译</a></p>
<p>一款支持划词翻译、整个网页翻译的插件，该插件不用使用科学上网即可使用，并且该插件进行整页翻译时会保留原来的网页内容。方便进行对照。在一定程度上比谷歌翻译更好用。</p>
<h3 id="AdblockPlus"><a href="#AdblockPlus" class="headerlink" title="AdblockPlus"></a>AdblockPlus</h3><p>安装地址：<a href="https://microsoftedge.microsoft.com/addons/detail/adblock-plus-%E5%85%8D%E8%B4%B9%E7%9A%84%E5%B9%BF%E5%91%8A%E6%8B%A6%E6%88%AA%E5%99%A8/gmgoamodcdcjnbaobigkjelfplakmdhh" target="_blank" rel="noopener">AdblockPlus</a></p>
<p>广告拦截器，该插件可以拦截大部分的弹窗广告，使用拦截元素还可以去除掉百度热搜之类的内容</p>
<h3 id="Cookie-Editor"><a href="#Cookie-Editor" class="headerlink" title="Cookie Editor"></a>Cookie Editor</h3><p>安装地址：<a href="https://microsoftedge.microsoft.com/addons/detail/cookie-editor/ajfboaconbpkglpfanbmlfgojgndmhmc" target="_blank" rel="noopener">Cookie Editor</a></p>
<p>能够更方便的编辑网站的cookie内容，在浏览器控制台-应用程序-存储-Cookie中也可以进行相同的编辑</p>
<h3 id="Dark-Reader"><a href="#Dark-Reader" class="headerlink" title="Dark Reader"></a>Dark Reader</h3><p>安装地址：<a href="https://microsoftedge.microsoft.com/addons/detail/dark-reader/ifoakfbpdcdoeenechcleahebpibofpc" target="_blank" rel="noopener">DarkReader</a></p>
<p>这个插件对长时间使用浏览器用户非常友好，可以自适应计算界面的颜色，使整个网页背景变为黑色，该插件在大部分的网页上的显示都非常完美。但是依然会有部分网页显示可能有问题。</p>
<p><strong>注意:</strong> 最近才发现Edge浏览器自带这个功能，在设置外观中将主题改为黑色，然后进入<code>edge://flags</code>，将<code>Force Dark Mode for Web Contents</code> 改为Enable也能实现黑色效果</p>
<h3 id="Listen1"><a href="#Listen1" class="headerlink" title="Listen1"></a>Listen1</h3><p>安装地址：<a href="https://github.com/listen1/listen1_chrome_extension/releases" target="_blank" rel="noopener">github</a> ，<a href="https://microsoftedge.microsoft.com/addons/detail/listen-1/hneiglcmpeedblkmbndhfbeahcpjojjg?hl=zh-CN" target="_blank" rel="noopener">微软插件商店</a></p>
<p>浏览器听歌聚合平台。聚合了包括网易云音乐、虾米音乐、咪咕音乐、QQ音乐等平台的歌曲，可以同步歌单到Github Gist。</p>
<h3 id="Undo-closed-tabs-button"><a href="#Undo-closed-tabs-button" class="headerlink" title="Undo closed tabs button"></a>Undo closed tabs button</h3><p>安装地址：<a href="https://microsoftedge.microsoft.com/addons/detail/undo-closed-tabs-button/hfigadnahbppkfoomjopnladdokbmnkc" target="_blank" rel="noopener">Undo closed tabs button</a></p>
<p>一个可以便捷恢复已经关闭的tabs页的插件。</p>
<h3 id="百度药丸"><a href="#百度药丸" class="headerlink" title="百度药丸"></a>百度药丸</h3><p>安装地址：<a href="https://microsoftedge.microsoft.com/addons/detail/%E7%99%BE%E5%BA%A6%E8%8D%AF%E4%B8%B8-baidu-capsule/hmmpaaklbinfllncmnnbdhedmhafnjkj" target="_blank" rel="noopener">百度药丸</a></p>
<p>解决网页使用百度的许多痛点，比如去掉百度热搜（分散注意力的东西）、去除推广、阻止百度推广等。常用百度的人员必备插件。</p>
<h3 id="有范全网通"><a href="#有范全网通" class="headerlink" title="有范全网通"></a>有范全网通</h3><p>安装地址：<a href="http://www.ufanw.com/" target="_blank" rel="noopener">有范全网通</a></p>
<p>可以看到视频网站上VIP的视频</p>
<h2 id="高级输入"><a href="#高级输入" class="headerlink" title="高级输入"></a>高级输入</h2><p><code>thisisunsafe</code> - 遇到网页因为不安全而无法访问且没有跳过按钮的情况，不用定位光标到任何位置，活动窗口选择为Edge浏览器，直接输入即可</p>
<p><code>edge://flags</code></p>
<ul>
<li><code>Parallel downloading</code> - 开启并行下载（使用多线程下载）</li>
<li><code>Force Dark Mode for Web Contents</code> - 对网页内容强制启用黑夜模式</li>
</ul>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>Edge</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub 开发流程</title>
    <url>/2020/git/</url>
    <content><![CDATA[<p>详细介绍一些Git的工作流程步骤和相关的命令<a id="more"></a></p>
<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>GitHub flow算是一种相对简单的Git工作流程，主要步骤为下：</p>
<p>其中上游分仓库称为upstream，远端仓库称为origin。</p>
<ol>
<li>首先从upstream仓库fork代码到远端仓库，然后将远端仓库克隆到本地。</li>
<li>给本地仓库添加一个upstream仓库，方便同步最新代码</li>
<li>从本地的master（或者develop，根据公司要求）创建一个功能开发分支切换到功能开发分支上进行功能的开发。</li>
<li>开发完成后，将代码提交并推送到origin</li>
<li>在origin上发起一个pull request请求，代码将会发送给审查者review。</li>
</ol>
<p>Git flow是一个更规范实用的Git工作流。</p>
<ol>
<li>从远端仓库克隆工作分支到本地，然后本地切换到自己的开发分支上</li>
<li>进行功能开发，开发完成后合并到主开发分支</li>
<li>如果升级就从开发分支先合并到release分支，release再合并到线上分支</li>
<li>如果遇到紧急bug修复，创建hotfix分支，修复后分别合并到线上和开发分支</li>
</ol>
<h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><ol>
<li><p><code>git clone 仓库地址</code> - 克隆远端仓库到本地，通常情况下只会克隆master</p>
<blockquote>
<p>  –depth=1 - 只克隆最新提交内容，不克隆历史记录</p>
</blockquote>
</li>
<li><p><code>git remote add upstream git@github.com:fe/github-flow.git</code> - 添加upstream仓库</p>
</li>
<li><p><code>git checkout -b 开发分支名 基于的分支名</code> - 创建并切换到开发分支，默认基于master分支</p>
<blockquote>
<p><code>git checkout -b product origin/product</code> - 基于远端分支创建新的分支</p>
</blockquote>
</li>
<li><p><code>git rebase -i 合并多个提交的前一个提交编码</code> - 将多个提交合并为一个提交</p>
<blockquote>
<p>  p/pick - 为保留该提交</p>
<p>  s/squash  - 保留提交记录，并将提交合并到之前的提交上</p>
<p>  d/drop - 删除该提交记录</p>
</blockquote>
<p><code>git pull upstream master --rebase</code> - 长时间未同步时同步上游代码保持本地与上游代码一致</p>
</li>
</ol>
<h2 id="升级流程"><a href="#升级流程" class="headerlink" title="升级流程"></a>升级流程</h2><p>Github flow升级</p>
<ol>
<li><p>本地打tag，然后推送到upstream的master</p>
<p><code>git tag 标签内容</code> - 打标签</p>
<p><code>git push upstream 标签内容</code> - 将标签推送到远端</p>
</li>
<li><p>upstream的master提一个pr到upstream的product</p>
</li>
</ol>
<p>Git flow升级</p>
<ol>
<li><p>develop提pr到master分支</p>
</li>
<li><p>本地pull master的分支</p>
</li>
<li><p>本地打tag，推送到远端触发升级</p>
<blockquote>
<p><code>git tag 标签内容</code> - 本地打标签</p>
<p><code>git push upstream 标签名</code> - 推送到远端分支</p>
</blockquote>
</li>
</ol>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="在命令行显示git分支"><a href="#在命令行显示git分支" class="headerlink" title="在命令行显示git分支"></a>在命令行显示git分支</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">git_branch</span></span>() &#123;      git branch 2&gt; /dev/null | sed -e <span class="string">'/^[^]/d'</span> -e <span class="string">'s/ (.*)/(\1)/'</span> &#125;</span><br><span class="line"><span class="built_in">export</span> PS1=<span class="string">"\u@[\033[32m]\w[\033[33m]\$(git_branch)[\033[00m]\$ "</span></span><br></pre></td></tr></table></figure>

<p>如果希望立即生效，在命令行执行一下代码即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source $HOME&#x2F;.bashrc</span><br></pre></td></tr></table></figure>

<h3 id="git中文文件名显示问题"><a href="#git中文文件名显示问题" class="headerlink" title="git中文文件名显示问题"></a>git中文文件名显示问题</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global core.quotepath false</span><br></pre></td></tr></table></figure>

<h3 id="遇到conflict处理"><a href="#遇到conflict处理" class="headerlink" title="遇到conflict处理"></a>遇到conflict处理</h3><p>当使用<code>git pull upstream master --rebase</code>的时候，可能会遇到conflict的问题。处理办法：</p>
<blockquote>
<ol>
<li>遇到conflict时，分支会自动切换到临时分支上，并且在冲突地方给出提示。</li>
<li>手动进行冲突处理</li>
<li>使用<code>git add .</code>将重新处理的添加到暂存区</li>
<li>使用<code>git rebase --continue</code>恢复到之前到分支上，完成处理</li>
</ol>
</blockquote>
<h3 id="其他git命令"><a href="#其他git命令" class="headerlink" title="其他git命令"></a>其他git命令</h3><p><code>git branch -m oldName newName</code> - 分支重命名</p>
<p><code>git branch -d/-D 分支名</code> - 删除分支</p>
<p><code>git branch -a</code> - 查看所有本地分支和远端分支</p>
<p><code>git remote -v</code> - 查看所有远端仓库地址</p>
<p><code>git push origin --delete 分支名</code> - 删除远端分支</p>
<p><code>git config --list</code> - 查看本机git用户信息</p>
<blockquote>
<p><code>git config user.name</code></p>
<p><code>git config user.email</code></p>
</blockquote>
<p><code>git commit --amend --reset-author</code> - 修改commit提交作者</p>
<p><code>git commit --date=&quot;周 月 日 时间 年 +0800&quot; -am &quot;提交&quot;</code> - 指定commit时间和内容</p>
<p><code>git commit --amend --date=&quot;Thu Aug 9 23:04:57 2018 -0700&quot;</code> - 修改commit时间</p>
<p><code>git show</code> - 查看最近一次提交的变更</p>
<blockquote>
<p><code>git show -5</code> - 查看最近五次提交的变更</p>
<p><code>git show commit_id</code> - 查看指定提交的变更</p>
</blockquote>
<p><code>git remote update origin --prune</code> - Git刷新分支</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub使用方法</title>
    <url>/2020/github/</url>
    <content><![CDATA[<p>使用GitHub的一些技巧<a id="more"></a></p>
<h2 id="GitHub加速访问"><a href="#GitHub加速访问" class="headerlink" title="GitHub加速访问"></a>GitHub加速访问</h2><h3 id="1-修改host文件达到加速目的"><a href="#1-修改host文件达到加速目的" class="headerlink" title="1. 修改host文件达到加速目的"></a>1. 修改host文件达到加速目的</h3><p>以下方法被写在一个python文件中，可以直接使用<a href="https://github.com/stolenzc/github_faster" target="_blank" rel="noopener">github faster</a>执行python文件进行修改刷新</p>
<ol>
<li>获取GitHub网站的最快地址，使用<a href="https://www.ipaddress.com/" target="_blank" rel="noopener">https://www.ipaddress.com/</a>开获取GitHub的IP地址</li>
<li>修改hosts文件，Mac和Linux在<code>/etc/hosts</code>下，Windows在通常在<code>C:\windows\System32\drivers\etc\hosts</code>下，在结尾添加以下地址的IP</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">140.82.114.4 github.com</span><br><span class="line">199.232.69.194 github.global.ssl.fastly.net</span><br><span class="line">64.71.168.201 github.community</span><br><span class="line">199.232.68.133 avatars.githubusercontent.com</span><br><span class="line">199.232.68.133 avatars0.githubusercontent.com</span><br><span class="line">199.232.68.133 avatars1.githubusercontent.com</span><br><span class="line">199.232.68.133 avatars2.githubusercontent.com</span><br><span class="line">199.232.68.133 avatars3.githubusercontent.com</span><br><span class="line">199.232.68.133 avatars4.githubusercontent.com</span><br><span class="line">199.232.68.133 camo.githubusercontent.com</span><br><span class="line">199.232.68.133 cloud.githubusercontent.com</span><br><span class="line">199.232.68.133 githubusercontent.com</span><br><span class="line">199.232.96.133 user-images.githubusercontent.com</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>刷新hosts文件，Mac和Linux可以使用<code>sudo killall -HUP mDNSResponder</code>，Windows使用<code>ipconfig /flushdns</code></li>
</ol>
<p>参考文档：<a href="https://www.jianshu.com/p/238f8242e1a6" target="_blank" rel="noopener">Mac 解决GitHub下载速度太慢问题</a></p>
<h3 id="2-使用加速镜像克隆"><a href="#2-使用加速镜像克隆" class="headerlink" title="2. 使用加速镜像克隆"></a>2. 使用加速镜像克隆</h3><p>该方法只适用与对代码仓库进行克隆，不支持ssh方法</p>
<p>使用 <code>github.com.cnpmjs.org</code> 来替换原本的网站中的 <code>github.com</code></p>
<p>如 <code>git clone https://github.com/stolenzc/github_faster.git</code> 替换为 <code>git clone https://github.com.cnpmjs.org/stolenzc/github_faster.git</code></p>
<h2 id="快速项目检索"><a href="#快速项目检索" class="headerlink" title="快速项目检索"></a>快速项目检索</h2><p>检索方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">in</span>:name xxx <span class="comment"># 按照项目名/仓库名搜索（大小写不敏感）</span></span><br><span class="line"><span class="keyword">in</span>:readme xxx <span class="comment"># 按照README搜索（大小写不敏感）</span></span><br><span class="line"><span class="keyword">in</span>:description xxx <span class="comment"># 按照description搜索（大小写不敏感）</span></span><br><span class="line">stars:&gt;xxx <span class="comment"># stars数大于xxx</span></span><br><span class="line">forks:&gt;xxx <span class="comment"># forks数大于xxx</span></span><br><span class="line">language:xxx <span class="comment"># 编程语言为xxx</span></span><br><span class="line">pushed:&gt;YYYY-MM-DD <span class="comment"># 最新更新时间晚于YYYY-MM-DD</span></span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>多个条件之间可以使用空格隔开</p>
<h2 id="Release发包"><a href="#Release发包" class="headerlink" title="Release发包"></a>Release发包</h2><ol>
<li>在项目的release窗格下，点击<code>Draft a new release</code></li>
<li>填入Tag版本，描述之类的东西，然后点击或者将文件拖入到<code>Attach binaries by dropping them here or selecting them.</code></li>
<li>点击<code>Publish release</code>即可完成发包，如果是测试包，可以勾选上<code>this is a pre-release</code></li>
</ol>
<h2 id="GitHub-Action"><a href="#GitHub-Action" class="headerlink" title="GitHub Action"></a>GitHub Action</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>GitHub官方action仓库：<a href="https://github.com/marketplace?type=actions" target="_blank" rel="noopener">Github Action官方市场</a>，第三方仓库：<a href="https://github.com/sdras/awesome-actions" target="_blank" rel="noopener">wesome actions</a></p>
<p>使用action方式：使用git的指针概念，详情参考<a href="https://docs.github.com/cn/free-pro-team@latest/actions/creating-actions/about-actions" target="_blank" rel="noopener">Github Docs</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">actions/setup-node@74bc508</span> <span class="comment"># 指向一个 commit</span></span><br><span class="line"><span class="string">actions/setup-node@v1.0</span>    <span class="comment"># 指向一个标签</span></span><br><span class="line"><span class="string">actions/setup-node@master</span>  <span class="comment"># 指向一个分支</span></span><br></pre></td></tr></table></figure>

<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>在项目根目录下的<code>.github/workflows/</code>下的yml文件</p>
<p>yml文件配置：</p>
<ol>
<li><p>name: workflow的名称，如果未设置默认为yml文件名</p>
</li>
<li><p>on: 触发action的条件，可选为<code>on.&lt;push|pull_request&gt;.&lt;tags|branches&gt;</code></p>
</li>
<li><p>jobs: workflow的工作主体，表示每一项具体的工作，jobs下面通常需要写清楚job_id，可以自定义。如<code>jobs:build</code>。job_id下面为以下字段：</p>
<ol>
<li><p><code>name</code>: 定义字段任务说明</p>
</li>
<li><p><code>needs</code>: 表示任务的依赖关系，表示运行该任务之前必须运行什么。</p>
</li>
<li><p><code>runs-on</code>: 运行任务需要的虚拟机环境，可选参数为：</p>
<blockquote>
<p><code>ubuntu-latest</code>，<code>ubuntu-18.04</code>或<code>ubuntu-16.04</code></p>
<p><code>windows-latest</code>，<code>windows-2019</code>或<code>windows-2016</code></p>
<p><code>macOS-latest</code>或<code>macOS-10.14</code></p>
</blockquote>
</li>
<li><p><code>steps</code>: 每个job包含的步骤，可以配置为:</p>
<blockquote>
<p><code>name</code>: 步骤名称</p>
<p><code>uses</code>: 使用的action</p>
<p><code>with</code>: github action的入参</p>
<p><code>run</code>: 执行的命令</p>
<p><code>env</code>: 设置为环境变量</p>
</blockquote>
</li>
</ol>
</li>
</ol>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>hexo项目编译并发送到阿里云ESC的指定目录</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">build</span> <span class="string">and</span> <span class="string">deploy</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span> <span class="comment"># If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">persist-credentials:</span> <span class="literal">false</span></span><br><span class="line">        <span class="comment"># checkout到你的hexo代码分支</span></span><br><span class="line">        <span class="attr">ref:</span> <span class="string">master</span></span><br><span class="line">        <span class="comment"># hexo需要加载内部子模块</span></span><br><span class="line">        <span class="attr">submodules:</span> <span class="literal">true</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">and</span> <span class="string">Build</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">aliyun</span> <span class="string">server</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">easingthemes/ssh-deploy@v2.0.7</span></span><br><span class="line">      <span class="attr">env:</span></span><br><span class="line">        <span class="attr">SSH_PRIVATE_KEY:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ALIYUN_SERVER_ACCESS_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">ARGS:</span> <span class="string">"-avz --delete"</span></span><br><span class="line">        <span class="attr">SOURCE:</span> <span class="string">"public/"</span></span><br><span class="line">        <span class="attr">REMOTE_HOST:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.ALIYUN_SERVER_HOST</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">REMOTE_USER:</span> <span class="string">"root"</span></span><br><span class="line">        <span class="attr">TARGET:</span> <span class="string">"/home/blog/"</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>该配置需要在secret里面配置阿里云的私钥，然后将阿里云的公钥添加到阿里云的<code>~/.ssh/authorized_keys</code>文件中添加阿里云中生成的公钥</p>
<p>该配置表示直接将hexo编译后的deploy下的文件拷贝到/blog/下，没有二级目录。</p>
</blockquote>
<p>参考内容：<a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html" target="_blank" rel="noopener">阮一峰博客</a>， <a href="https://didiheng.com/front/2019-12-11.html#github-action%E5%8F%91%E5%B8%83%E9%98%BF%E9%87%8C%E4%BA%91ecs" target="_blank" rel="noopener">Github Action发布阿里云ECS</a></p>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>科学上网法</title>
    <url>/2020/gwf/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">您好, 这里需要密码.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="633f90b94ecae115cf1494babb8ecd74480e6c4e69658fd89693a2e724f0cec9">ed20d05e462203ad104ef6c1cbc6b8bd29b72b2f3868549afc1ee1c55300659d5437e3eeca349d4830fc944e90ef450884c73aaa568e6d206c05aeadc1a4e6d67fd46a66b1a4ba7e7dbbac1919a7a9d6fede75ad86a95c6bec8497ffbc6d0beb87c7c90e69598be8977bf68a02a2ee64a87c775dc53e9feb92306d8c7852a463b64cd745805ab0f1c0f93ec2159d0c81d442299cbf79e0854c5fca7f57811c29fd4d5142cf4ed730393927518311a97659ffdb405e40bd8a21a2231a8c7aefd8e0a621fe18a98b837ff9a61e6c5745e0b13e941e649c2f179ec06dd7f5250a13785314eb25409821ec58bd5cb438a4d2e8915071d500a8ee5f50db7b77a34f7a047503988a0b5789c9430f1ef1165bedb9ad4a51fb4db05b7f845ce56565a4a1010560fbae535b16e23fb99cdf860f28b823b0e90b2f7a22005914c4be5fc6f57a0ad90e53c3344481717dae81d621a314ca1651f7262aebc94287e7fe6a990fe74e4685baf10507ba5c47ed5beec77920dec84cafe185f885f95beefb253b52f31b6b6d4eeb667d9bd773a0ae0f5e87cf050b91880081100adc136a0e1c5a9d358409bd62b163b82e6440d7d628c58fce8b35c22aa2c0b1943c269ee03f9b52e8276874870e27ac53e12e4128e99e465693ec505ca67dd71ec33b9c204c6491d04a33dc28780fcfc47f973966ebadb9673ebd4bc8ac6fee322116b133b76e596a23601ba6f3e9e8fe998c578bac9428ca5d610355848d2fa6d476c35cc019ebef2bd270351acf39e2168bb543e1ec9ccd191c7c8fd2808833ab11b41c4b1fab3d01bfaed967d7b466f415673c3d49bb7af2ef22fba8b0b30890a0f55e04ba2403a13663702b96f416ce55d3d05fe7cad9824b675d84128de7e30710d7350e8b8d3bd96ca0e6129582ba94e7c967b55a89bc1b98c2f00f8f4d8e2ab1d0ae5d804d376bce1f894a4ac58ec8a3edbf4ccd474944cb47c50ab2415ffc599a77308d7555f0ccfcf2117ddcc36defe4f64cdf858b92d77ebb766f0e995dad85a38f3da9903a46ce5fcdf4a066a807ce159ad0981e65d60234e1ee3075a2fed0ee15ab9d071689196e0d7d0044f149ca86f519b43cc967ac767fdd98698b02bff143f2d4d903e97b56d9f3b7f9bfc7ed7fb8def19a6b1331d88f8bd79a96b61ab22c5ac8c96f735bb1aa8509fce806e880205a2d6c70b3d6277a43a1072cac93f1696ecb978dfd37f8797b62df53a1a4fe8480d9931513c46d24e9be2258d8fcc821f899e6a49ca0d2f9c1935ca01e1ccce2450ac672a5a6856cc81e27d151fe5ca30cef29fde6597ee3607c7a7ad36848981485d9a1352fc09ab7dff9e7c31ce59a33539f60ff7477c1d59c6dbcc75f1634dc23050a653b5ff1b0ffd241d0b4b03792d743c275fe6442ac9e239086b7bac9ab67597409e843dd6b63539ad376ed03a125dbac43d4bc8ef4876ffdcaea7eb5998ff1c7d77ac190ee652931a21c8ede7efdad7ce8716bc8321de4d361109643c9c7e27bc4fc1731f9abd7fdb541e6abac83b7fa5803308ec872139f61536072dc6a409fc448e78410a5ee03d2e70ff729b7f856cc232cab73cc15cf408119f5b9f6da9ad82f4ed0e4addd546e152b95a0b0343dec73e7deae50eb3b47e3a7896dac0c6d24613c81f39a9583a5c1d211eec1ff4f8747c66891c66a9b9a837301d1f0de7ece43011760bef479ea5d388674bb1aaf57ff84859a0f6a0270536345e98e12f3c15b1e53bb4264e4d02706ae300b942ce2132c51537dede70c437411f7cc90a549f7d2485ee80f83f8ca1e6ece322e93f3c0c28426f6b0a5ee929ee565e1fdc1f00493a43e74b43648ed6fd5ba5a4eaa4b90fa535dd76b09c34d96fc19e3d7f6029f46ebd8e4d5d064e7022efdfed819fac08bf75539c092e079581cc5b2e1d135316956de116be1caf9ebfa26750e29e2c5eb1e7f3ceba95401c02eb2819a81adb4d0cf0f1a3789ccd31f0f8fe0462325329c3de1b2b0acfc7e735af51ca1eb8cd7ffe2a5cfd4d3a681cf0e35ba76f89937bad5291b7c9beeec234b545060b987a07ae6bea11dceb8053a7708c3ad7fe219d5daeed9dfd141bead3fd21a1633c9daab43ad136fcf591d989f736e57ba0994ac16111d8447808d9f62a7e069dd4ecb6ba9d1bdc672d0b6dc4b8c31ca0a2e9613569585771c7c1e08f2dc305d9a81c277187c8d0b420ad4ed58187ed24ef39c108d347d2dcfce07d4606e3983ceb7abe676e78510546f6c07047aa735c4a2f6d1613754e686a2e58c296ab175fa5bfa814827a6a246653b66d52cc5ad6830b0713017087b597369fdc14528b276710612ad66e2ba532550308e4759c34800e867d09b589af0edeeecb3ff0545c47abb27fcc9c8d7f59f4ab8b038a1c4fc0db7e6ac498de2a6dc8c168b501623db72a3f25a56688d20b94c2e9f2585d17a25dc26e38db3dde5e1d7446d9a21fc159ffcc426be0371352b659aec5fcf4f157dd13cf1748815c80b5b7cd3b589e962a15a80db4d1f6c6d4e49204ddc86d145df30988dd023a50d41c6a57b3491694ce9352cb32c8f119b1c3159dc7f054a4f94f5cef5619321c488c74aa060d984a833090a59d8ed0273d4f0dfe762886a267fec7d994a23b673190cef96b3b8a33bb19807ddb370f81f5dfcb5c5e4621b43116d2fc55523b2858161aa6e1b1fa82ce93f661e1f8fd42843077d52da0cab3b702397aa07e1ccd53608518dd4aa14f6aa14aa12739cec3eddc274da39d9c96129f71b3feedb48f15f808a3daeda1c8c672a1f989a8c466592c04f947a2deaab6ba00d5667b4df53c1a3eeb8d62dbb6f13e5b0492fb2141f843173afc2d8817b50da599f9719f01ca96dcc21e2319c93655cc302fde76b91d970498e2d93957ec96bc3bda253ad22c1dcf9ea24590989e1ce3f2fddb1a0fe9027bf94ec853c8ce74797d8e65cd94dbe52cff098f05e5bf0bb71d44e48db3e400b65bda191bcb17c96770bbe5091f5c45672610074f18f62f06add10e3ddd8afe83e6ad45ee39096484b3155aab03c104f7ed2ec91e134f669dda67987b7a9053703c8bf68505110d0c8ba3a4dc31838df1199a96ce9b6ba544d56021524c0dd4b9626217fb87ec80b12f3e3b2bc918ca6db42bce655a458232c5b57b341dbbcb5f94bd5224a63bda86f762826136672d200262bd2ef8ebd757c0f5012411948265dfa3c677bba2910795649bd50cd53df16b39d94b15e637e276bbe5c8ac12c7d1c0c00bcd9bc4377b844ee121ccaa5fad6e1238f00103feda0996e2584ed4460319b272bc0aa4447b873fce3b9b08ff21451c30de95f6f8dcb7a8bf40550be93b2f87cd4685428e42ce878f2b7aac427840018230212b161be4fce6616491412a6a9ef77af571a220cf0d6215f032ddebe67833743122f0a13e1029048ad6a112f4499923705f99044471989463215872b8d2272ec5211171c182f019b144767f5f6123c0f69fdcf33c94c3a975f5a56d1553a3592ed46b90692508eb41f240910d84252358a8c9caf97705b1b3e9d0de15d37068e4c1142647ba7b24cfa5402d72eb5caaa38ac5de194fbf355d9e5d97600ec817cd73d9efe3c4098efcf7820aa8be80883b332bee2c526d715c33f6b0f922ca4280f67ed5d6f133c03210d93e0ec0a899414c62e54a1e35ffa4d520af05ef3476ba065942d43d68c16ff16857a0c1d963019d7554ec4cddb9aca24561cc6bc39fbbb69c494d1b4030013b37e231463a813c977ea6faba4292dd111ada738318b26eec4fa2c6797302ff9d6dd6e3c6e10667c2e0172bc45a2686a9855ec5b7afd45b95057cf303967b07cf83a4d405c2290af745194a69681da198eaa039a326f66f5f09bd8b5e4ca8c678254b915c0fbb3147025fc177188edd0e2990ee2eb19541b7ac33ce0f28837a69cfc304bee4be92fab0156dfeca21420ccd9f3aae2e834a00b5912ae6237a36c6843affe0911f2aafaf397dcbe8b7fc3cda64888774f497d5b48d79131431d615f90bbe406182cdb5a44aa936bc4dbb92647e030af984e2d4070820b340cfb0602d0c2a1d3e91710ac60c031f3187c3d989425ab8d6149c959220dd25d763d8ceaec22b8111b53d62c65e260701cdfb394a3c845d05752a17ff2a6171c9ddef3d4c15d6b7f2cdb3506d56baa601d2bdb5587152d4733bcc8a3f655fe1d1a982213ff773842615e9abc292a7e98f53851ffca3c5023ecdf4e9754145ee832abf3a6ab331a6ab66bbee62ebf0b29b3b663eaf86a94454fce17995665139d354a8d1930492378fe90da53cbb6948067abcb27f16fc9cfea27ea84dd6901cb9cae50c0b932d31c45481905996d0a870da7027ba7849139e32a9a8437172062e85437144b497d3a4f4e05a04805312b9b603a6ff26e7780050f888b8c9bdb1e0a5c86fecee178587d759564ab72d09472d6ae1e1125f8f2e0da34ef40f0bc24b199d2a44955edfee0d1d67147f2c428eff9c6529f883379882d47e3d676ec79701b8bdf501d3515bccb49bb4cfc7bfd76a48913f66d40fda7b4c5e7bece77d131336529f42d4c0cccfa9e3fd554157e0d0f5ff363b501f5e1965333d9d34c8fb8c9232d3247f657b60e24737a030ad4efdc9bb18011018bc4a7c9fde616eb609393d70919c5138014a0e4b1cf8160faa4d258a58b09b645fd20d06516be6a4234a46fb291d5322f378432173f52124e271e946e5c7050a2</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>加密手册</category>
      </categories>
      <tags>
        <tag>加密手册</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客搭建</title>
    <url>/2020/hexo/</url>
    <content><![CDATA[<p>利用github/gitee和node.js快捷进行个人博客的搭建。<a id="more"></a></p>
<h2 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1. 环境准备"></a>1. 环境准备</h2><h3 id="git安装"><a href="#git安装" class="headerlink" title="git安装"></a>git安装</h3><p>Windows：进入<a href="https://git-scm.com/" target="_blank" rel="noopener">git官网</a>下载Windows安装包进行安装即可，官网下载速度慢可以使用<a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noopener">淘宝镜像</a></p>
<p>Linux：通过包管理工具安装git或进入<a href="https://git-scm.com/" target="_blank" rel="noopener">git官网</a>选择tarballs进入下载归档文件进行源代码构建安装</p>
<h3 id="Node-js安装"><a href="#Node-js安装" class="headerlink" title="Node.js安装"></a>Node.js安装</h3><p>可以进入<a href="https://npm.taobao.org/mirrors/node" target="_blank" rel="noopener">淘宝镜像</a>进行下载安装包或归档文件进行安装，注意添加环境变量</p>
<h2 id="2-安装Hexo"><a href="#2-安装Hexo" class="headerlink" title="2. 安装Hexo"></a>2. 安装Hexo</h2><p><code>npm install -g hexo-cli</code></p>
<h2 id="3-Hexo工程创建"><a href="#3-Hexo工程创建" class="headerlink" title="3. Hexo工程创建"></a>3. Hexo工程创建</h2><ul>
<li><p>建立一个Hexo的工程目录，进入该目录</p>
</li>
<li><p><code>hexo init</code> 进行初始化</p>
</li>
<li><p><code>npm install</code>安装相关依赖</p>
</li>
</ul>
<h2 id="4-文件说明"><a href="#4-文件说明" class="headerlink" title="4. 文件说明"></a>4. 文件说明</h2><p>项目结构：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>

<p><code>_config.yml</code>：网站的配置信息，您可以在此配置大部分的参数。详细配置见<a href="https://hexo.bootcss.com/docs/configuration.html" target="_blank" rel="noopener">配置</a></p>
<p><code>package.json</code>：应用程序的信息。EJS, Stylus和 Markdown renderer 已默认安装，您可以自由移除。</p>
<p><code>scaffolds</code>：<a href="https://hexo.bootcss.com/docs/writing.html" target="_blank" rel="noopener">模版</a> 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p>
<p><code>source</code>：资源文件夹是存放用户资源的地方。除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件会被拷贝过去。</p>
<p><code>themes</code>：<a href="https://hexo.bootcss.com/docs/themes.html" target="_blank" rel="noopener">主题</a> 文件夹。Hexo 会根据主题来生成静态页面。</p>
<h2 id="5-相关命令"><a href="#5-相关命令" class="headerlink" title="5. 相关命令"></a>5. 相关命令</h2><h3 id="命令详解"><a href="#命令详解" class="headerlink" title="命令详解"></a>命令详解</h3><p><code>hexo init [folder]</code>：新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</p>
<p><code>hexo new [layout] &lt;title&gt;</code>：新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用<code>_config.yml</code>中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p>
<p><code>hexo generate</code>：生成静态文件，可以简写为<code>hexo g</code></p>
<blockquote>
<p>  -d，–deploy：生成文件后立即部署</p>
<p>  -w，–watch：监视文件变动</p>
</blockquote>
<p><code>hexo publish [layout] &lt;filename&gt;</code>：发表草稿</p>
<p><code>hexo server</code>：启动服务器，默认在4000端口</p>
<blockquote>
<p>  -p，–port：重设端口</p>
<p>  -s，–static：只使用静态文件</p>
<p>  -l，–log：启动日记记录，使用覆盖记录格式</p>
</blockquote>
<p><code>hexo deploy</code>：部署网站，可以简写为<code>hexo d</code></p>
<blockquote>
<p>  -g，–generate：部署之前预先生成静态文件</p>
</blockquote>
<p><code>hexo render &lt;file1&gt; [file2]...</code>：渲染文件</p>
<blockquote>
<p>  -o，–output：设置输出路径</p>
</blockquote>
<p><code>hexo migrate &lt;type&gt;</code>：从其他博客系统迁移内容</p>
<p><code>hexo clean</code>：清除缓存文件和已生成的静态文件</p>
<p><code>hexo version</code>：显示Hexo版本</p>
<h3 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h3><p>启动服务器：<code>hexo server</code></p>
<p>内容修改后刷新重启：<code>hexo clean</code> <code>hexo generate/g</code> <code>hexo deploy/d</code> <code>hexo server</code></p>
<h3 id="在线部署"><a href="#在线部署" class="headerlink" title="在线部署"></a>在线部署</h3><p>修改<code>_config.yml</code>最后添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">	type: git</span><br><span class="line">	repository: https:&#x2F;&#x2F;github.com&#x2F;你的GitHub名&#x2F;你的GitHub名.github.io.git</span><br><span class="line">	branch: master</span><br></pre></td></tr></table></figure>

<p>使用git部署, 输入指令<code>npm install hexo-deployer-git --save</code></p>
<p>输入指令<code>hexo clean</code> <code>hexo generate</code> <code>hexo deploy</code> 对博客进行提交</p>
<p>该指令可以简化为<code>hexo clean &amp;&amp; hexo d -g</code></p>
<p>参考内容：<a href="https://hexo.bootcss.com/docs/" target="_blank" rel="noopener">Hexo文档</a></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Next部署博客配置及注意事项</title>
    <url>/2020/hexo_next/</url>
    <content><![CDATA[<p>Hexo + Next搭建博客是许多人搭建博客的第一选择，但是要想搭建好博客，让其按照自己的想法进行展示，许多网上的资料要不就是老版本的，要不就是拷贝粘贴的别人的，实际上根本没法用的，这里我按照自己的配置过程写一篇教程，每个配置在我使用的版本上保证可用。<a id="more"></a></p>
<p><strong>注意</strong>：本文只介绍一些容易带坑的配置和个性化配置，常规配置或Hexo的博客搭建过程详见<a href="/hexo/">Hexo博客搭建</a></p>
<h2 id="适用版本"><a href="#适用版本" class="headerlink" title="适用版本"></a>适用版本</h2><p>Hexo：4.2.0</p>
<p>OS：Windows 10 1909 （18636.752）</p>
<p>Next：7.8.0</p>
<p>Node：12.1.0</p>
<h2 id="Hexo配置"><a href="#Hexo配置" class="headerlink" title="Hexo配置"></a>Hexo配置</h2><h3 id="Language"><a href="#Language" class="headerlink" title="Language"></a>Language</h3><p>配置注意：language如果配置为中文，网上许多教程写的应该用<code>zh-Hans</code>，实际上应该使用主题中提供的字体包名，例如我使用Next7.8.0，中文字体包叫做<code>zh-CN</code>，所以此处就应该配置为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># site</span><br><span class="line">  language: zh-CN</span><br></pre></td></tr></table></figure>

<h3 id="创建tags-categories-about"><a href="#创建tags-categories-about" class="headerlink" title="创建tags/categories/about"></a>创建tags/categories/about</h3><p>在cmd命令行中进入hexo的目录下</p>
<p>执行<code>hexo new pages &quot;tags/categories/about&quot;</code></p>
<p>会在<code>hexo/sources/</code>目录下创建相应的文件夹，文件夹下有一个<code>index.md</code>文件</p>
<p>title网页上显示的名称，可以进行自定义</p>
<p>添加<code>type: tags/categories</code></p>
<p>最后配置如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: 2020-04-12 10:59:21</span><br><span class="line">type: categories</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：archives和about不需要设置type，会自动生成页面，如果对于关于我的页面需要定制，直接在<code>hexo/source/about/index.md</code>中进行编辑即可</p>
<p>在文章开头添加yaml批注就能自动进行分类归档了。</p>
<p><strong>注意</strong>：yaml的批注是<code>--- ---</code>包裹的内容，</p>
<p>例如：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-04</span><span class="number">-11</span> <span class="number">21</span><span class="string">:01:24</span></span><br><span class="line"><span class="attr">updated:</span> <span class="number">2020</span><span class="number">-04</span><span class="number">-12</span> <span class="number">15</span><span class="string">:16:24</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Windows</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Linux</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Hexo</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">教程</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">教程</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Hexo</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：tags下的标签是并列关系，categories下的标签是父子关系</p>
<h3 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure>

<p>安装该插件，然后在文章的yaml配置中添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">password: password</span><br><span class="line">abstract: 有东西被加密了, 请输入密码查看.</span><br></pre></td></tr></table></figure>

<p>高级配置详见<a href="https://github.com/MikeCoder/hexo-blog-encrypt" target="_blank" rel="noopener">hexo-blog-encrypt</a></p>
<h2 id="Next配置"><a href="#Next配置" class="headerlink" title="Next配置"></a>Next配置</h2><h3 id="网页图标"><a href="#网页图标" class="headerlink" title="网页图标"></a>网页图标</h3><p>网页title前的link图标，一般只需要配置small，但是保险起见可以将small和medium都配置好，图片需要是ico格式（我使用png格式不显示，但是默认配置的png图片能显示），图片的位置放在<code>/hexo/themes/next/source/images/</code>下，配置如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: &#x2F;images&#x2F;favicon.ico</span><br><span class="line">  medium: &#x2F;images&#x2F;favicon.ico</span><br></pre></td></tr></table></figure>

<h3 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h3><p>Next提供了四种风格的主题，可以根据个人喜好进行配置，具体样式见<a href="https://muse.theme-next.org/" target="_blank" rel="noopener">Muse</a>、<a href="https://mist.theme-next.org/" target="_blank" rel="noopener">Mist</a>、<a href="https://pisces.theme-next.org/" target="_blank" rel="noopener">Pisces</a>、<a href="https://gemini.theme-next.org/" target="_blank" rel="noopener">Gemini</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure>

<h3 id="顶部菜单"><a href="#顶部菜单" class="headerlink" title="顶部菜单"></a>顶部菜单</h3><p>menu配置的是网页顶部的导航链接，可以按照自己的需求配置，前面是显示的文件，中间为链接，<code>||</code>后面的为图标，如果需要自定义链接，建议将所有的图标都去掉，以免影响整体美观</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  首页: &#x2F; || fa fa-home</span><br><span class="line">  标签: &#x2F;tags&#x2F; || fa fa-tags</span><br><span class="line">  分类: &#x2F;categories&#x2F; || fa fa-th</span><br><span class="line">  归档: &#x2F;archives&#x2F; || fa fa-archive</span><br><span class="line">  关于: &#x2F;about&#x2F; || fa fa-user</span><br></pre></td></tr></table></figure>

<h3 id="侧边栏位置"><a href="#侧边栏位置" class="headerlink" title="侧边栏位置"></a>侧边栏位置</h3><p>sidebar主要配置在文章中或者在其他页面显示文章目录或站点概览的位置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  # Sidebar Position.</span><br><span class="line">  #position: left</span><br><span class="line">  position: right</span><br></pre></td></tr></table></figure>

<h3 id="个人头像"><a href="#个人头像" class="headerlink" title="个人头像"></a>个人头像</h3><p>avatar配置的是站点概览的头像，默认是没有头像的，可以自定义配置一张，rounded为裁剪为圆形，rotated为跟随鼠标转动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  url: &#x2F;images&#x2F;header.jpg</span><br><span class="line">  rounded: false</span><br><span class="line">  rotated: false</span><br></pre></td></tr></table></figure>

<h3 id="个人社交"><a href="#个人社交" class="headerlink" title="个人社交"></a>个人社交</h3><p>social配置的是站点概览的个人社交地址，可以按照自己使用自定义，<code>||</code>后面的是站点的图标，可以用<code>social_icons</code>来定义显示方式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https:&#x2F;&#x2F;github.com&#x2F;stolenzc || fab fa-github</span><br><span class="line">  Weibo: https:&#x2F;&#x2F;weibo.com&#x2F;u&#x2F;3333060672 || fab fa-weibo</span><br><span class="line"> </span><br><span class="line">social_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  icons_only: false</span><br><span class="line">  transition: true</span><br></pre></td></tr></table></figure>

<h3 id="个人页关联网站"><a href="#个人页关联网站" class="headerlink" title="个人页关联网站"></a>个人页关联网站</h3><p>links配置的是站点概览的个人链接，可以自定义一些链接在里面快速跳转，用<code>links_settings</code>来配置显示方式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">links:</span><br><span class="line">  个人网站: https:&#x2F;&#x2F;www.stolenzc.com</span><br><span class="line">  日程管理: https:&#x2F;&#x2F;schedule.stolenzc.com&#x2F;schedule&#x2F;</span><br><span class="line">  gitee主页: https:&#x2F;&#x2F;stolenzc.gitee.io</span><br><span class="line"></span><br><span class="line">links_settings:</span><br><span class="line">  icon: fa fa-link</span><br><span class="line">  title: Links</span><br><span class="line">  # Available values: block | inline</span><br><span class="line">  layout: inline</span><br></pre></td></tr></table></figure>

<h3 id="首页文章预览"><a href="#首页文章预览" class="headerlink" title="首页文章预览"></a>首页文章预览</h3><p>Next默认首页是显示文章的全部内容，但是这样会显得首页非常凌乱，网上说的使用auto_excerpt来配置预览字数，但是我是用的7.8.0已经没有了该配置，正确的配置有两种方法</p>
<ol>
<li>在文章开头的yaml配置中添加description，然后设置excerpt_description为true</li>
<li>编辑markdown文件在你想要截断的地方添加<code>&lt;!-- more --&gt;</code>，文章显示出来就会在此处截断，并且会添加一个阅读全文的链接（官方推荐）</li>
</ol>
<h3 id="添加访问统计"><a href="#添加访问统计" class="headerlink" title="添加访问统计"></a>添加访问统计</h3><p>在<code>hexo/themes/next/_config.yml</code>中找到footer并添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">footer:</span><br><span class="line">  counter: true</span><br></pre></td></tr></table></figure>

<p>找到busuanzi_count并将enable改为true</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">busuanzi_count:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<p>在<code>hexo/themes/next/layout/_partials/footer.swig</code>最后添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.footer.counter %&#125;</span><br><span class="line">    &lt;script async src&#x3D;&quot;&#x2F;&#x2F;dn-lbstatics.qbox.me&#x2F;busuanzi&#x2F;2.3&#x2F;busuanzi.pure.mini.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<h3 id="文末结束标记"><a href="#文末结束标记" class="headerlink" title="文末结束标记"></a>文末结束标记</h3><p>在路径<code>hexo\themes\next\layout\_macro</code>文件夹中新建<code>passage-end-tag.swig</code>文件，编辑内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style&#x3D;&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class&#x3D;&quot;fa fa-paw&quot;&gt;&lt;&#x2F;i&gt;感谢您的阅读-------------&lt;&#x2F;div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<p>打开<code>hexo\themes\next\layout\_macro\post.swig</code>，在<code>END POST BODY</code>后面添加以下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &#123;% include &#39;passage-end-tag.swig&#39; %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>

<p>修改主题配置文件<code>_config.yml</code>，在末尾添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure>

<h3 id="文章字数和时间统计"><a href="#文章字数和时间统计" class="headerlink" title="文章字数和时间统计"></a>文章字数和时间统计</h3><p>安装插件<code>npm install hexo-symbols-count-time</code></p>
<p>配置hexo的<code>_config.yml</code>设置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  exclude_codeblock: false</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br><span class="line">  suffix: &quot;mins.&quot;</span><br></pre></td></tr></table></figure>

<p>设置含义参考：<a href="https://github.com/theme-next/hexo-symbols-count-time" target="_blank" rel="noopener">hexo-symbols-count-time</a></p>
<h3 id="配置搜索功能"><a href="#配置搜索功能" class="headerlink" title="配置搜索功能"></a>配置搜索功能</h3><p>NexT题支持集成 Swiftype、 微搜索、Local Search 和 Algolia。本文介绍Local Search的安装。</p>
<p>安装<code>hexo-generator-search</code>和<code>hexo-generator-searchdb</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>编辑hexo的<code>_config.yml</code>配置，在末尾添加：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>

<p>编辑NexT的<code>_config.yml</code>配置，将local-search设置修改为true：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: ture</span><br></pre></td></tr></table></figure>

<h3 id="来必力评论"><a href="#来必力评论" class="headerlink" title="来必力评论"></a>来必力评论</h3><ol>
<li>在来必力网站注册账号，创建一个应用</li>
<li>进入应用找到配置的代码，将date-uid后面的内容拷贝下来</li>
<li>打开Next的_config.yml文件，找到livere_uid，将刚刚拷贝下来的id粘贴在后面</li>
<li>显示的详细配置在来必力管理页面中进行配置</li>
</ol>
<h3 id="配置首页隐藏文章"><a href="#配置首页隐藏文章" class="headerlink" title="配置首页隐藏文章"></a>配置首页隐藏文章</h3><ol>
<li>编辑<code>themes/next/layout/index.swig</code>，添加以下代码的第三行和第五行<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;posts-expand&quot;&gt;</span><br><span class="line">  &#123;%- for post in page.posts.toArray() %&#125;</span><br><span class="line">    &#123;%- if post.hidden !&#x3D; true %&#125;</span><br><span class="line">      &#123;&#123; partial(&#39;_macro&#x2F;post.swig&#39;, &#123;post: post, is_index: true&#125;) &#125;&#125;</span><br><span class="line">    &#123;%- endif %&#125;</span><br><span class="line">  &#123;%- endfor %&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure></li>
<li>编辑<code>scaffolds/post.md</code>，添加一下代码的第四行<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">hidden: false</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li>
<li>在使用时，文章最顶部添加<code>hidden: True</code>即可在博客首页隐藏文章</li>
</ol>
<h3 id="跳过指定文件的渲染"><a href="#跳过指定文件的渲染" class="headerlink" title="跳过指定文件的渲染"></a>跳过指定文件的渲染</h3><p>编辑_config.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">[_posts/*]</span></span><br></pre></td></tr></table></figure>
<p>支持正则表达式</p>
<p><strong>更多配置参考：<a href="https://www.jianshu.com/p/9f0e90cc32c2" target="_blank" rel="noopener">Hexo-NexT配置超炫网页效果</a></strong></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>HTTPS加密原理</title>
    <url>/2022/https/</url>
    <content><![CDATA[<h2 id="HTTPS传输的加密使用"><a href="#HTTPS传输的加密使用" class="headerlink" title="HTTPS传输的加密使用"></a>HTTPS传输的加密使用</h2><p>https在进行内容传输的时候使用的是对称加密</p>
<p>https在进行证书验证阶段使用的是非对称加密</p>
<h2 id="HTTP与HTTPS的区别"><a href="#HTTP与HTTPS的区别" class="headerlink" title="HTTP与HTTPS的区别"></a>HTTP与HTTPS的区别</h2><ul>
<li>默认端口，HTTP是80，HTTPS是443</li>
<li>传输协议，http是超文本传输协议，属于明文传输；https是安全的超文本传输协议，是经过SSL加密后的传输协议</li>
<li>安全性，https使用了TLS/SSL，比http更安全</li>
<li>证书，https需要申请ca证书</li>
<li>HTTPS的加密是在传输层完成的，因为SSL是位于传输层的，TLS的前身是SSL。</li>
</ul>
<h2 id="HTTP的通信过程"><a href="#HTTP的通信过程" class="headerlink" title="HTTP的通信过程"></a>HTTP的通信过程</h2><p>作为标准的C/S模型，http协议总是由客户端发起，服务器进行响应。</p>
<ol>
<li>DNS解析，域名系统DNS将域名解析成IP地址</li>
<li>建立TCP连接，进行TCP的三次握手</li>
<li>浏览器发送请求</li>
<li>服务器响应浏览器，向浏览器发送数据</li>
<li>通信完成，TCP连接关闭</li>
</ol>
<h2 id="HTTPS的通信过程"><a href="#HTTPS的通信过程" class="headerlink" title="HTTPS的通信过程"></a>HTTPS的通信过程</h2><p>https主要在http的2和3之间，建立了一个加密的连接，这个连接使用了TLS/SSL协议，它是一个安全的传输协议，它的加密使用了对称加密，而不是非对称加密。</p>
<p>通信过程如下 ：</p>
<ol>
<li>DNS解析，域名系统DNS将域名解析成IP地址</li>
<li>客户端和服务器端通过TCP建立连接，并发送https请求。</li>
<li>客户端发起TLS握手，向服务端发送<code>ClientHello</code>消息，<ul>
<li>客户端支持的SSL/TLS版本</li>
<li>客户端支持的加密套件，比如RSA加密算法</li>
<li>会话session id，（如果有的值的话，服务器端会复用对应的握手信息，避免短时间内重复握手）</li>
<li>客户端随机数，用于生成随机密钥</li>
</ul>
</li>
<li>服务器收到<code>ClientHello</code>消息，向客户端发送<code>ServerHello</code>消息<ul>
<li>服务器所能支持的最高SSL/TLS版本</li>
<li>服务器选择的加密套件列表，比如RSA加密算法</li>
<li>服务器随机数，用于生成随机密钥</li>
<li>服务器的ca证书</li>
</ul>
</li>
<li>客户端收到<code>ServerHello</code>后，会对收到的证书进行验证。包括验证证书机构、有效期等，验证证书的合法性验证</li>
<li>验证成功后，Client生成随机数，用于密钥交换过程。客户端会从数字证书中取出服务器的公钥，然后使用它加密报文该随机数，发送到服务器</li>
<li>服务器使用私钥解密。获取客户端发送的随机数</li>
<li>客户端使用这三个随机数一起计算出对称加密密钥，同理服务端也可以计算出这个加密密钥。客户端和服务端都计算出加密密钥<code>master secret</code></li>
<li>客户端用<code>master secret</code>加密了一条握手完成的消息发送给服务器</li>
<li>服务器端也回发了一条用<code>master secret</code>加密的握手完成的消息</li>
<li>服务器将发送的内容用<code>master secret</code>加密，然后发送给客户端</li>
<li>客户端使用<code>master secret</code>解密收到的消息</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>TCP</tag>
        <tag>HTTPS</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS使用</title>
    <url>/2020/mac/</url>
    <content><![CDATA[<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><table>
<thead>
<tr>
<th>按键</th>
<th>行为</th>
<th>按键</th>
<th>行为</th>
</tr>
</thead>
<tbody><tr>
<td><code>command + shift + 3</code></td>
<td>系统截屏，并保存到桌面</td>
<td><code>command + control + a</code></td>
<td>微信截屏（需要设置）</td>
</tr>
<tr>
<td><code>command + fn + F3</code></td>
<td>显示桌面</td>
<td><code>command + tab</code></td>
<td>快速切换应用</td>
</tr>
<tr>
<td><code>command + tab + alt + enter</code></td>
<td>打开最小化的应用</td>
<td><code>command + M</code></td>
<td>最小化应用</td>
</tr>
<tr>
<td><code>command + left</code></td>
<td>回到开始，Home</td>
<td><code>command + right</code></td>
<td>到最后，End</td>
</tr>
<tr>
<td><code>option + left</code></td>
<td>到上一个单词开头</td>
<td><code>option + right</code></td>
<td>到下一个单词结尾</td>
</tr>
<tr>
<td><code>control + left</code></td>
<td>到上一个桌面</td>
<td><code>control + right</code></td>
<td>到下一个桌面</td>
</tr>
<tr>
<td><code>fn + left</code></td>
<td>跳到文章开头</td>
<td><code>fn + right</code></td>
<td>跳到文章结尾</td>
</tr>
<tr>
<td><code>fn + up</code></td>
<td>到上一页</td>
<td><code>fn + down</code></td>
<td>到下一页</td>
</tr>
<tr>
<td><code>command + s</code></td>
<td>保存文件</td>
<td><code>command + c</code></td>
<td>复制</td>
</tr>
<tr>
<td><code>command + v</code></td>
<td>粘贴</td>
<td><code>command + x</code></td>
<td>剪切</td>
</tr>
<tr>
<td><code>command + space</code></td>
<td>聚焦搜索，全局搜索软件或文件</td>
<td><code>control + command + Q</code></td>
<td>快捷锁屏，和QQ快捷键冲突</td>
</tr>
<tr>
<td><code>control + a</code></td>
<td>转到行首（命令行下）</td>
<td><code>control + e</code></td>
<td>转到行尾（命令行下）</td>
</tr>
<tr>
<td><code>command + Q</code></td>
<td>关闭活动程序</td>
<td><code>command + W</code></td>
<td>关闭活动窗口</td>
</tr>
</tbody></table>
<h2 id="触控板"><a href="#触控板" class="headerlink" title="触控板"></a>触控板</h2><table>
<thead>
<tr>
<th>动作</th>
<th>行为</th>
<th>动作</th>
<th>行为</th>
</tr>
</thead>
<tbody><tr>
<td><code>双指左右滑动</code></td>
<td>切换页面</td>
<td><code>双指从右边缘向左滑动</code></td>
<td>唤出通知中心</td>
</tr>
<tr>
<td><code>三只下划</code></td>
<td>聚焦当前应用</td>
<td><code>三指上划</code></td>
<td>平铺打开的应用</td>
</tr>
<tr>
<td><code>四指内合</code></td>
<td>调出启动台</td>
<td><code>四指张开</code></td>
<td>显示桌面（在非全屏状态下）</td>
</tr>
<tr>
<td><code>三指左右滑动</code></td>
<td>切换页面</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="Brew命令"><a href="#Brew命令" class="headerlink" title="Brew命令"></a>Brew命令</h2><table>
<thead>
<tr>
<th>命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td><code>brew ls</code></td>
<td>查看本地安装的软件</td>
</tr>
<tr>
<td><code>brew search</code></td>
<td>搜索软件</td>
</tr>
<tr>
<td><code>brew -v</code></td>
<td>查看brew的版本</td>
</tr>
<tr>
<td><code>brew update</code></td>
<td>升级brew</td>
</tr>
<tr>
<td><code>brew install 软件名</code></td>
<td>安装软件</td>
</tr>
<tr>
<td><code>brew remove 软件名</code></td>
<td>卸载软件</td>
</tr>
</tbody></table>
<p>brew 彻底卸载软件方法</p>
<blockquote>
<p><code>brew tap beeftornado/rmtree</code> - 安装rmtree<br><code>brew rmtree 软件名</code> - 删除软件<br><code>brew cleanup</code> - 清理缓存</p>
</blockquote>
<h2 id="必备软件"><a href="#必备软件" class="headerlink" title="必备软件"></a>必备软件</h2><h3 id="scroll-reverser"><a href="#scroll-reverser" class="headerlink" title="scroll reverser"></a>scroll reverser</h3><p>解决鼠标滑动方向是反着的问题，下载地址：<a href="https://pilotmoon.com/scrollreverser/" target="_blank" rel="noopener">scroll reverser官网</a></p>
<h3 id="Trojan-X"><a href="#Trojan-X" class="headerlink" title="Trojan X"></a>Trojan X</h3><p>Mac 下科学上网软件，好用方便，下载地址：<a href="https://github.com/JimLee1996/TrojanX/releases" target="_blank" rel="noopener">JimLee1996的github</a></p>
<h3 id="sequel-pro"><a href="#sequel-pro" class="headerlink" title="sequel pro"></a>sequel pro</h3><p>Mac 下免费的MySQL数据库图形化软件，下载地址：<a href="http://www.sequelpro.com/" target="_blank" rel="noopener">sequel pro 官网</a></p>
<h2 id="软件技巧"><a href="#软件技巧" class="headerlink" title="软件技巧"></a>软件技巧</h2><h3 id="添加快捷键输出当前时间"><a href="#添加快捷键输出当前时间" class="headerlink" title="添加快捷键输出当前时间"></a>添加快捷键输出当前时间</h3><ol>
<li>自动操作 -&gt; 新建文稿 -&gt; 快速操作 -&gt; 实用工具 -&gt; 允许shell脚本 -&gt; 选择（没有输入、位于任何应用程序、用输出内容替换所选文本）</li>
<li>脚本内容填写 <code>date &quot;+%Y-%m-%d %H:%M:%S&quot;</code></li>
<li>保存 -&gt; 设置快捷键</li>
</ol>
<h3 id="最小化软件和恢复最小化软件"><a href="#最小化软件和恢复最小化软件" class="headerlink" title="最小化软件和恢复最小化软件"></a>最小化软件和恢复最小化软件</h3><p><code>command m</code> - 最小化当前窗口</p>
<p><code>command option m</code> - 最小化当前软件所有窗口</p>
<p><code>command Tab</code> 选中软件后松开 <code>Tab</code> 按键，再按 <code>option</code> 按键，松开 <code>command</code> 按键即可恢复最小化软件</p>
<p><code>command Tab</code> 选中软件后松开 <code>Tab</code> 按键，再按 <code>option</code> 按键后再按 <code>enter</code> 按键即可恢复最小化软件</p>
<h2 id="使用问题"><a href="#使用问题" class="headerlink" title="使用问题"></a>使用问题</h2><h3 id="鼠标滚轮方向反着"><a href="#鼠标滚轮方向反着" class="headerlink" title="鼠标滚轮方向反着"></a>鼠标滚轮方向反着</h3><p>将<code>系统偏好设置&gt;鼠标&gt;滚动方向</code>前面的勾去掉即可，该操作会影响触控板的划动方向，替代方式可以使用scroll reverser软件</p>
<h3 id="Finder进入根目录"><a href="#Finder进入根目录" class="headerlink" title="Finder进入根目录"></a>Finder进入根目录</h3><p>进入<code>访达&gt;偏好设置&gt;边栏</code>中，将硬盘前面选择为勾即可</p>
<h3 id="安装HomeBrew"><a href="#安装HomeBrew" class="headerlink" title="安装HomeBrew"></a>安装HomeBrew</h3><p>本命令中使用到的镜像源全部为国内的镜像源</p>
<p>命令行输入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/bin/zsh -c <span class="string">"<span class="variable">$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)</span>"</span></span><br></pre></td></tr></table></figure>

<p>参考文档：<a href="https://www.zhihu.com/question/35928898?sort=created" target="_blank" rel="noopener">mac安装homebrew失败怎么办？</a></p>
<h3 id="关闭浏览器快速前进和后退"><a href="#关闭浏览器快速前进和后退" class="headerlink" title="关闭浏览器快速前进和后退"></a>关闭浏览器快速前进和后退</h3><p>Edge：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">defaults write com.microsoft.edgemac AppleEnableSwipeNavigateWithScrolls -bool <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>Chrome</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h3 id="安装mysqlclient遇到lssl等错误"><a href="#安装mysqlclient遇到lssl等错误" class="headerlink" title="安装mysqlclient遇到lssl等错误"></a>安装mysqlclient遇到lssl等错误</h3><p><code>env LDFLAGS=&quot;-I/usr/local/opt/openssl/include -L/usr/local/opt/openssl/lib&quot; pip --no-cache install mysqlclient==1.4.6 -i https://mirrors.aliyun.com/pypi/simple</code></p>
<p>参考自：<a href="https://www.jianshu.com/p/de943de33896" target="_blank" rel="noopener">Macos安装报错 ld: library not found for -lssl</a></p>
<h3 id="mac下网络冲突的问题"><a href="#mac下网络冲突的问题" class="headerlink" title="mac下网络冲突的问题"></a>mac下网络冲突的问题</h3><p>在配置文件中添加:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;default-address-pools&quot;: [</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;base&quot;: &quot;172.31.0.0&#x2F;16&quot;,</span><br><span class="line">    &quot;size&quot;: 24</span><br><span class="line">  &#125;</span><br><span class="line">],</span><br></pre></td></tr></table></figure>

<h3 id="禁止-DS-Store文件生成"><a href="#禁止-DS-Store文件生成" class="headerlink" title="禁止.DS_Store文件生成"></a>禁止.DS_Store文件生成</h3><p>禁止生成</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE</span><br></pre></td></tr></table></figure>

<p>恢复生成</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">defaults delete com.apple.desktopservices DSDontWriteNetworkStores</span><br></pre></td></tr></table></figure>

<h3 id="隐藏和显示以点开头的文件"><a href="#隐藏和显示以点开头的文件" class="headerlink" title="隐藏和显示以点开头的文件"></a>隐藏和显示以点开头的文件</h3><p>隐藏</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">defaults write com.apple.Finder AppleShowAllFiles YES</span><br><span class="line">killall Finder</span><br></pre></td></tr></table></figure>

<p>显示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">defaults write com.apple.Finder AppleShowAllFiles NO</span><br><span class="line">killall Finder</span><br></pre></td></tr></table></figure>

<h3 id="xcode命令报错"><a href="#xcode命令报错" class="headerlink" title="xcode命令报错"></a>xcode命令报错</h3><p>现象：报错<code>gyp: No Xcode or CLT version detected!</code></p>
<p>解决：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo rm -rf $(xcode-select -<span class="built_in">print</span>-path)</span><br><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure>

<p>在执行<code>xcode-select --install</code>时，可能会报错：不能安装该软件，因为当前无法从软件更新服务器获得。</p>
<p>解决：在<a href="https://developer.apple.com/download/more/" target="_blank" rel="noopener">apple develop</a>搜索 command line tools下载安装即可</p>
<h3 id="mac不支持小于4位的密码"><a href="#mac不支持小于4位的密码" class="headerlink" title="mac不支持小于4位的密码"></a>mac不支持小于4位的密码</h3><p><code>pwpolicy -clearaccountpolicies</code> - 关闭密码安全检查</p>
<p><code>passwd</code> - 命令行修改密码</p>
<h2 id="terminal命令"><a href="#terminal命令" class="headerlink" title="terminal命令"></a>terminal命令</h2><p><code>traceroute 192.168.1.1</code> - 查看网络请求的具体访问过的地址</p>
<p><code>lsof -i tcp:3306</code> - 查看端口占用</p>
<p><code>open -n /Applications/WeChat.app/Contents/MacOS/WeChat</code> - 实现双开微信</p>
<p><code>brew cask install qlcolorcode</code> - quicklook支持预览代码</p>
<p><code>brew cask install qlmarkdown</code> - quicklook支持预览markdown</p>
]]></content>
      <categories>
        <category>系统</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>个人文件2020-11-10</title>
    <url>/2020/myfile_2020-11-10/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">您好, 这里需要密码.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="ba5aba640f8a6c0d49b1cc3813a69d6261dd4c5b6b065386af8d1699cb84b4af"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>私人文件</category>
      </categories>
      <tags>
        <tag>私人文件</tag>
      </tags>
  </entry>
  <entry>
    <title>个人文件Pass</title>
    <url>/2020/myfile_pass/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">您好, 这里需要密码.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="e56b4338e25f308123edcacd7b5e4ff416ee92641ab03af00b56f7444e7f2b4a">f34ad8ad12144dbec8869de4e9b7eed6e2fc8c9a6fa2a1cd1f86a49a840397086191eab33bb573a6c12f01d29ace5d6503a970f122a90307e8c3bf52eaaac4990dbfdacafba2718c4b60a194b7f5d430ac6e89e9f268ddfcc8146cdbbf1b032ce5b5fd8e4b4cf4a4ce8d1a0cb0089abf5ab0c87278009259985dcf68e7a38e0e2f8abffe30c4012969e9bd7bce5d7c785963d121afc295f954248d9d0d47f43c470f4d3253a2133895aa323422bd43a0ef67da89070b0a3bbeec433f57b829709853f54dcc8ab3ab6dad3b9e47019b4646d79bae40a1e7676c61884b3c0f2ad547326a8da92cd913cc6db467741551dfa1eaa893ea143d3fe025f110055ca856b8b44e9f5a032cfb3886336445e3ac8f38accc3fc4220c70f76683614eab81b951f9df12307d215aae56e318d89c36f5ccb19cc3c71724123b02fb383c420921b3983ce6a503742a41f45bce98f76bf5dc926ad276b0bfd086af85e1e747918b8e84010a44b725f895d19e81008cd684136964808fce7ce0b17b4795f0b7bc47fd09ca1156bf3b619490b6ef6c2eaecb011e132cb9a37b52f1057fcea07f80a4d393d23c6504c702f2aa09813399d96f4d81484b6c2f3f788af544b1f17a51f8592a3992a50b87c75965efa44fc43eb4c56ac46c9c4ee1b260bd85951513345ad6941713400c3dab81781067a8500197402c252bad0fb06fccc9cf26c34725a0fe31c51220c0adea95e9c0984c61776198d6e4544e3c3a2ae107ecfd8367a59a5757c5849b23a962a09d799392acb832292db98ffdb532c49443ac7028fe4aa5d5e7a8a54a19d6a1215305d15270581c891225820f74f4dfbbfbc97390a46cb8511b9445bf571cee536e6fe19f22438954434ff9dab22564b27b90e06109bf39818d8f0edc6a5d810025c29e2aa083287c1a677a4ba2c2a0f67d969fcee9cc47fae2aab6fa438d0a9ab37766bb3969a58e9bc12c67f80307564c7921efdf5d9bee82413f48b6e86068901235e359dfd78dd7f8a03a5ef6c169c41d5e369d1742081e0c3f3128d26110a544c16dadfa631032f739535c284abd98616fa9325224552665710f5ded8947be7c20d840aac975a4222ed58153ca0668a9da2af2ac24705e5b1b53711d6ff55f068e6a591a35a7329660cb7f43a73a6f005604aec6f21e76ab1ea505890b415627eacc9d38c005585a4aa35904ce9a485a4ad77f42202802266491080123b8430ed55bd4c5cc8be70b3d3ab6b04dff3982227e03c7ae6965e41a176c5599133d1629b726adad9c40a188f4cf4bca989e9ac9748c3d22e739e0bc69bc0694919aa2015ef8d54f80593c772155f6cce2efcc78502d4079ea4ba132bb5edf924cd51fac9ab11c946cba1d91077e3d49735034a52f934b8fddc1453ec6236dc68b782f62dc67814c4f117b118f5d4b68c265d9c2a5553196e325ba5a43d6d43760866172b5c3512969a6f0f9fd8a6f67eae7d4921d5ae98ab866b0fbca82f5c897e2214d30aa0eb595f038e252b79febccfd44fb28b5cf3afa662f9b80c822db8be1f4d7f53257a7e5c82836657b0d60c3676dd0d14ee1c24e3d3bc1a9051f1134858e53e533997dc1e699a921fc4a81737f0a8d41acf7a7d1bd6ff19bd7f873fdad0a9e56b33e4560359fc6d99d2ab997807eb8bb29e3915e5ac7d6f901ddff53ad263067fa457748c769bd6cd01fba17e314391ad8eb900a942ab286e4cb6f0fe6ea60dbb37f5272a21a4c0ef6a4470502f94e4c64dca232b13abfec3c3791f9c133e733fcbe4e4d94be61c984c27dbd64f5917203ef07a1e2dcdc79a29bffda9cd54173645017fd281e0fd9adca3083aff8a538a80c147778011936331085fc9133782131aa495f4611ae009a26443affc659126c4e2fcfae4d325e18e90f3dfde5b7f201ce0dc77f9743797e624b75b4a0a929ee24536dfcfaaaea5f88548f139ea21f8779e8ccf3421af35cc94fb19b13d6875e238ba1621a87eb7565809c83c6e3b9b77396cc1d38e5b54dd1ad311b0d3397ebb0e505fbbb81cffe6e96f5d22aaea426f86eecb8ee0d38405c4d5d54de36b93e34e45f8306b50b48bcb6103f83972b0f527ae60eae19f58be9548b58e3838f57d3d152c4a04e97d13be51de4c75062824bbd8483dfa6b792bf68d2397b965a92154195dd54f5e1b023f3e3f27b42f55945ce6cc10bc6e7a2e95ea7e45213ec5dfc2d7e863efe56adcbcba4b0cf2f423b12594eda939dce92cf80ce608b04f685ceea38979322409c310746e2a47f5e41586d50c6ba370f51654ad4aa70459a91c858ad9321618aad107c634d8e25866b47be319675e134582143ed3aba8272bcbbc613aad6a494f5a7639ddbcd114cb89e96b5b9d3051aa6c401db86a988daf7045753a477449c59bd14dfc14c056f12617e4f63c6bb47808c809c2fc10ad7cba744f3f7edcac0f389afd9bcc377cefc11cc61a01c5a18f7e3e0c98a8ef7ae77b39b0c579019d28ad6eb5363872c5f777517b9ad8c276b74514483267b7358cdcc312e6359a28939c8bd5e4b8fa96c17979c2287a28f6f753864fa49f80e589af45e6a3d31db603e771ed6b9682b662c0a6c74adff224c964343b9dbac9d866db5d2036559ad2cba74934e0dfab9dbd472d72e8dbf6138f1664b2cda500f818bdc34bd4ce0735a27f3df024a9b3822c04ae88aa4ec0a8ef0a152f1be0bd75767ee71</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>私人文件</category>
      </categories>
      <tags>
        <tag>私人文件</tag>
      </tags>
  </entry>
  <entry>
    <title>个人文件密钥</title>
    <url>/2020/myfile_secret/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">您好, 这里需要密码.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="21a128ec346df7f6505d907d53c86c1e78377703b8b76b7711107b79209c0575">c61e47a607662d02ff43d68ae034e88044bc108fe2c66f920515325487adfe4b343035133e9b6e134bfaeec90f624b72a32a4821f9c67386a64a6e7b2af970bfcdc424fb702a48d3d4194ae24a437b0dc5f0ce8b4cdcbec2664b1aaa86fd416d199332f9401e893e8dfc41b3880cf77d0dbeaabb3185a11bb724183f10dd6a6481ea39a9368277ecea428800a2c0c4f52759a54d18606f4a54ea2abfa88dc43bda7f1d84dc585074c1d3dac534c1f4ecff2623bc7ae73b05ffa5119e8bf8e2d4b7da769f21926710d774d04f1c7901da6795b49a912059a221384b3977a44a5bffc19488cd8873c6026849ac65371cead39b18568f5565414505ef6b0714e7db</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>私人文件</category>
      </categories>
      <tags>
        <tag>私人文件</tag>
      </tags>
  </entry>
  <entry>
    <title>个人文件总结</title>
    <url>/2020/myfile_summary/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">您好, 这里需要密码.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="7c844ba92251eb4ee179daaccc29beb0f2aaa026c5f2700451c9aba373b91fed"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>私人文件</category>
      </categories>
      <tags>
        <tag>私人文件</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL安装避坑</title>
    <url>/2020/mysql_install_issue/</url>
    <content><![CDATA[<p>安装MySQL可能会遇到的一些错误总结<a id="more"></a></p>
<h2 id="安装遇坑"><a href="#安装遇坑" class="headerlink" title="安装遇坑"></a>安装遇坑</h2><h2 id="启动遇坑"><a href="#启动遇坑" class="headerlink" title="启动遇坑"></a>启动遇坑</h2><h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h3><p>Mac下homebrew安装mysql的数据默认路径：<code>/usr/local/var/mysql</code></p>
<p>Mac下设置数据保存路径：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># &#x2F;usr&#x2F;local&#x2F;etc&#x2F;my.cnf</span><br><span class="line">datadir&#x3D;&#x2F;Users&#x2F;stolen&#x2F;docker_volumes&#x2F;shiyanlou&#x2F;mysql</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>问题避坑</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>网络相关技术点</title>
    <url>/2020/network/</url>
    <content><![CDATA[<p>介绍一些关机计算机网络的相关知识，包括TCP、HTTP、HTTPS、WebSocket等。<a id="more"></a></p>
<h2 id="TCP连接过程"><a href="#TCP连接过程" class="headerlink" title="TCP连接过程"></a>TCP连接过程</h2><p>状态码含义：</p>
<blockquote>
<p>  SYN(synchronous) - 表示建立连接</p>
<p>  ACK(acknowledgment) - 表示响应</p>
<p>  FIN(finish) - 表示关闭连接</p>
<p>  RST(reset) - 表示重置</p>
<p>  PSH(push) - 表示有Data传送</p>
<p>  URG(urgent) - 表示紧急</p>
<p>  Sequence Number - 顺序号码</p>
<p>  Acknowledge Number - 确认号码</p>
</blockquote>
<p>三次握手：</p>
<ol>
<li>主机A发送位码为syn=1，随机产生seq number=1234567的数据包到服务器，主机B由SYN=1知道，A要求建立联机。</li>
<li>主机B收到请求后要确认联机信息，向A发送ack number=(主机A的seq+1)，syn=1，ack=1，随机产生seq=7654321的包。</li>
<li>主机A收到后检查ack number是否正确，即第一次发送的seq number+1，以及位码ack是否为1，若正确，主机A会再发送ack number=(主机B的seq+1)，ack=1，主机B收到后确认seq值与ack=1则连接建立成功。</li>
</ol>
<p>四次挥手：</p>
<ol>
<li>主机A发送位码为fin=1，seq number=(前面已经传送过来的数据的最后一个字节的序号加1)并发送，主机B由fin=1知道A要关闭连接。</li>
<li>主机B返回ack=1，ack number=(主机A的seq=1)，随机产生seq number=1234567。然后等待主机B的socket服务关闭。</li>
<li>主机B的socket服务关闭后，向主机A发送fin=1，ack=1，ack number=(主机A的seq=1)，seq number=(前面已经传送过来的数据的最后一个字节的序号加1)并发送。</li>
<li>主机A收到主机B的fin后，返回ACK=1，ack number=(最后一次发送过来的seq number加1)</li>
</ol>
<h2 id="TCP和UDP的区别"><a href="#TCP和UDP的区别" class="headerlink" title="TCP和UDP的区别"></a>TCP和UDP的区别</h2><table>
<thead>
<tr>
<th></th>
<th>UDP</th>
<th>TCP</th>
</tr>
</thead>
<tbody><tr>
<td>是否连接</td>
<td>无连接</td>
<td>面向连接</td>
</tr>
<tr>
<td>是否可靠</td>
<td>不可靠传输，不使用流量控制和拥塞控制</td>
<td>可靠传输，使用流量控制和拥塞控制</td>
</tr>
<tr>
<td>连接对象个数</td>
<td>支持一对一，一对多，多对一和多对多交互通信</td>
<td>只能是一对一通信</td>
</tr>
<tr>
<td>传输方式</td>
<td>面向报文</td>
<td>面向字节流</td>
</tr>
<tr>
<td>首部开销</td>
<td>首部开销小，仅8字节</td>
<td>首部最小20字节，最大60字节</td>
</tr>
<tr>
<td>适用场景</td>
<td>适用于实时应用（IP电话、视频会议、直播等）</td>
<td>适用于要求可靠传输的应用，例如问卷传输</td>
</tr>
</tbody></table>
<ul>
<li><p>TCP向上层提供面向连接的可靠服务，UDP向上层提供无连接不可靠服务</p>
</li>
<li><p>虽然UDP并没有TCP传输来的准确，但是也能在很多实用性要求高的地方有所作为</p>
</li>
<li><p>对数据准确性要求高，速度可以相对较慢的，可以选用TCP</p>
</li>
</ul>
<h2 id="Socket"><a href="#Socket" class="headerlink" title="Socket"></a>Socket</h2><p>socket是一种应用程序接口，一般指的是网络中一个连接的两端，socket中通常封装了TCP和UDP的通信方式，直接使用socket就可以进行TCP或UDP的对话。</p>
<blockquote>
<p>  SOCK_STREAM - 可靠数据传输，基于TCP</p>
<p>  SOCK_DGRAM - 不可靠数据传输，基于UDP</p>
</blockquote>
<h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><p>HTTP是一个基于TCP协议的超文本传输协议。</p>
<p>请求体结构：</p>
<p>请求行 - 请求体 - 空行 - 消息体</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET &#x2F; HTTP&#x2F;1.1</span><br><span class="line">Host: www.baidu.com</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<p>响应体结构：</p>
<p>响应头 - 响应体 - 空行 - 消息体</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">HTTP&#x2F;1.1 200 OK</span><br><span class="line">Bdpagetype: 2</span><br><span class="line">Bdqid: 0xb6dda1710004f934</span><br><span class="line">Cache-Control: private</span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<p><strong>HTTP 0.9</strong></p>
<blockquote>
<p>  只有GET请求</p>
<p>  服务器只能回应HTML格式的字符串</p>
</blockquote>
<p><strong>HTTP 1.0</strong></p>
<blockquote>
<p>  增加了POST和HEAD请求</p>
<p>  可以发送任何格式的内容</p>
<p>  每次通信都必须包括头信息</p>
<p>  状态码（status code）、多字符集支持、多部分发送（multi-part type）、权限（authorization）、缓存（cache）、内容编码（content encoding）等。</p>
</blockquote>
<p><strong>HTTP 1.1</strong></p>
<blockquote>
<p>  持久连接：Connection: keep-alive</p>
<p>  管道机制：同一个TCP连接里面，客户端可以同时发送多个请求。</p>
<p>  Content-Length 字段：声明本次回应的数据长度。</p>
<p>  分块传输编码：Transfer-Encoding: chunked，对不定长度的内容使用分块传输</p>
<p>  新增了许多动词方法：<code>PUT</code>、<code>PATCH</code>、<code>HEAD</code>、 <code>OPTIONS</code>、<code>DELETE</code>。</p>
<p>  新增了Host字段，用来指定服务器的域名</p>
</blockquote>
<p><strong>HTTP 2</strong></p>
<blockquote>
<p>  二进制协议：将HTTP 1.1中数据头为文本，数据体为文本或二进制，改为全为二进制，统称为帧（frame）：头信息帧和数据帧。</p>
<p>  多功：在一个连接里，客户端和浏览器都可以同时发送多个请求或回应，而且不用按照顺序一一对应，这样就避免了”队头堵塞”。</p>
<p>  数据流：将每个请求或回应的所有数据包，称为一个数据流（stream）。每个数据流都有一个独一无二的编号。数据包发送的时候，都必须标记数据流ID，用来区分它属于哪个数据流。另外还规定，客户端发出的数据流，ID一律为奇数，服务器发出的，ID为偶数。</p>
<p>  头信息压缩：头信息使用<code>gzip</code>或<code>compress</code>压缩后再发送；另一方面，客户端和服务器同时维护一张头信息表，所有字段都会存入这个表，生成一个索引号，以后就不发送同样字段了，只发送索引号，这样就提高速度了。</p>
<p>  服务器推送：允许服务器未经请求，主动向客户端发送资源，这叫做服务器推送（server push）。</p>
</blockquote>
<p>参考链接：<a href="http://www.ruanyifeng.com/blog/2012/05/internet_protocol_suite_part_i.html" target="_blank" rel="noopener">互联网协议入门（一）</a>、<a href="http://www.ruanyifeng.com/blog/2012/06/internet_protocol_suite_part_ii.html" target="_blank" rel="noopener">互联网协议入门（二）</a>、<a href="http://www.ruanyifeng.com/blog/2016/08/http.html" target="_blank" rel="noopener">HTTP 协议入门</a></p>
<h2 id="HTTP和HTTPS"><a href="#HTTP和HTTPS" class="headerlink" title="HTTP和HTTPS"></a>HTTP和HTTPS</h2><p>HTTPS是在HTTP的基础上对传输的内容进行了加密。</p>
<p>HTTPS传输就是在HTTP的传输过程上添加了ssl校验</p>
<ol>
<li><p><strong>客户端发出请求</strong>：支持的协议版本，比如TLS 1.0版；一个客户端生成的随机数，稍后用于生成”对话密钥”；支持的加密方法，比如RSA公钥加密； 支持的压缩方法。</p>
</li>
<li><p><strong>服务器回应</strong>：确认使用的加密通信协议版本，比如TLS 1.0版本；一个服务器生成的随机数，稍后用于生成”对话密钥”；确认使用的加密方法，比如RSA公钥加密；服务器证书。</p>
</li>
<li><p><strong>客户端回应</strong>：客户端验证服务器证书有效后，向服务器发送三个信息：一个随机数。该随机数用服务器公钥加密，防止被窃听；编码改变通知，表示随后的信息都将用双方商定的加密方法和密钥发送；客户端握手结束通知，表示客户端的握手阶段已经结束。</p>
</li>
<li><p><strong>服务器的最后回应</strong>：将客户机发送的随机数解密后，向客户机发送两个信息：编码改变通知，表示随后的信息都将用双方商定的加密方法和密钥发送；服务器握手结束通知，表示服务器的握手阶段已经结束。</p>
</li>
<li><p>至此，整个握手阶段全部结束。接下来，客户端与服务器进入加密通信，就完全是使用普通的HTTP协议，只不过用”会话密钥”加密内容。</p>
</li>
</ol>
<p>参考内容：<a href="http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html" target="_blank" rel="noopener">SSL/TLS协议运行机制的概述</a></p>
<h2 id="HTTP状态码"><a href="#HTTP状态码" class="headerlink" title="HTTP状态码"></a>HTTP状态码</h2><table>
<thead>
<tr>
<th align="center">状态码</th>
<th align="left">状态码英文名称</th>
<th align="left">中文描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">100</td>
<td align="left">Continue</td>
<td align="left">继续。客户端应继续其请求</td>
</tr>
<tr>
<td align="center">101</td>
<td align="left">Switching Protocols</td>
<td align="left">切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">状态码</th>
<th align="left">状态码英文名称</th>
<th align="left">中文描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">200</td>
<td align="left">OK</td>
<td align="left">请求成功，一般用于GET与POST请求</td>
</tr>
<tr>
<td align="center">201</td>
<td align="left">Created</td>
<td align="left">已创建，成功请求并创建了新的资源</td>
</tr>
<tr>
<td align="center">202</td>
<td align="left">Accepted</td>
<td align="left">已接受，已经接受请求，但未处理完成</td>
</tr>
<tr>
<td align="center">203</td>
<td align="left">Non-Authoritative Information</td>
<td align="left">非授权信息。请求成功。服务器已成功处理了请求，但返回的信息可能来自另一来源。</td>
</tr>
<tr>
<td align="center">204</td>
<td align="left">No Content</td>
<td align="left">无内容。服务器成功处理，但未返回内容。</td>
</tr>
<tr>
<td align="center">205</td>
<td align="left">Reset Content</td>
<td align="left">重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。</td>
</tr>
<tr>
<td align="center">206</td>
<td align="left">Partial Content</td>
<td align="left">部分内容，服务器成功处理了部分GET请求</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">状态码</th>
<th align="left">状态码英文名称</th>
<th align="left">中文描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">300</td>
<td align="left">Multiple Choices</td>
<td align="left">多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端选择</td>
</tr>
<tr>
<td align="center">301</td>
<td align="left">Moved Permanently</td>
<td align="left">永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI</td>
</tr>
<tr>
<td align="center">302</td>
<td align="left">Found</td>
<td align="left">临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI</td>
</tr>
<tr>
<td align="center">303</td>
<td align="left">See Other</td>
<td align="left">查看其它地址。与301类似。使用GET和POST请求查看</td>
</tr>
<tr>
<td align="center">304</td>
<td align="left">Not Modified</td>
<td align="left">所请求的资源未修改，服务器不会返回任何资源。客户端通过一个头信息指定日期之后修改的资源</td>
</tr>
<tr>
<td align="center">305</td>
<td align="left">Use Proxy</td>
<td align="left">使用代理。所请求的资源必须通过代理访问</td>
</tr>
<tr>
<td align="center">306</td>
<td align="left">Unused</td>
<td align="left">已经被废弃的HTTP状态码</td>
</tr>
<tr>
<td align="center">307</td>
<td align="left">Temporary Redirect</td>
<td align="left">临时重定向。与302类似。使用GET请求重定向</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">状态码</th>
<th align="left">状态码英文名称</th>
<th align="left">中文描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">400</td>
<td align="left">Bad Request</td>
<td align="left">客户端请求的语法错误，服务器无法理解</td>
</tr>
<tr>
<td align="center">401</td>
<td align="left">Unauthorized</td>
<td align="left">请求要求用户的身份认证</td>
</tr>
<tr>
<td align="center">402</td>
<td align="left">Payment Required</td>
<td align="left">保留，将来使用</td>
</tr>
<tr>
<td align="center">403</td>
<td align="left">Forbidden</td>
<td align="left">服务器理解请求客户端的请求，但是拒绝执行此请求</td>
</tr>
<tr>
<td align="center">404</td>
<td align="left">Not Found</td>
<td align="left">服务器无法根据客户端的请求找到资源（网页）</td>
</tr>
<tr>
<td align="center">405</td>
<td align="left">Method Not Allowed</td>
<td align="left">客户端请求中的方法被禁止</td>
</tr>
<tr>
<td align="center">406</td>
<td align="left">Not Acceptable</td>
<td align="left">服务器无法根据客户端请求的内容特性完成请求</td>
</tr>
<tr>
<td align="center">407</td>
<td align="left">Proxy Authentication Required</td>
<td align="left">请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权</td>
</tr>
<tr>
<td align="center">408</td>
<td align="left">Request Time-out</td>
<td align="left">服务器等待客户端发送的请求时间过长，超时</td>
</tr>
<tr>
<td align="center">409</td>
<td align="left">Conflict</td>
<td align="left">服务器完成客户端的 PUT 请求时可能返回此代码，服务器处理请求时发生了冲突</td>
</tr>
<tr>
<td align="center">410</td>
<td align="left">Gone</td>
<td align="left">客户端请求的资源已经不存在。通常标识资源以前有现在被永久删除了</td>
</tr>
<tr>
<td align="center">411</td>
<td align="left">Length Required</td>
<td align="left">服务器无法处理客户端发送的不带Content-Length的请求信息</td>
</tr>
<tr>
<td align="center">412</td>
<td align="left">Precondition Failed</td>
<td align="left">客户端请求信息的先决条件错误</td>
</tr>
<tr>
<td align="center">413</td>
<td align="left">Request Entity Too Large</td>
<td align="left">由于请求的实体过大，服务器无法处理，因此拒绝请求</td>
</tr>
<tr>
<td align="center">414</td>
<td align="left">Request-URI Too Large</td>
<td align="left">请求的URI过长（URI通常为网址），服务器无法处理</td>
</tr>
<tr>
<td align="center">415</td>
<td align="left">Unsupported Media Type</td>
<td align="left">服务器无法处理请求附带的媒体格式</td>
</tr>
<tr>
<td align="center">416</td>
<td align="left">Requested range not satisfiable</td>
<td align="left">客户端请求的范围无效</td>
</tr>
<tr>
<td align="center">417</td>
<td align="left">Expectation Failed</td>
<td align="left">服务器无法满足Expect的请求头信息</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">状态码</th>
<th align="left">状态码英文名称</th>
<th align="left">中文描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">500</td>
<td align="left">Internal Server Error</td>
<td align="left">服务器内部错误，无法完成请求</td>
</tr>
<tr>
<td align="center">501</td>
<td align="left">Not Implemented</td>
<td align="left">服务器不支持请求的功能，无法完成请求</td>
</tr>
<tr>
<td align="center">502</td>
<td align="left">Bad Gateway</td>
<td align="left">作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应</td>
</tr>
<tr>
<td align="center">503</td>
<td align="left">Service Unavailable</td>
<td align="left">由于超载或系统维护，服务器暂时的无法处理客户端的请求</td>
</tr>
<tr>
<td align="center">504</td>
<td align="left">Gateway Time-out</td>
<td align="left">充当网关或代理的服务器，未及时从远端服务器获取请求</td>
</tr>
<tr>
<td align="center">505</td>
<td align="left">HTTP Version not supported</td>
<td align="left">服务器不支持请求的HTTP协议的版本，无法完成处理</td>
</tr>
</tbody></table>
<p>参考内容：<a href="https://www.runoob.com/http/http-status-codes.html" target="_blank" rel="noopener">HTTP状态码</a></p>
]]></content>
      <categories>
        <category>技术提升</category>
      </categories>
      <tags>
        <tag>TCP</tag>
      </tags>
  </entry>
  <entry>
    <title>Node使用及其管理</title>
    <url>/2020/node/</url>
    <content><![CDATA[<p>Node使用和管理相关方法和命令 <a id="more"></a></p>
<h2 id="nvm-安装"><a href="#nvm-安装" class="headerlink" title="nvm 安装"></a>nvm 安装</h2><p><code>wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash</code></p>
<h2 id="nvm配置源"><a href="#nvm配置源" class="headerlink" title="nvm配置源"></a>nvm配置源</h2><p><code>sudo find / -name nvm.sh</code> - 找到nvm.sh文件的位置。通常在 <code>~/nvm/nvm.sh</code> 下</p>
<p>找到 <code>NVM_NODEJS_ORG_MIRROR</code> 将后面的地址改为<code>https://npm.taobao.org/mirrors/node/</code></p>
<h2 id="nvm管理版本"><a href="#nvm管理版本" class="headerlink" title="nvm管理版本"></a>nvm管理版本</h2><p><code>nvm list</code> - 查看本地安装的所有版本</p>
<p><code>nvm install 11.0.0</code> - 安装指定版本node</p>
<p><code>nvm install stable</code> - 安装最新稳定版</p>
<p><code>nvm use 11.0.0</code> - 切换版本</p>
<p><code>nvm alias default 11.0.0</code> - 设置默认版本</p>
<p><code>nvm uninstall 11.0.0</code> - 卸载指定版本</p>
<p><code>nvm on</code> - 开启版本切换</p>
<p><code>nvm off</code> - 关闭版本切换</p>
<p><code>node -v</code> - 查看当前版本</p>
<h2 id="npm使用"><a href="#npm使用" class="headerlink" title="npm使用"></a>npm使用</h2><p><code>npm config set registry http://registry.npm.taobao.org</code> - 设置镜像地址为淘宝</p>
<p><code>npm config get registry</code> - 查看镜像地址</p>
]]></content>
      <categories>
        <category>技术提升</category>
      </categories>
      <tags>
        <tag>Node</tag>
      </tags>
  </entry>
  <entry>
    <title>OAuth2.0认证</title>
    <url>/2022/oauth2/</url>
    <content><![CDATA[<h2 id="OAuth介绍"><a href="#OAuth介绍" class="headerlink" title="OAuth介绍"></a>OAuth介绍</h2><p><a href="https://datatracker.ietf.org/doc/html/rfc6749" target="_blank" rel="noopener">OAuth2.0官方文档</a></p>
<ul>
<li>Open Standard Authorization (OAuth)</li>
<li>OAuth是一个网络开放协议。为保证用户资源的安全授权提供了简易的标准</li>
</ul>
<p>特点：</p>
<ul>
<li>简单：不管是OAUTH服务提供者还是应用开发者，都很易于理解与使用</li>
<li>安全：没有涉及到用户密钥等信息，更安全更灵活</li>
<li>开放：任何服务提供商都可以实现OAUTH，任何软件开发商都可以使用OAuth</li>
</ul>
<h2 id="OAuth2-0"><a href="#OAuth2-0" class="headerlink" title="OAuth2.0"></a>OAuth2.0</h2><ul>
<li>2012年10月，OAuth 2.0协议正式发布为RFC 6749</li>
<li>OAuth协议的下一版本，但不向后兼容OAuth 1.0</li>
<li>OAuth 2.0关注客户端开发者的简易性，同时为Web应用，桌面应用和手机，和起居室设备提供专门的认证流程</li>
</ul>
<h2 id="OAuth2-0角色"><a href="#OAuth2-0角色" class="headerlink" title="OAuth2.0角色"></a>OAuth2.0角色</h2><p>resource owner: 资源所有者，指的是用户</p>
<p>resource server: 资源服务器，指的是应用服务器</p>
<p>client: 客户端，指的是应用</p>
<p>authorization server: 授权服务器，指的是应用服务器</p>
<h2 id="OAuth2-0流程"><a href="#OAuth2-0流程" class="headerlink" title="OAuth2.0流程"></a>OAuth2.0流程</h2><pre><code>+--------+                               +---------------+
|        |--(A)- Authorization Request -&gt;|   Resource    |
|        |                               |     Owner     |
|        |&lt;-(B)-- Authorization Grant ---|               |
|        |                               +---------------+
|        |
|        |                               +---------------+
|        |--(C)-- Authorization Grant --&gt;| Authorization |
| Client |                               |     Server    |
|        |&lt;-(D)----- Access Token -------|               |
|        |                               +---------------+
|        |
|        |                               +---------------+
|        |--(E)----- Access Token ------&gt;|    Resource   |
|        |                               |     Server    |
|        |&lt;-(F)--- Protected Resource ---|               |
+--------+                               +---------------+</code></pre><p>A: 客户端向资源所有者请求授权。这授权请求可以直接向资源所有者提出，或者最好通过授权间接服务器作为中介</p>
<p>B: 客户端收到授权授权，这是一个代表资源所有者授权的凭证</p>
<p>C: 客户端通过身份验证请求访问令牌 授权服务器并提供授权许可</p>
<p>D: 授权服务器对客户端进行身份验证并验证授权，如果有效，则颁发访问令牌</p>
<p>E: 客户端向资源请求受保护的资源 服务器并通过提供访问令牌进行身份验证</p>
<p>F: 资源服务器验证访问令牌，如果有效，则提供资源</p>
<h2 id="OAuth2-0授权类型"><a href="#OAuth2-0授权类型" class="headerlink" title="OAuth2.0授权类型"></a>OAuth2.0授权类型</h2><ul>
<li>授权码（Authorization Code）</li>
<li>隐藏式（implicit）</li>
<li>密码式（password）</li>
<li>客户端凭证（client credentials）</li>
</ul>
<h3 id="授权码授权类型（Authorization-Code）"><a href="#授权码授权类型（Authorization-Code）" class="headerlink" title="授权码授权类型（Authorization Code）"></a>授权码授权类型（Authorization Code）</h3><p>第三方应用先申请一个授权码，再通过授权码获取访问令牌。适合有后端的应用，比如网站应用。</p>
<p>scope参数</p>
<p>步骤：</p>
<ol>
<li>A网站提供一个链接，链接中包含本网站的跳转地址、网站的身份（client_id或app_key），点击后跳转到B网站</li>
<li>B网站进行登陆，登陆成功后，跳转到A网站，并且在URL中携带一个授权码</li>
<li>A网站拿到授权码，在后端携带授权码来请求A网站的接口（携带授权码、appkey、secretkey）</li>
<li>B站收到请求，验证授权码，如果验证成功，则返回访问令牌，重刷令牌（access_token, refresh_token）</li>
</ol>
<p>通常请求格式为: <code>https://stolenzc.com/oauth/authorize?response_type=code&amp;appkey=appkey&amp;redirect_uri=redirect_uri&amp;scope=scope</code></p>
<ul>
<li>response_type: 授权类型，必须为code</li>
<li>appkey: 网站的身份，为应用在网站申请的appkey</li>
<li>redirect_uri: 申请成功后网站的回跳地址</li>
<li>scope: 网站的范围，可以为空，为空则表示全部范围，可以为多个范围，用逗号分隔</li>
</ul>
<p>响应格式: 在回跳地址中携带授权码，比如：<code>https://stolenzc.com/callback?code=1234567890</code></p>
<p>后台再请求令牌的格式: <code>https://stolenzc.com/oauth/token?appkey=appkey&amp;appsecret=appsecret&amp;grant_type=authorization_code&amp;code=code&amp;redirect_uri=redirect_uri</code></p>
<ul>
<li>grant_type: 授权类型，必须为authorization_code</li>
<li>appkey: 网站的身份，为应用在网站申请的appkey</li>
<li>appsecret: 网站的身份，为应用在网站申请的appsecret,appsecret为保密的，所以只能在后端请求</li>
<li>code: 授权码</li>
<li>redirect_uri: 验证成功后授权方带上token数据请求该uri地址传递token数据</li>
</ul>
<h3 id="隐藏式授权类型（implicit）"><a href="#隐藏式授权类型（implicit）" class="headerlink" title="隐藏式授权类型（implicit）"></a>隐藏式授权类型（implicit）</h3><p>第三方应用请求接口直接获取访问令牌。适合没有后端的应用，比如移动应用。</p>
<p>步骤：</p>
<ol>
<li>A网站提供一个链接，链接中包含本网站的跳转地址、网站的身份（client_id或app_key），点击后跳转到B网站</li>
<li>B网站进行登陆，登陆成功后，跳转到A网站，并且在URL中以锚点的形式携带一个访问令牌</li>
</ol>
<p>通常请求格式为: <code>https://stolenzc.com/oauth/authorize?response_type=token&amp;appkey=appkey&amp;redirect_uri=redirect_uri&amp;scope=scope</code></p>
<ul>
<li>response_type: 授权类型，必须为token</li>
<li>appkey: 网站的身份，为应用在网站申请的appkey</li>
<li>redirect_uri: 申请成功后网站的回跳地址</li>
<li>scope: 网站的范围，可以为空，为空则表示全部范围，可以为多个范围，用逗号分隔</li>
</ul>
<h3 id="密码式授权类型（password）"><a href="#密码式授权类型（password）" class="headerlink" title="密码式授权类型（password）"></a>密码式授权类型（password）</h3><p>第三方应用拿到用户账号密码，直接用账号密码获取令牌</p>
<ol>
<li>A网站要求用户提供账号和密码，拿到后A网站直接向B网站请求令牌</li>
<li>B网站验证密码后，直接返回令牌，不需要进行跳转</li>
</ol>
<p>请求令牌的格式: <code>https://stolenzc.com/oauth/token?appkey=appkey&amp;grant_type=password&amp;username=username&amp;password=password</code></p>
<ul>
<li>grant_type: 授权类型，必须为password</li>
<li>appkey: 网站的身份，为应用在网站申请的appkey</li>
<li>username: 用户名</li>
<li>password: 密码</li>
</ul>
<h3 id="凭证式授权类型（client-credentials）"><a href="#凭证式授权类型（client-credentials）" class="headerlink" title="凭证式授权类型（client credentials）"></a>凭证式授权类型（client credentials）</h3><p>凭证式适用于没有前端的命令行应用，通常是多个用户享用一个令牌，通常针对第三方应用，不是针对用户的。</p>
<ol>
<li>A应用在命令行向B应用发出接口请求，只需要携带appkey和secretkey即可</li>
<li>B应用验证通过后，直接返回令牌</li>
</ol>
<p>请求令牌的格式: <code>https://stolenzc.com/oauth/token?grant_type=client_credentials&amp;appkey=appkey&amp;secretkey=secretkey</code></p>
<ul>
<li>grant_type: 授权类型，必须为client_credentials</li>
<li>appkey: 网站的身份，为应用在网站申请的appkey</li>
<li>secretkey: 网站的身份，为应用在网站申请的appsecret</li>
</ul>
<h2 id="使用令牌和令牌过期"><a href="#使用令牌和令牌过期" class="headerlink" title="使用令牌和令牌过期"></a>使用令牌和令牌过期</h2><p>后续请求资源的时候，需要将令牌放在请求头中携带</p>
<p>通常在申请令牌的时候，会同时返回一个refresh_token，用来在token失效的时候，重新申请一个新的令牌。</p>
<p>重刷令牌的格式: <code>https://stolenzc.com/oauth/token?grant_type=refresh_token&amp;appkey=appkey&amp;secretkey=secretkey&amp;refresh_token=refresh_token</code></p>
<ul>
<li>grant_type: 授权类型，必须为refresh_token</li>
<li>appkey: 网站的身份，为应用在网站申请的appkey</li>
<li>secretkey: 网站的身份，为应用在网站申请的appsecret</li>
<li>refresh_token: 重刷令牌</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>认证</tag>
        <tag>token</tag>
        <tag>登陆</tag>
      </tags>
  </entry>
  <entry>
    <title>Python中时间操作</title>
    <url>/2021/python_datetime/</url>
    <content><![CDATA[<blockquote>
<p>说明：以 classmethod 开头表示类方法，不以 classmethod 开头表示对象方法</p>
</blockquote>
<h2 id="datetime-timezone"><a href="#datetime-timezone" class="headerlink" title="datetime.timezone"></a>datetime.timezone</h2><p>class datetime.timezone(offset, name=None)</p>
<ul>
<li>offset需要指定一个timedelta对象，表示与UTC时间的差值，范围在 <code>-timedelta(hours=24)</code> 到 <code>timedelta(hours=24)</code> 之间，注意这两个值不能取</li>
</ul>
<p>timezone.utc</p>
<ul>
<li>返回一个timezone对象，表示获取utc时区，等同于 <code>datetime.timezone(deltatime(0))</code></li>
<li>这是一个类属性（准确说是一个变量），不能在后面加括号调用</li>
</ul>
<h2 id="datetime-datetime"><a href="#datetime-datetime" class="headerlink" title="datetime.datetime"></a>datetime.datetime</h2><p>class datetime.datetime(year, month, day, hour=0, minute=0, second=0, microsecond=0, tzinfo=None, *, fold=0)</p>
<ul>
<li>year、month、day 值是必须的，tzinfo可以为None，也可以为tzinfo的一个实例</li>
</ul>
<p>classmethod datetime.now(tz=None)</p>
<ul>
<li>获取当前时间，返回一个datetime对象，默认tzinfo为None，表示本地时区，可以手动指定时区</li>
</ul>
<p>classmethod datetime.today()</p>
<ul>
<li>获取本地当前时间，相当于now(tz=None)</li>
</ul>
<p>classmethod datetime.utcnow()</p>
<ul>
<li>获取utc时区的当前时间，tzinfo为None</li>
</ul>
<p>classmethod datetime.strptime(date_string, format)</p>
<ul>
<li>将字符串解析为datetime时间，format表示date_string的格式</li>
</ul>
<p>datetime.strftime(format)</p>
<ul>
<li>返回一个字符串，由format控制格式</li>
</ul>
<p>classmethod datetime.fromtimestamp(timestamp, tz=None)</p>
<ul>
<li>将时间戳转换为datetime格式，不指定tz则为本地时区时间。</li>
</ul>
<p>classmethod datetime.utcfromtimestamp(timestamp)</p>
<ul>
<li>将时间戳转换为datetime格式的utc时区时间</li>
</ul>
<p>datetime.timestamp()</p>
<ul>
<li>返回datetime对应的时间戳</li>
</ul>
<p>classmethod datetime.combine(date, time, tzinfo=self.tzinfo)</p>
<ul>
<li>将时间、日期组成一个datetime格式的时间</li>
</ul>
<p>datetime.year/month/day/hour/minute/second/microsecond/tzinfo</p>
<ul>
<li>获取datetime的部分时间信息</li>
</ul>
<p>datetime.date()/time()</p>
<ul>
<li>获取datetime的时间或日期信息</li>
</ul>
<p>datetime.weekday()</p>
<ul>
<li>返回时间对应的星期，星期一为0，星期天为6</li>
</ul>
<p>datetime.isoweekday()</p>
<ul>
<li>以整数形式返回星期，星期一为1，星期天为7</li>
</ul>
<h2 id="django-utils-timezone"><a href="#django-utils-timezone" class="headerlink" title="django.utils.timezone"></a>django.utils.timezone</h2><p>utc</p>
<ul>
<li>获取utc时区的tzinfo实例（可以赋值给tz）</li>
</ul>
<p>now()</p>
<ul>
<li>获取当前时间，使用时区为UTC时区</li>
</ul>
<p>get_current_timezone()</p>
<ul>
<li>获取本地时区的tzinfo实例</li>
</ul>
<p>localtime(value=None, timezone=None)</p>
<ul>
<li>将带时区的datetime转换为指定时区的datetime</li>
<li>value是带时区的datetime类型，默认为now()</li>
<li>timezone默认为本地时区</li>
</ul>
<p>localdate(value=None, timezone=None)</p>
<ul>
<li>将带时区的datetime转换为指定时区的date</li>
<li>value是带时区的datetime类型，默认为now()</li>
<li>timezone默认为本地时区</li>
</ul>
<p>is_aware(value)</p>
<ul>
<li>是否有时区，value为datetime类型，tzinfo不为None返回True</li>
</ul>
<p>is_naive(value)</p>
<ul>
<li>是否无时区，和is_aware相反</li>
</ul>
<p>make_aware(value, timezone=None, is_dst=None)</p>
<ul>
<li>将无时区的datetime转换为有时区的datetime，</li>
<li>value是一个没有时区的datetime类型，timezone为None则默认使用本地时区</li>
</ul>
<p>make_naive(value, timezone=None)</p>
<ul>
<li>将有时区的datetime转换为无时区的datetime</li>
<li>value是一个有时区的datetime，会先把时间转换到指定时区的时间，然后去除时区信息</li>
<li>timezone为None默认使用本地时区</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Django</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python下遇到的一些故障</title>
    <url>/2020/python_issue/</url>
    <content><![CDATA[<p>收集一些使用Python会遇到的问题，该文章持续更新<a id="more"></a></p>
<h2 id="mysqlclient安装失败"><a href="#mysqlclient安装失败" class="headerlink" title="mysqlclient安装失败"></a>mysqlclient安装失败</h2><p>Ubuntu下安装mysqlclient需要依次安装以下包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install libmysqlclient-dev</span><br><span class="line">sudo apt install libssl-dev</span><br><span class="line">sudo apt install libcrypto++-dev</span><br><span class="line">sudo pip3 install mysqlclient</span><br><span class="line"><span class="comment"># 报错error: invalid command 'bdist_wheel</span></span><br><span class="line">pip3 install wheel</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果还报错就执行下面的包安装</span></span><br><span class="line">sudo apt-get install python3 python-dev python3-dev</span><br><span class="line">sudo apt-get install build-essential libssl-dev libffi-dev</span><br><span class="line">sudo apt-get install libxml2-dev libxslt1-dev zlib1g-dev</span><br></pre></td></tr></table></figure>

<h2 id="安装flask-mongoengine报错"><a href="#安装flask-mongoengine报错" class="headerlink" title="安装flask-mongoengine报错"></a>安装flask-mongoengine报错</h2><p>需要安装一下依赖包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install rednose</span><br><span class="line">pip3 install nose</span><br><span class="line">pip3 install coverage</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>故障避坑</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Software Manual</title>
    <url>/2020/software_manual/</url>
    <content><![CDATA[<p>通用跨平台软件介绍和一些配置<a id="more"></a></p>
<h2 id="Hyper"><a href="#Hyper" class="headerlink" title="Hyper"></a>Hyper</h2><p>简介：一款界面美观的terminal命令行工具，基于Electorn开发，三大桌面平台均支持，而且支持插件安装，方便扩展功能。</p>
<p>下载地址：<a href="https://hyper.is/" target="_blank" rel="noopener">官网</a>，<a href="https://github.com/vercel/hyper" target="_blank" rel="noopener">github</a></p>
<p>常用命令：</p>
<ul>
<li><code>hyper i 插件名称</code> - 安装插件</li>
<li><code>hyper u 插件名称</code> - 卸载插件</li>
<li><code>hyper --help</code> - 查看更多命令</li>
</ul>
<p>常用插件：</p>
<ul>
<li><code>hypercwd</code> - 让你打开新的Tab页时自动保持上一个Tab页的路径。</li>
<li><code>hyper-search</code> - 使用<code>command + f</code>对命令行窗口里的内容全文检索。</li>
<li><code>hype-pane</code> - 同时显示多个命令行面板</li>
</ul>
<p><a href="https://github.com/bnb/awesome-hyper" target="_blank" rel="noopener">更多插件和主题</a></p>
<p>配置文件地址：</p>
<ul>
<li>Mac: <code>~/Library/Application Support/Hyper/.hyper.js</code></li>
<li>Windows: <code>$Env:AppData/Hyper/.hyper.js</code></li>
<li>Linux: <code>~/.config/Hyper/.hyper.js</code></li>
</ul>
<p>快捷使用：</p>
<ul>
<li><code>command + ⬅️\➡️</code> - 快速到行首\尾</li>
</ul>
]]></content>
      <categories>
        <category>软件上手</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>Swagger编写API文档的YMAL文件语法</title>
    <url>/2020/swagger/</url>
    <content><![CDATA[<p>使用Swagger编写接口文档语法示例<a id="more"></a></p>
<p>官方openapi3.0规范访问：<a href="https://swagger.io/docs/specification/about/" target="_blank" rel="noopener">About Swagger Specification</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">swagger:</span> <span class="string">"2.0"</span>  </span><br><span class="line"><span class="attr">info:</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">"this is a api for authenticating users and binding cloud accounts."</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">"1.0.0"</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">"Auth api"</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>swagger: “2.0” 指定swagger的版本号，此处必须为2.0</p>
<p>info: 描述api文档的元数据</p>
<p>title：接口标题</p>
<p>description：接口文档描述</p>
<p>version：接口版本号</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">host:</span> <span class="string">"52.82.26.240:5000"</span></span><br><span class="line"><span class="attr">basePaths:</span> <span class="string">/api</span></span><br><span class="line"><span class="attr">schemes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">http</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https</span></span><br><span class="line"><span class="attr">produces:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">application/json</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>host： swagger提供测试用例的主机名，如果未设定就为当前主机，可以设置端口</p>
<p>basePath：定义的api的前缀，必须已/开头,测试用例的主机则为:host＋bashPath</p>
<p>schemes：指定调用接口的协议，必须是:”http”, “https”, “ws”, “wss”．默认是http.-表示是个数组元素，即schemes接受一个数组参数</p>
<p>produces：声明全局后端响应返回xml数据格式，通常使用”application/json”或者”application/xml”，可以在局部中定义覆盖全局</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">paths:</span></span><br><span class="line">  <span class="string">/authenticate:</span></span><br><span class="line">    <span class="attr">post:</span></span><br><span class="line">      <span class="attr">tags:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"auth"</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">"Get a accessToken"</span></span><br><span class="line">      <span class="attr">consumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"application/json"</span></span><br><span class="line">      <span class="attr">produces:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"application/json"</span></span><br><span class="line">      <span class="attr">parameters:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">"body"</span></span><br><span class="line">        <span class="attr">description:</span> <span class="string">"account of fastone"</span></span><br><span class="line">        <span class="attr">required:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">in:</span> <span class="string">"body"</span></span><br><span class="line">        <span class="attr">schema:</span></span><br><span class="line">          <span class="string">$ref:</span> <span class="string">"#/definitions/Auth"</span></span><br><span class="line">      <span class="attr">responses:</span></span><br><span class="line">        <span class="attr">400:</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">"Invalid input"</span></span><br><span class="line">        <span class="attr">403:</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">"Invalid credential"</span></span><br><span class="line">        <span class="attr">200:</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">"Get a accessToken"</span></span><br><span class="line">        <span class="attr">default:</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>paths: 路由地址</p>
<p>post: 请求方法，需要是http定义的请求方法（get、post、put、patch、delete、head、option）</p>
<p>tags: 命名空间，也可以称为标签，方便对接口进行归类，快速过滤出相关接口</p>
<p>summary: 接口概要</p>
<p>description：接口描述</p>
<p>consumes：前端请求格式，即body的参数格式，通常为”application/json”、”application/xml”、”application/text”</p>
<p>produces：后端响应格式，通常为”application/json”、”application/xml”、”application/text”</p>
<p>parameters：参数</p>
<p>name： 参数名字</p>
<p>description：描述</p>
<p>required：是否是必填参数</p>
<p>in：属于哪种参数 body, header, formData, query, path，cookie</p>
<p>body只能有一个，body里的参数需要以model的形式通过schema放在里面</p>
<p>enum：枚举参数值，表示可能出现的参数</p>
<p>schema：描述传递值</p>
<p>$ref: “#/definitions/Auth”</p>
<p>$ref: 把model 在definitions里的Auth当作参数放入body中。</p>
<p>responses： 状态码</p>
</blockquote>
<p>model Auth的写法，会放到yaml的最后，内容如下</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">definitions:</span></span><br><span class="line">  <span class="attr">Auth:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">"string"</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">usernameOrEmail:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">"string"</span></span><br><span class="line">      <span class="attr">password:</span> </span><br><span class="line">        <span class="attr">type:</span> <span class="string">"string"</span></span><br></pre></td></tr></table></figure>

<p>示例代码，转载于<a href="https://blog.csdn.net/u010466329/article/details/78522992" target="_blank" rel="noopener">Swagger编写API文档的YAML中文示例</a>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#必要字段！Swagger规范版本，必须填2.0，否则该YAML将不能用于Swagger其他组件</span></span><br><span class="line"><span class="attr">swagger:</span> <span class="string">'2.0'</span></span><br><span class="line"><span class="comment">#必要字段！描述API接口信息的元数据</span></span><br><span class="line"><span class="attr">info:</span></span><br><span class="line">  <span class="comment">#接口标题</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">swagger说明文档</span>　</span><br><span class="line">  <span class="comment">#接口文档的描述</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">学习Swagger</span></span><br><span class="line">  <span class="comment">#版本号</span></span><br><span class="line">  <span class="attr">version:</span> <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line"><span class="comment">#Swagger会提供测试用例，host指定测试时的主机名，如果没有指定就是当前主机,可以指定端口．</span></span><br><span class="line"><span class="attr">host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="comment">#定义的api的前缀，必须已/开头,测试用例的主机则为:host＋bashPath</span></span><br><span class="line"><span class="attr">basePath:</span> <span class="string">/api</span></span><br><span class="line"><span class="comment">#指定调用接口的协议，必须是:"http", "https", "ws", "wss"．默认是http.-表示是个数组元素，即schemes接受一个数组参数</span></span><br><span class="line"><span class="attr">schemes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">http</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https</span></span><br><span class="line"><span class="comment">#对应与http协议头request的Accept，调用者可接受类型,默认是*/*,定义的类型必须是http协议定义的 Mime Types,RestfulAPI一般定义成application/json</span></span><br><span class="line"><span class="comment">#这两个是对所有接口的全局设置，在细化的接口中是还可以对应这两个属性来覆盖全局属性</span></span><br><span class="line"><span class="attr">produces:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">application/json</span></span><br><span class="line"><span class="comment">#必要字段!定义可有可操作的API</span></span><br><span class="line"><span class="attr">paths:</span></span><br><span class="line">  <span class="string">/users:</span></span><br><span class="line">   <span class="comment">#必要字段!定义HTTP操作方法，必须是http协议定义的方法</span></span><br><span class="line">    <span class="attr">get:</span></span><br><span class="line">      <span class="comment">#接口概要</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">查询所有用户信息</span></span><br><span class="line">      <span class="comment">#接口描述</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">查询出所有用户的所有信息，用户名，别名</span></span><br><span class="line">      <span class="comment">#标签，方便快速过滤出User相关的接口</span></span><br><span class="line">      <span class="attr">tags:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">User</span></span><br><span class="line">      <span class="comment">#返回值描述，必要自动</span></span><br><span class="line">      <span class="attr">responses:</span></span><br><span class="line">        <span class="comment">#返回的http状态码</span></span><br><span class="line">        <span class="attr">200:</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">所有用户信息或者用户的集合信息</span></span><br><span class="line">          <span class="comment">#描述返回值</span></span><br><span class="line">          <span class="attr">schema:</span></span><br><span class="line">            <span class="comment">#返回值格式，可选的有array,integer,string,boolean</span></span><br><span class="line">            <span class="attr">type:</span> <span class="string">array</span></span><br><span class="line">            <span class="comment">#针对array,每个条目的格式,type定义为array．必要填写items</span></span><br><span class="line">            <span class="attr">items:</span></span><br><span class="line">              <span class="comment">#引用在definitions下定义的Users</span></span><br><span class="line">              <span class="string">$ref:</span> <span class="string">'#/definitions/User'</span></span><br><span class="line">        <span class="comment">#执行出错的处理</span></span><br><span class="line">        <span class="attr">default:</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">操作异常,执行失败.返回信息描述错误详情</span></span><br><span class="line">          <span class="attr">schema:</span></span><br><span class="line">            <span class="comment">#值类型</span></span><br><span class="line">            <span class="attr">type:</span> <span class="string">object</span></span><br><span class="line">            <span class="comment">#定义属性</span></span><br><span class="line">            <span class="attr">properties:</span></span><br><span class="line">            <span class="comment">#属性名</span></span><br><span class="line">              <span class="attr">message:</span></span><br><span class="line">                <span class="comment">#类型</span></span><br><span class="line">                <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">    <span class="comment">#即对于同一个url定义两个不同的方法，表示两个接口</span></span><br><span class="line">    <span class="attr">post:</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">注册一个用户</span></span><br><span class="line">      <span class="comment">#请求参数</span></span><br><span class="line">      <span class="attr">parameters:</span></span><br><span class="line">          <span class="comment">#参数key</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">username</span></span><br><span class="line">          <span class="comment">#传递方法，formData表示表单传输，还有query表示url拼接传输，path表示作为url的一部分</span></span><br><span class="line">          <span class="comment">#body表示http头承载参数(body只能有一个,有body不能在有其他的)</span></span><br><span class="line">          <span class="attr">in:</span> <span class="string">formData</span></span><br><span class="line">          <span class="comment">#参数描述</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">用户名，不能使用已经被注册过的</span></span><br><span class="line">          <span class="comment">#参数是否必要，默认false</span></span><br><span class="line">          <span class="attr">required:</span> <span class="literal">true</span></span><br><span class="line">          <span class="comment">#参数类型，可选的包括array,integer,boolean,string.使用array必须使用items</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">password</span></span><br><span class="line">          <span class="attr">in:</span> <span class="string">formData</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">用户登陆密码，加密传输，加密存储</span></span><br><span class="line">          <span class="attr">required:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">alias</span></span><br><span class="line">          <span class="attr">in:</span> <span class="string">formData</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">用户别名</span></span><br><span class="line">          <span class="comment">#非必要字段</span></span><br><span class="line">          <span class="attr">required:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">responses:</span></span><br><span class="line">        <span class="comment">#返回的http状态码</span></span><br><span class="line">        <span class="attr">200:</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">通过返回值来标示执行结果</span>　<span class="string">返回true表示执行成功</span></span><br><span class="line">          <span class="attr">schema:</span></span><br><span class="line">             <span class="comment">#值类型</span></span><br><span class="line">              <span class="attr">type:</span> <span class="string">object</span></span><br><span class="line">              <span class="comment">#定义属性</span></span><br><span class="line">              <span class="attr">properties:</span></span><br><span class="line">              <span class="comment">#属性名</span></span><br><span class="line">                <span class="attr">status:</span></span><br><span class="line">                  <span class="comment">#类型</span></span><br><span class="line">                  <span class="attr">type:</span> <span class="string">boolean</span></span><br><span class="line">                  <span class="comment">#描述</span></span><br><span class="line">                  <span class="attr">description:</span> <span class="string">是否成功</span></span><br><span class="line">        <span class="comment">#执行出错的处理</span></span><br><span class="line">        <span class="attr">default:</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">操作异常,执行失败.返回信息描述错误详情</span></span><br><span class="line">          <span class="attr">schema:</span></span><br><span class="line">            <span class="comment">#值类型</span></span><br><span class="line">            <span class="attr">type:</span> <span class="string">object</span></span><br><span class="line">            <span class="comment">#定义属性</span></span><br><span class="line">            <span class="attr">properties:</span></span><br><span class="line">            <span class="comment">#属性名</span></span><br><span class="line">              <span class="attr">message:</span></span><br><span class="line">                <span class="comment">#类型</span></span><br><span class="line">                <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">  <span class="string">/users/&#123;id&#125;:</span></span><br><span class="line">    <span class="comment">#&#123;id&#125;表示id为请求参数，例如/users/1,/users/2都是对该API的请求，此时id即为１和2</span></span><br><span class="line">    <span class="attr">get:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">根据用户名id查询该用户的所有信息</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">查询出某个用户的所有信息，用户名，别名等</span></span><br><span class="line">      <span class="attr">tags:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">User</span></span><br><span class="line">      <span class="attr">parameters:</span></span><br><span class="line">        <span class="comment">#上面接口中定义了&#123;id&#125;，则参数列表中必须包含参数id,并且请求类型为path</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">id</span></span><br><span class="line">          <span class="attr">in:</span> <span class="string">path</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">要查询的用户的用户名,它是唯一标识</span></span><br><span class="line">          <span class="attr">required:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">      <span class="attr">responses:</span></span><br><span class="line">        <span class="attr">200:</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">所有用户信息或者用户的集合信息</span></span><br><span class="line">          <span class="attr">schema:</span></span><br><span class="line">              <span class="string">$ref:</span> <span class="string">'#/definitions/User'</span></span><br><span class="line">        <span class="attr">default:</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">操作异常,执行失败.返回信息描述错误详情</span></span><br><span class="line">          <span class="attr">schema:</span></span><br><span class="line">              <span class="comment">#值类型</span></span><br><span class="line">              <span class="attr">type:</span> <span class="string">object</span></span><br><span class="line">              <span class="comment">#定义属性</span></span><br><span class="line">              <span class="attr">properties:</span></span><br><span class="line">              <span class="comment">#属性名</span></span><br><span class="line">                <span class="attr">message:</span></span><br><span class="line">                  <span class="comment">#类型</span></span><br><span class="line">                  <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">    <span class="comment">#http定义的delete方法,删除一个资源</span></span><br><span class="line">    <span class="attr">delete:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">删除用户</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">删除某个用户的信息，被删除的用户将无法登陆</span></span><br><span class="line">      <span class="attr">parameters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">id</span></span><br><span class="line">          <span class="attr">in:</span> <span class="string">path</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">          <span class="attr">required:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">用户的唯一标示符</span></span><br><span class="line">      <span class="attr">tags:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">User</span></span><br><span class="line">      <span class="attr">responses:</span></span><br><span class="line">        <span class="attr">200:</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">通过返回值来标示执行结果</span>　<span class="string">返回true表示执行成功</span></span><br><span class="line">          <span class="attr">schema:</span></span><br><span class="line">             <span class="comment">#值类型</span></span><br><span class="line">              <span class="attr">type:</span> <span class="string">object</span></span><br><span class="line">              <span class="comment">#定义属性</span></span><br><span class="line">              <span class="attr">properties:</span></span><br><span class="line">              <span class="comment">#属性名</span></span><br><span class="line">                <span class="attr">status:</span></span><br><span class="line">                  <span class="comment">#类型</span></span><br><span class="line">                  <span class="attr">type:</span> <span class="string">boolean</span></span><br><span class="line">                  <span class="comment">#描述</span></span><br><span class="line">                  <span class="attr">description:</span> <span class="string">是否成功</span></span><br><span class="line">        <span class="attr">default:</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">操作异常,执行失败.返回信息描述错误详情</span></span><br><span class="line">          <span class="attr">schema:</span></span><br><span class="line">              <span class="comment">#值类型</span></span><br><span class="line">              <span class="attr">type:</span> <span class="string">object</span></span><br><span class="line">              <span class="comment">#定义属性</span></span><br><span class="line">              <span class="attr">properties:</span></span><br><span class="line">              <span class="comment">#属性名</span></span><br><span class="line">                <span class="attr">message:</span></span><br><span class="line">                  <span class="comment">#类型</span></span><br><span class="line">                  <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">                  <span class="comment">#描述错误信息</span></span><br><span class="line">    <span class="comment">#http定义的patch方法，表示修改一个资源</span></span><br><span class="line">    <span class="attr">patch:</span></span><br><span class="line">      <span class="attr">summary:</span> <span class="string">用户信息修改</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">修改用户信息(用户名别名)</span></span><br><span class="line">      <span class="attr">parameters:</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">id</span></span><br><span class="line">          <span class="attr">in:</span> <span class="string">path</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">用户名,要修改的数据的唯一标识符</span></span><br><span class="line">          <span class="attr">required:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">alias</span></span><br><span class="line">          <span class="attr">in:</span> <span class="string">formData</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">新的用户别名</span></span><br><span class="line">          <span class="attr">required:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">      <span class="attr">tags:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">User</span></span><br><span class="line">      <span class="attr">responses:</span></span><br><span class="line">        <span class="attr">200:</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">通过返回值来标示执行结果</span>　<span class="string">返回true表示执行成功</span></span><br><span class="line">          <span class="attr">schema:</span></span><br><span class="line">            <span class="comment">#值类型</span></span><br><span class="line">              <span class="attr">type:</span> <span class="string">object</span></span><br><span class="line">              <span class="comment">#定义属性</span></span><br><span class="line">              <span class="attr">properties:</span></span><br><span class="line">              <span class="comment">#属性名</span></span><br><span class="line">                <span class="attr">status:</span></span><br><span class="line">                  <span class="comment">#类型</span></span><br><span class="line">                  <span class="attr">type:</span> <span class="string">boolean</span></span><br><span class="line">                  <span class="comment">#描述</span></span><br><span class="line">                  <span class="attr">description:</span> <span class="string">是否成功</span></span><br><span class="line">        <span class="attr">default:</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">操作异常,执行失败.返回信息描述错误详情</span></span><br><span class="line">          <span class="attr">schema:</span></span><br><span class="line">              <span class="comment">#值类型</span></span><br><span class="line">              <span class="attr">type:</span> <span class="string">object</span></span><br><span class="line">              <span class="comment">#定义属性</span></span><br><span class="line">              <span class="attr">properties:</span></span><br><span class="line">              <span class="comment">#属性名</span></span><br><span class="line">                <span class="attr">message:</span></span><br><span class="line">                  <span class="comment">#类型</span></span><br><span class="line">                  <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">                  <span class="comment">#描述错误信息</span></span><br><span class="line"><span class="attr">definitions:</span></span><br><span class="line">  <span class="attr">User:</span></span><br><span class="line">    <span class="comment">#值类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">object</span></span><br><span class="line">    <span class="comment">#定义属性</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">    <span class="comment">#属性名</span></span><br><span class="line">      <span class="attr">id:</span></span><br><span class="line">        <span class="comment">#类型</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">        <span class="comment">#描述</span></span><br><span class="line">        <span class="attr">description:</span> <span class="string">用户的唯一id</span></span><br><span class="line">      <span class="attr">username:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">        <span class="attr">description:</span> <span class="string">用户名</span></span><br><span class="line">      <span class="attr">alias:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">string</span></span><br><span class="line">        <span class="attr">description:</span> <span class="string">别名</span></span><br></pre></td></tr></table></figure>



<p>参考文档：<a href="https://blog.csdn.net/qq_43178297/article/details/88848654" target="_blank" rel="noopener">用swagger生成api的接口文档（yaml版）</a></p>
<p>查看效果：<a href="http://editor.swagger.io/" target="_blank" rel="noopener">swagger.io</a></p>
]]></content>
      <categories>
        <category>技术提升</category>
      </categories>
      <tags>
        <tag>swagger</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu使用手册</title>
    <url>/2020/ubuntu/</url>
    <content><![CDATA[<p>便捷查询Ubuntu的一些命令和使用的一些问题<a id="more"></a></p>
<h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><h3 id="更新软件源"><a href="#更新软件源" class="headerlink" title="更新软件源"></a>更新软件源</h3><p>管理员权限编辑<code>/etc/apt/sources.list</code></p>
<p><a href="https://developer.aliyun.com/mirror/" target="_blank" rel="noopener">阿里云的源</a>、<a href="https://mirrors.tuna.tsinghua.edu.cn/help/" target="_blank" rel="noopener">清华大学的源</a></p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="查看系统版本和内核版本"><a href="#查看系统版本和内核版本" class="headerlink" title="查看系统版本和内核版本"></a>查看系统版本和内核版本</h3><p><code>cat /proc/version</code> - 查看内核版本，gcc版本，发布时间</p>
<p><code>uname -a</code> - 查看内核版本，系统是多少位的，x86_64为64位</p>
<p><code>lsb_release -a</code> - 查看系统的发行版本号和代号</p>
<h3 id="查看CPU、内存和磁盘"><a href="#查看CPU、内存和磁盘" class="headerlink" title="查看CPU、内存和磁盘"></a>查看CPU、内存和磁盘</h3><p><code>cat /proc/cpuinfo</code> - 查看CPU详细信息</p>
<p><code>cat /proc/meminfo</code> - 查看内存信息</p>
<p><code>df</code> - 查看磁盘使用信息</p>
<h3 id="包管理命令"><a href="#包管理命令" class="headerlink" title="包管理命令"></a>包管理命令</h3><p><code>sudo passwd root</code> - 设置root用户密码</p>
<p><code>dpkg --list</code> - 显示所有软件</p>
<p><code>dpkg -i package.deb</code> - 安装deb包命令</p>
<ul>
<li><code>-i</code> - 安装deb包</li>
<li><code>-c</code> - 查看deb包</li>
<li><code>-r</code> - 卸载deb包</li>
<li><code>-P</code> - 彻底删除deb软件 </li>
</ul>
<p><code>apt/apt-get install</code> - 安装软件包</p>
<ul>
<li><code>install</code> - 安装软件包</li>
<li><code>remove</code> - 移除软件包</li>
<li><code>purge</code> - 移除软件包及配置文件</li>
<li><code>update</code> - 刷新存储库索引</li>
<li><code>upgrade</code> - 升级所有可升级的软件包</li>
<li><code>autoremove</code> - 自动删除不需要的包</li>
</ul>
<p><code>apt full-upgrade</code>/<code>apt-get dist-upgrade</code> - 在升级软件包时自动处理依赖关系</p>
<p><code>apt search</code>/<code>apt-cache search</code> - 搜索应用程序</p>
<p><code>apt show</code>/<code>apt-cache show</code> - 显示安装细节</p>
<p><code>do-release-upgrade -d</code> - 升级系统到开发版</p>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="update失败"><a href="#update失败" class="headerlink" title="update失败"></a>update失败</h3><p>此故障常见于WSL2上的Ubuntu，解决办法通常是编辑<code>/etc/resolv.conf</code>文件中将原来的<code>nameserver</code>修改为如下内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nameserver 8.8.8.8</span><br></pre></td></tr></table></figure>

<h3 id="ssh连接无法使用root"><a href="#ssh连接无法使用root" class="headerlink" title="ssh连接无法使用root"></a>ssh连接无法使用root</h3><ol>
<li>修改<code>/etc/ssh/sshd_config</code>文件把<code>PermitRootLogin Prohibit-password</code>添加<code>#</code>注释掉</li>
<li>在该文件中新添加<code>PermitRootLogin yes</code></li>
<li>重启ssh服务<code>/etc/init.d/ssh restart</code></li>
<li>重新使用root连接即可</li>
</ol>
<h3 id="新系统无法搜索到Wi-Fi"><a href="#新系统无法搜索到Wi-Fi" class="headerlink" title="新系统无法搜索到Wi-Fi"></a>新系统无法搜索到Wi-Fi</h3><p>用超级管理员权限编辑文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># &#x2F;etc&#x2F;NetworkManager&#x2F;NetworkManager.conf</span><br><span class="line">managed&#x3D;true</span><br></pre></td></tr></table></figure>
<p>参考文档：<a href="https://www.cnblogs.com/wynter/p/6306774.html" target="_blank" rel="noopener">Ubuntu系统搜索不到WiFi，如何解决</a></p>
<h3 id="设置笔记本关闭盖子不做任何操作"><a href="#设置笔记本关闭盖子不做任何操作" class="headerlink" title="设置笔记本关闭盖子不做任何操作"></a>设置笔记本关闭盖子不做任何操作</h3><p>用超级管理员权限编辑文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># &#x2F;etc&#x2F;systemd&#x2F;logind.conf</span><br><span class="line">#HandleLidSwitch&#x3D;suspend</span><br><span class="line"># 改为</span><br><span class="line">HandleLidSwitch&#x3D;ignore</span><br></pre></td></tr></table></figure>
<p>参考文档：<a href="https://www.cnblogs.com/yunfeiqi/p/6594156.html" target="_blank" rel="noopener">Ubuntu 禁用关闭笔记本盖子自动待机</a></p>
<h3 id="安装完Ubuntu后内置软件名称"><a href="#安装完Ubuntu后内置软件名称" class="headerlink" title="安装完Ubuntu后内置软件名称"></a>安装完Ubuntu后内置软件名称</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get remove thunderbird totem rhythmbox empathy brasero simple-scan libreoffice-common</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>系统</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>VBA小计</title>
    <url>/2020/vba/</url>
    <content><![CDATA[<h2 id="教程使用环境"><a href="#教程使用环境" class="headerlink" title="教程使用环境"></a>教程使用环境</h2><ul>
<li>Windows10 insider 2004 19041.208</li>
<li>Microsoft office 专业增强版 2019</li>
</ul>
<h2 id="录制宏方法"><a href="#录制宏方法" class="headerlink" title="录制宏方法"></a>录制宏方法</h2><p>在Excel中依次选择<code>视图&gt;宏&gt;录制宏</code>，填入名称和快捷键即可开始录制，会记录下接下来对excel表格的所有操作，对菜单操作不会记录；操作完后，点击<code>视图&gt;宏&gt;结束录制</code>，即可完成录制；可以通过查看录制进入Visual Basic for Application编辑界面</p>
<h2 id="语法解释"><a href="#语法解释" class="headerlink" title="语法解释"></a>语法解释</h2><ul>
<li><code>Dim a as Integer</code> - 定义变量</li>
<li><code>a = 5</code> - 给变量赋值</li>
<li><code>For i=5 to 30...Next</code> - for循环语句</li>
<li><code>If 条件 then ... end if</code> - 条件判断语句</li>
<li><code>selection.offset(x, y)</code> - 在当前选中的单元格基础上横跨y列，纵跨x行选中单元格。直接操作是操作其值。</li>
<li><code>Selection.Row</code> - 获取当前行的行号</li>
<li><code>Selection.Column</code> - 获取当前列的列号</li>
<li><code>sheet1.cells(x, y)</code> - 通过行号和列号直接定位单元格，直接操作是对值进行操作。</li>
</ul>
<h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><p>以下代码实现了一个从第四行到第十一行对角线循环填充的功能</p>
<figure class="highlight vbscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Sub</span> 宏<span class="number">1</span>()</span><br><span class="line"><span class="comment">'</span></span><br><span class="line"><span class="comment">' 宏1 宏</span></span><br><span class="line"><span class="comment">'</span></span><br><span class="line"><span class="comment">' 快捷键: Ctrl+k</span></span><br><span class="line"><span class="comment">'</span></span><br><span class="line">    <span class="keyword">Dim</span> r As Integer</span><br><span class="line">    <span class="keyword">Dim</span> c As Integer</span><br><span class="line">    <span class="keyword">Dim</span> value As <span class="built_in">String</span></span><br><span class="line">    r = Selection.Row</span><br><span class="line">    c = Selection.Column</span><br><span class="line">    value = Selection.Offset(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">For</span> j = <span class="number">1</span> <span class="keyword">To</span> <span class="number">30</span>    </span><br><span class="line">        r = r + <span class="number">1</span></span><br><span class="line">        <span class="keyword">If</span> r &gt; <span class="number">11</span> <span class="keyword">Then</span></span><br><span class="line">        r = <span class="number">4</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">If</span>    </span><br><span class="line">        Sheet1.Cells(r, j + c) = value</span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>

<h2 id="全局使用"><a href="#全局使用" class="headerlink" title="全局使用"></a>全局使用</h2><p>创建宏的时候，如果需要全局使用该宏，需要用一下方法操作：</p>
<ol>
<li>创建时选择保存在<code>个人宏工作簿</code></li>
<li>录制下宏操作，选择停止录制。</li>
<li>如果需要编辑VBS代码，需要先选择<code>视图&gt;窗口&gt;取消隐藏</code>，会自动打开一个PERSONAL.XLSB的文件，在该文件中点击<code>查看宏&gt;编辑</code>即可进入VBS编辑界面。</li>
<li>编辑完成后，保存退出宏界面，然后在PERSONAL.XLSB文件中选择<code>视图&gt;窗口&gt;隐藏</code>，该文件就会隐藏。</li>
<li>在初始文件中就可以使用该宏，退出的时候，会弹窗是否保存PERSONAL.XLSB文件，选择保存即可。</li>
</ol>
]]></content>
      <categories>
        <category>技术提升</category>
      </categories>
      <tags>
        <tag>VBA</tag>
      </tags>
  </entry>
  <entry>
    <title>VIM</title>
    <url>/2020/vim/</url>
    <content><![CDATA[<p>💡VIM从入门到精通 <a id="more"></a></p>
<h2 id="1-汇总操作"><a href="#1-汇总操作" class="headerlink" title="1. 汇总操作"></a>1. 汇总操作</h2><h3 id="退出VIM"><a href="#退出VIM" class="headerlink" title="退出VIM"></a>退出VIM</h3><p>通过命令行模式退出</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>:q</code></td>
<td>退出</td>
<td><code>:q!</code></td>
<td>强制退出，不保存</td>
</tr>
<tr>
<td><code>:wq</code></td>
<td>保存并退出</td>
<td><code>:wq!</code></td>
<td>强制保存并退出</td>
</tr>
<tr>
<td><code>:w &lt;文件路径&gt;</code></td>
<td>另存为</td>
<td><code>:saveas 文件路径</code></td>
<td>另存为</td>
</tr>
<tr>
<td><code>:x</code></td>
<td>保存并退出</td>
<td><code>shift + zz</code></td>
<td>保存并退出</td>
</tr>
</tbody></table>
<h3 id="普通模式进入命令行模式"><a href="#普通模式进入命令行模式" class="headerlink" title="普通模式进入命令行模式"></a>普通模式进入命令行模式</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>i</code></td>
<td>在当前光标处进行编辑</td>
<td><code>I</code></td>
<td>在行首插入</td>
</tr>
<tr>
<td><code>a</code></td>
<td>在光标后插入编辑</td>
<td><code>A</code></td>
<td>在行末插入</td>
</tr>
<tr>
<td><code>o</code></td>
<td>在当前行后插入一个新行</td>
<td><code>O</code></td>
<td>在当前行前插入一个新行</td>
</tr>
</tbody></table>
<h2 id="2-普通模式"><a href="#2-普通模式" class="headerlink" title="2. 普通模式"></a>2. 普通模式</h2><h3 id="移动游标"><a href="#移动游标" class="headerlink" title="移动游标"></a>移动游标</h3><table>
<thead>
<tr>
<th>按键</th>
<th>说明</th>
<th>按键</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>h</code></td>
<td>左</td>
<td><code>l</code></td>
<td>右（小写 L）</td>
</tr>
<tr>
<td><code>j</code></td>
<td>下</td>
<td><code>k</code></td>
<td>上</td>
</tr>
<tr>
<td><code>b</code></td>
<td>移动到上一个单词</td>
<td><code>w</code></td>
<td>移动到下一个单词</td>
</tr>
</tbody></table>
<h3 id="删除内容"><a href="#删除内容" class="headerlink" title="删除内容"></a>删除内容</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>x</code></td>
<td>删除游标所在的字符</td>
<td><code>X</code></td>
<td>删除游标所在前一个字符</td>
</tr>
<tr>
<td><code>Delete</code></td>
<td>同<code>x</code></td>
<td><code>dd</code></td>
<td>删除整行</td>
</tr>
<tr>
<td><code>d$</code>或<code>D</code></td>
<td>删除至行尾</td>
<td><code>d^</code></td>
<td>删除至行首</td>
</tr>
<tr>
<td><code>dG</code></td>
<td>删除到文档结尾处</td>
<td><code>d1G</code></td>
<td>删至文档首部</td>
</tr>
<tr>
<td><code>dw</code>或<code>daw</code></td>
<td>删除一个单词（不适用中文）(delete a word)</td>
<td><code>:%d</code></td>
<td>删除所有</td>
</tr>
</tbody></table>
<h3 id="重复命令"><a href="#重复命令" class="headerlink" title="重复命令"></a>重复命令</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>.</code></td>
<td>重复上一次操作</td>
<td><code>10x</code></td>
<td>删除10个连续字符</td>
</tr>
<tr>
<td><code>3dd</code></td>
<td>删除3行文本</td>
<td><code>dnw</code></td>
<td>删除n个单词</td>
</tr>
</tbody></table>
<h3 id="快速跳转"><a href="#快速跳转" class="headerlink" title="快速跳转"></a>快速跳转</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>gg</code></td>
<td>游标移动到到第一行</td>
<td><code>G</code>(Shift+g)</td>
<td>到最后一行</td>
</tr>
<tr>
<td><code>Ctrl + o</code></td>
<td>回到上次光标所在位置</td>
<td><code>nG</code>(n Shift+g)</td>
<td>游标移动到第 n 行</td>
</tr>
</tbody></table>
<h3 id="行内跳转"><a href="#行内跳转" class="headerlink" title="行内跳转"></a>行内跳转</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>e</code></td>
<td>到当前单词的结尾</td>
<td><code>w</code></td>
<td>到下一个单词的开头</td>
</tr>
<tr>
<td><code>b</code></td>
<td>到前一个单词的开头</td>
<td><code>ge</code></td>
<td>到前一个单词的结尾</td>
</tr>
<tr>
<td><code>0</code>或<code>^</code></td>
<td>到行头</td>
<td><code>$</code></td>
<td>到行尾</td>
</tr>
<tr>
<td><code>f&lt;字母&gt;</code></td>
<td>向后搜索&lt;字母&gt;并跳转到第一个匹配的位置(非常实用)</td>
<td><code>F&lt;字母&gt;</code></td>
<td>向前搜索&lt;字母&gt;并跳转到第一个匹配的位置</td>
</tr>
<tr>
<td><code>t&lt;字母&gt;</code></td>
<td>向后搜索&lt;字母&gt;并跳转到第一个匹配位置之前的一个字母(不常用)</td>
<td><code>T&lt;字母&gt;</code></td>
<td>向前搜索&lt;字母&gt;并跳转到第一个匹配位置之后的一个字母(不常用)</td>
</tr>
</tbody></table>
<h3 id="复制和粘贴"><a href="#复制和粘贴" class="headerlink" title="复制和粘贴"></a>复制和粘贴</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>y</code></td>
<td>复制</td>
<td><code>dd</code></td>
<td>剪切</td>
</tr>
<tr>
<td><code>yy</code></td>
<td>复制整行</td>
<td><code>3yy</code></td>
<td>复制三行</td>
</tr>
<tr>
<td><code>y^</code>或<code>y0</code></td>
<td>复制至行首，不含光标字符</td>
<td><code>y$</code></td>
<td>复制至行未，含光标所在</td>
</tr>
<tr>
<td><code>yw</code></td>
<td>复制一个单词</td>
<td><code>y2w</code></td>
<td>复制两个单词</td>
</tr>
<tr>
<td><code>yG</code></td>
<td>复制至文本末</td>
<td><code>y1G</code></td>
<td>复制至文本开头</td>
</tr>
<tr>
<td><code>p</code>（小写）</td>
<td>粘贴至光标后</td>
<td><code>P</code>（大写）</td>
<td>粘贴至光标前</td>
</tr>
</tbody></table>
<h3 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>r</code>+&lt;待替换字母&gt;</td>
<td>将游标所在字母替换为指定字母</td>
<td><code>R</code></td>
<td>连续替换，直到按下<code>Esc</code></td>
</tr>
<tr>
<td><code>cc</code></td>
<td>替换整行，即删除游标所在行，并进入插入模式</td>
<td><code>cw</code></td>
<td>替换一个单词，即删除一个单词，并进入插入模式</td>
</tr>
<tr>
<td><code>C</code>(大写)</td>
<td>替换游标以后至行末</td>
<td><code>~</code></td>
<td>反转游标所在字母大小写</td>
</tr>
<tr>
<td><code>u</code>{n}</td>
<td>撤销一次或 n 次操作（undo）</td>
<td><code>U</code>(大写)</td>
<td>撤销当前行的所有修改</td>
</tr>
<tr>
<td><code>Ctrl+r</code></td>
<td>redo，即撤销 undo 的操作</td>
<td><code>:%!sort</code></td>
<td>对内容排序(将一行内容看成一个字符串，然后按字符串大小进行排序)</td>
</tr>
</tbody></table>
<p>命令底行模式替换公式：</p>
<p><code>:起始位置,终止位置s/被替换对象/替换内容/参数</code></p>
<blockquote>
<p>起始位置：默认为1，<code>.</code>代表当前位置</p>
<p>终止位置：默认为<code>$</code>，可以使用具体的行号，<code>+2</code>表示向后两行</p>
<p>参数：<code>g</code> 全局匹配，<code>i</code> 忽略大小写，<code>c</code> 替换时提示，<code>e</code> 忽略错误</p>
<p>示例：<code>:s/foo/bar/g</code> 全局将foo替换为bar，<code>:5,12s/foo/bar/g</code> 替换5到12行，<code>:.,+2s/foo/bar/g</code> 替换当前位置到后两行，<code>:&#39;&lt;,&#39;&gt;s/foo/bar/g</code> 可视模式下替换选中区域</p>
</blockquote>
<h3 id="快速缩进"><a href="#快速缩进" class="headerlink" title="快速缩进"></a>快速缩进</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>&gt;&gt;</code></td>
<td>向右缩进</td>
<td><code>&lt;&lt;</code></td>
<td>向左回退</td>
</tr>
</tbody></table>
<h3 id="快速查找"><a href="#快速查找" class="headerlink" title="快速查找"></a>快速查找</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>/</code></td>
<td>向下查找</td>
<td><code>?</code></td>
<td>向上查找</td>
</tr>
<tr>
<td><code>\*</code></td>
<td>查找游标所在处的单词，向下查找</td>
<td><code>\#</code></td>
<td>查找游标所在处的单词，向上查找</td>
</tr>
<tr>
<td><code>g\*</code></td>
<td>查找游标所在处的单词，向下查找，部分符合即可</td>
<td><code>g\#</code></td>
<td>查找游标所在处的单词，向上查找，部分符合即可</td>
</tr>
</tbody></table>
<p>备注：n为向下找，N为向上找，查找内容支持正则表达式，但是表示次数的符号前需要使用<code>\</code>，如<code>:/\d\{2,3}</code>，<code>:/a\+</code></p>
<h2 id="3-命令行模式"><a href="#3-命令行模式" class="headerlink" title="3. 命令行模式"></a>3. 命令行模式</h2><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>:ce</code></td>
<td>（center）文本居中</td>
</tr>
<tr>
<td><code>:ri</code></td>
<td>（right）文本有对齐</td>
</tr>
<tr>
<td><code>:le</code></td>
<td>（left）文本左对齐</td>
</tr>
<tr>
<td><code>:noh</code></td>
<td>退出搜索</td>
</tr>
<tr>
<td><code>:set hls</code></td>
<td>设置搜索高亮</td>
</tr>
<tr>
<td><code>:set shiftwidth=n</code></td>
<td>设置缩进和回退字符数</td>
</tr>
<tr>
<td><code>:set nu</code></td>
<td>显示行号</td>
</tr>
<tr>
<td><code>:set autoindent(ai)</code></td>
<td>设置自动缩进</td>
</tr>
<tr>
<td><code>:set autowrite(aw)</code></td>
<td>设置自动存档</td>
</tr>
<tr>
<td><code>:set background=dark/light</code></td>
<td>设置背景风格</td>
</tr>
<tr>
<td><code>:set backup(bk)</code></td>
<td>设置自动备份</td>
</tr>
<tr>
<td><code>:set cindent(cin)</code></td>
<td>设置C语言风格缩进</td>
</tr>
<tr>
<td><code>:set</code>或<code>:se</code></td>
<td>显示所有修改过的配置</td>
</tr>
<tr>
<td><code>:set all</code></td>
<td>显示所有设定值</td>
</tr>
<tr>
<td><code>:set &lt;option&gt;?</code></td>
<td>显示option的设定值</td>
</tr>
<tr>
<td><code>:set nooption</code></td>
<td>取消当前设定值</td>
</tr>
<tr>
<td><code>:syntax on</code></td>
<td>设置语法高亮</td>
</tr>
<tr>
<td><code>:set tabstop=4</code>或<code>:set ts=4</code></td>
<td>设置tab键对应的空格数</td>
</tr>
<tr>
<td><code>:set expandtab</code></td>
<td>设置tab自动替换为空格</td>
</tr>
<tr>
<td><code>:set nohls</code>或<code>:nohlsearch</code></td>
<td>设置不高亮选中单词</td>
</tr>
<tr>
<td><code>:set clipboard+=unnamed</code></td>
<td>设置与当前设备共享剪贴板</td>
</tr>
<tr>
<td><code>:set cul</code>/<code>:set cuc</code></td>
<td>设置高亮行/列</td>
</tr>
<tr>
<td><code>imap &lt;F4&gt; if __name__ == &#39;__main__&#39;:</code></td>
<td>设置快捷键映射</td>
</tr>
<tr>
<td><code>inoremap _main if __name__ == &#39;__main__&#39;:</code></td>
<td>设置不递归调用映射</td>
</tr>
<tr>
<td><code>:set pastetoggle</code></td>
<td>粘贴切换（粘贴中自动缩进的问题）</td>
</tr>
<tr>
<td><code>:set ruler</code></td>
<td>设置显示光标位置</td>
</tr>
</tbody></table>
<h2 id="4-高级功能"><a href="#4-高级功能" class="headerlink" title="4. 高级功能"></a>4. 高级功能</h2><h3 id="多文件编辑"><a href="#多文件编辑" class="headerlink" title="多文件编辑"></a>多文件编辑</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>vim 1.txt 2.txt</code></td>
<td>同时打开多个文件</td>
</tr>
<tr>
<td><code>vim -d 1.txt 2.txt</code></td>
<td>比较多个文件</td>
</tr>
<tr>
<td><code>:n</code>/<code>:N</code></td>
<td>切换到下/上一个文件</td>
</tr>
<tr>
<td><code>:n!</code>/<code>:N!</code></td>
<td>强制切换到下/上一个文件，之前的文件输入不保存</td>
</tr>
<tr>
<td><code>:e 3.txt</code></td>
<td>再打开一个文件</td>
</tr>
<tr>
<td><code>:e#</code></td>
<td>回到前一个文件</td>
</tr>
<tr>
<td><code>:ls</code></td>
<td>列出以前编辑过的文档</td>
</tr>
<tr>
<td><code>:b 2.txt</code>或编号</td>
<td>直接跳转到该文件进行编辑</td>
</tr>
<tr>
<td><code>:bd 2.txt</code>或编号</td>
<td>删除以前编辑过的列表中的文件项目</td>
</tr>
<tr>
<td><code>e! 4.txt</code></td>
<td>新打开文件，并放弃正在编辑的内容</td>
</tr>
<tr>
<td><code>:f</code></td>
<td>显示正在编辑的文件名</td>
</tr>
<tr>
<td><code>f new.txt</code></td>
<td>给正在编辑的文件重命名</td>
</tr>
<tr>
<td><code>vim -r</code> <code>:ewcover 1.txt</code></td>
<td>因断电等原因没有保存的文件恢复方式</td>
</tr>
</tbody></table>
<h3 id="可视模式"><a href="#可视模式" class="headerlink" title="可视模式"></a>可视模式</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>v</code></td>
<td>进入可视模式，光标走过位置被选中，再次按<code>v</code>取消</td>
</tr>
<tr>
<td><code>Shift+v</code></td>
<td>进入可视模式，按行进行选中，再次按<code>Shift+v</code>取消</td>
</tr>
<tr>
<td><code>Ctrl+v</code></td>
<td>进入可视模式，按矩形区域进行选中，再次按<code>Ctrl+v</code>取消</td>
</tr>
<tr>
<td><code>d</code></td>
<td>可视模式下删除选区内容</td>
</tr>
<tr>
<td><code>y</code></td>
<td>可视模式下复制选取内容</td>
</tr>
</tbody></table>
<h3 id="视窗操作"><a href="#视窗操作" class="headerlink" title="视窗操作"></a>视窗操作</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>:new</code></td>
<td>打开一个新的水平视窗</td>
</tr>
<tr>
<td><code>vsp 2.txt</code></td>
<td>打开新的垂直分屏视窗来编辑 1.txt</td>
</tr>
<tr>
<td><code>:sp 1.txt</code></td>
<td>打开新的水平分屏视窗来编辑 1.txt</td>
</tr>
<tr>
<td><code>Ctrl+w s</code></td>
<td>将当前窗口分割成两个水平的窗口</td>
</tr>
<tr>
<td><code>Ctrl+w v</code></td>
<td>将当前窗口分割成两个垂直的窗口</td>
</tr>
<tr>
<td><code>Ctrl+w q</code></td>
<td>即 :q 结束分割出来的视窗。如果在新视窗中有输入需要使用强制符！即:q!</td>
</tr>
<tr>
<td><code>Ctrl+w o</code></td>
<td>打开一个视窗并隐藏之前的所有视窗</td>
</tr>
<tr>
<td><code>Ctrl+w j</code></td>
<td>移至下面视窗</td>
</tr>
<tr>
<td><code>Ctrl+w k</code></td>
<td>移至上面视窗</td>
</tr>
<tr>
<td><code>Ctrl+w h</code></td>
<td>移至左边视窗</td>
</tr>
<tr>
<td><code>Ctrl+w l</code></td>
<td>移至右边视窗</td>
</tr>
<tr>
<td><code>Ctrl+w J</code></td>
<td>将当前视窗移至下面</td>
</tr>
<tr>
<td><code>Ctrl+w K</code></td>
<td>将当前视窗移至上面</td>
</tr>
<tr>
<td><code>Ctrl+w H</code></td>
<td>将当前视窗移至左边</td>
</tr>
<tr>
<td><code>Ctrl+w L</code></td>
<td>将当前视窗移至右边</td>
</tr>
<tr>
<td><code>Ctrl+w -</code></td>
<td>减小视窗的高度</td>
</tr>
<tr>
<td><code>Ctrl+w +</code></td>
<td>增加视窗的高度</td>
</tr>
</tbody></table>
<h3 id="给文件加密"><a href="#给文件加密" class="headerlink" title="给文件加密"></a>给文件加密</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>vim -x 文件名</code></td>
<td>输入您的密码，确认密码。下次打开就会要求输入密码</td>
</tr>
</tbody></table>
<h3 id="执行外部命令"><a href="#执行外部命令" class="headerlink" title="执行外部命令"></a>执行外部命令</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>:!ls</code></td>
<td>显示当前目录的内容</td>
</tr>
<tr>
<td><code>:!rm FILENSME</code></td>
<td>删除名为FILENAME的文件</td>
</tr>
<tr>
<td><code>w FILENAME</code></td>
<td>将当前正在编辑的文件另存为FILENAME的文件</td>
</tr>
</tbody></table>
<h3 id="帮助系统"><a href="#帮助系统" class="headerlink" title="帮助系统"></a>帮助系统</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>F1</code></td>
<td>普通模式打开vim预设的帮助文档</td>
</tr>
<tr>
<td><code>:h shiftwidth</code></td>
<td>打开名为shiftwidth的帮助文件</td>
</tr>
<tr>
<td><code>:ver</code>或<code>:version</code></td>
<td>显示版本号及参数</td>
</tr>
</tbody></table>
<h3 id="录制宏"><a href="#录制宏" class="headerlink" title="录制宏"></a>录制宏</h3><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>q+任意字母</code></td>
<td>开始录制宏，再次按q取消录制</td>
</tr>
<tr>
<td><code>@+录制前输入的字母</code></td>
<td>播放宏</td>
</tr>
</tbody></table>
<h2 id="5-操作实例"><a href="#5-操作实例" class="headerlink" title="5. 操作实例"></a>5. 操作实例</h2><h3 id="录制宏-1"><a href="#录制宏-1" class="headerlink" title="录制宏"></a>录制宏</h3><p>步骤：</p>
<blockquote>
<ol>
<li>在底行模式下输入<code>qa</code>后敲回车。其中a表示该宏的名称，可以自定义其他名称</li>
<li>接下来进行vim的操作，该操作会被完整的录制下来。</li>
<li>做完操作后回到底行模式按<code>q</code>结束录制。</li>
<li>如果需要播放就使用<code>@a</code>，a表示录制之前给宏取的名字。</li>
</ol>
</blockquote>
<p>实际使用示例：</p>
<p>在安装ArchLinux的时候，有一步需要将所有中国的镜像源提取到最前面去，但是所有中国的镜像源又分布在文件不同的位置，此时就可以使用VIM的宏来进行操作</p>
<blockquote>
<ol>
<li>在normal模式下按<code>qa</code>，然后敲回车</li>
<li>然后输入<code>/China</code>从当前行向下查找China字符</li>
<li>在找到的地方使用<code>2dd</code>剪切两行，<code>4gg</code>跳到第四行，<code>p</code>进行粘贴</li>
<li>按<code>q</code>结束录制</li>
<li>再输入<code>@a</code>就会重复2、3步骤</li>
</ol>
</blockquote>
<h3 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h3><p>注释：</p>
<blockquote>
<ol>
<li><code>ctrl+v</code> - 进入可视化块模式</li>
<li>上下移动光标选中需要注释的代码</li>
<li><code>I</code>(大i) - 进入插入模式</li>
<li>输入注释符号</li>
<li>按<code>ese</code>键完成</li>
</ol>
</blockquote>
<p>取消注释：</p>
<blockquote>
<ol>
<li><code>ctrl+v</code> - 进入可视化块模式</li>
<li>上下移动光标选中需要注释的代码</li>
<li>按小<code>d</code>即可取消注释</li>
</ol>
</blockquote>
]]></content>
      <categories>
        <category>技术提升</category>
      </categories>
      <tags>
        <tag>VIM</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox Headless后台运行Linux</title>
    <url>/2020/virtualbox_headless/</url>
    <content><![CDATA[<p>Windows下可能最好的Linux系统使用解决方案。<a id="more"></a></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>如何在Windows上优雅的使用Linux，一直是一个困惑我的问题。WSL虽好，但是没法在Linux上安装docker；WSL2虽然可以安装docker了，但是这个系统和主机通信又是一个大麻烦，就连最基本的安装软件都要每次开机修改hostname（虽然有能修改后不复原的办法，但我没实验成功）；使用虚拟机软件，又会占用太多的硬件资源，影响主机性能。前段时间偶然看到B站一个Up主提到使用virtualbox的headless无界面启动。遂研究了一下，但是网络上的资料大都太散太少，没有完整的介绍该方法。本文详细介绍在Windows上安装使用一个最优雅的Linux系统。</p>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>虚拟机软件：<a href="https://www.virtualbox.org/" target="_blank" rel="noopener">Oracle VM VirtualBox</a></p>
<p>Linux镜像：本文使用 <a href="https://ubuntu.com/" target="_blank" rel="noopener">Ubuntu20.04</a></p>
<p>一个远程连接软件：可以使用Windows自带的powershell或者其他软件，本文使用<a href="/2020/04/21/Windows%E8%BD%AF%E4%BB%B6%E6%89%8B%E5%86%8C/#Termius">Termius</a></p>
<h2 id="前提步骤"><a href="#前提步骤" class="headerlink" title="前提步骤"></a>前提步骤</h2><p>首先需要使用VirtualBox安装好虚拟机；创建虚拟机的时候，推荐使用一个较为简单的名字作为虚拟机的名字，后面命令要使用；安装前的设置注意一点，设置密码的时候需要选择不使用密码登陆。如果该处没设置，安装好后进入设置用户中关闭该项，原因是如果打开该项，后台无法完全启动系统，最终系统会停留在用户登陆界面。</p>
<h2 id="后台启动方法"><a href="#后台启动方法" class="headerlink" title="后台启动方法"></a>后台启动方法</h2><ol>
<li>首先进入图形化的Linux虚拟机中，更新源，使用<code>sudo apt install openssh-server</code>安装ssh的服务端。</li>
<li>检查开机是否需要密码。需要取消掉开机的密码。</li>
<li>关闭虚拟机，主机使用命令行进入VirutalBox的安装位置，默认情况在<code>C:\Program Files\Oracle\VirtualBox\</code>下，此处推荐使用cmd进入该位置，cmd可以直接调用文件名字作为命令，Powershell需要使用路径加文件名才能执行命令</li>
<li>执行<code>vboxheadless --startvm|-s 虚拟机名称|uuid vrde=off</code>即可以桥接网络的模式无界面打开</li>
<li>执行<code>vboxmanage controlvm 虚拟机名称 acpipowerbutton</code>即可关闭虚拟机</li>
</ol>
<h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><p><code>VBoxManage list vms</code> - 查看有哪些虚拟机</p>
<p><code>VBoxManage list vms --long</code> - 查看虚拟机的详细内容</p>
<p><code>VBoxManage list runningvms</code> - 查看运行中的虚拟机</p>
<p><code>VBoxManage startvm &lt;vm_name&gt; -type headless</code> - 无界面运行虚拟机，与vboxheadless的区别就是这个命令是完全后台运行。<strong>注意</strong>：使用该命令需要将虚拟机手动设置为桥接网络。</p>
<p><code>vboxheadless --startvm|-s 虚拟机名称|uuid vrde=off</code> - 无界面运行虚拟机，在命令行卡住，停止命令行就停止了虚拟机</p>
<p><code>VBoxManage controlvm &lt;vm_name&gt; acpipowerbutton</code> - 正常关闭虚拟机</p>
<p><code>VBoxManage controlvm &lt;vm_name&gt; poweroff</code> - 强制关闭虚拟机</p>
<p><code>VBoxManage guestproperty enumerate &lt;vm_name&gt;</code> - 查看虚拟机配置信息，可以通过<code>| findstr IP</code> 查询到虚拟机的ip</p>
<h2 id="参考批处理脚本"><a href="#参考批处理脚本" class="headerlink" title="参考批处理脚本"></a>参考批处理脚本</h2><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">cd</span> /d C:\Program Files\Oracle\VirtualBox\</span><br><span class="line">@<span class="built_in">chcp</span> <span class="number">65001</span></span><br><span class="line">:<span class="number">1</span></span><br><span class="line"><span class="built_in">echo</span> <span class="number">1</span>：开机</span><br><span class="line"><span class="built_in">echo</span> <span class="number">2</span>：关机</span><br><span class="line"><span class="built_in">echo</span> <span class="number">3</span>：查看ip</span><br><span class="line"><span class="built_in">echo</span> <span class="number">4</span>：查看状态</span><br><span class="line"><span class="built_in">echo</span> <span class="number">5</span>: 退出</span><br><span class="line"><span class="built_in">set</span> /P a=输入：</span><br><span class="line"><span class="built_in">cls</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%a%</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%a%</span> == <span class="number">1</span> (</span><br><span class="line">    vboxmanage startvm Ubuntu -<span class="built_in">type</span> headless</span><br><span class="line">) <span class="keyword">else</span> <span class="keyword">if</span> <span class="variable">%a%</span> == <span class="number">2</span> (</span><br><span class="line">    vboxmanage controlvm Ubuntu acpipowerbutton</span><br><span class="line">) <span class="keyword">else</span> <span class="keyword">if</span> <span class="variable">%a%</span> == <span class="number">3</span> (</span><br><span class="line">    vboxmanage guestproperty enumerate Ubuntu | <span class="built_in">findstr</span> IP</span><br><span class="line">) <span class="keyword">else</span> <span class="keyword">if</span> <span class="variable">%a%</span> == <span class="number">4</span> (</span><br><span class="line">    vboxmanage list runningvms</span><br><span class="line">) <span class="keyword">else</span> <span class="keyword">if</span> <span class="variable">%a%</span> == <span class="number">5</span> (</span><br><span class="line">    <span class="keyword">exit</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">goto</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>

<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://blog.csdn.net/ACBC12345/article/details/103115433" target="_blank" rel="noopener">Virtualbox后台启动及获取虚拟机ip方法及windows远程登录方法</a></p>
]]></content>
      <categories>
        <category>软件上手</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>VirtualBox</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode的使用</title>
    <url>/2020/vscode/</url>
    <content><![CDATA[<h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><p>settings.json（首选项，打开设置）的配置：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"editor.fontSize"</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="attr">"editor.wordWrap"</span>: <span class="string">"on"</span>,</span><br><span class="line">    <span class="attr">"editor.rulers"</span>: [</span><br><span class="line">    <span class="number">100</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"editor.renderControlCharacters"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"editor.renderWhitespace"</span>: <span class="string">"all"</span>,</span><br><span class="line">    <span class="attr">"terminal.integrated.cursorBlinking"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"terminal.integrated.cursorStyle"</span>: <span class="string">"line"</span>,</span><br><span class="line">    <span class="attr">"terminal.integrated.fontSize"</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">"workbench.tree.indent"</span>: <span class="number">16</span>,</span><br><span class="line">    <span class="attr">"emmet.extensionsPath"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"python.linting.flake8Enabled"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"python.formatting.provider"</span>: <span class="string">"yapf"</span>,</span><br><span class="line">    <span class="attr">"python.linting.flake8Args"</span>: [</span><br><span class="line">        <span class="string">"--max-line-length=256"</span>,</span><br><span class="line">        <span class="string">"--extend-ignore=F821"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"python.linting.pylintEnabled"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"editor.minimap.enabled"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>editor.wordWrpa</code> - 代码自动换行</li>
<li><code>editor.rulers</code> - 设置一个代码单行最长提示线</li>
<li><code>editor.renderControlCharacters</code> - 是否显示控制字符(如tab)</li>
<li><code>editor.renderWhitespace</code> - 什么情况下显示空格(可设置为all)</li>
<li><code>terminal.integrated.cursorBlinking</code> - 集成终端光标是否闪烁</li>
<li><code>terminal.integrated.cursorStyle</code> - 集成终端光标样式</li>
<li><code>terminal.integrated.fontSize</code> - 集成终端字体大小</li>
<li><code>python.linting.flake8Enabled</code> - 设置flake8工具是否开启</li>
<li><code>python.formatting.provider</code> - 设置python的格式化工具</li>
<li><code>python.linting.flake8Args</code> - 设置flake8的检查规则<ul>
<li><code>--max-line-length</code> - 设置单行的最长长度</li>
<li><code>--extend-ignore</code> - 设置排除的检查</li>
</ul>
</li>
<li><code>python.linting.pylintEnable</code> - 设置pylint是否开启</li>
<li><code>editor.occurrencesHighlight</code> - 设置光标所在单词是否高亮</li>
<li><code>workbench.editor.enablePreview</code> - 是否允许查找文件后保持预览</li>
<li><code>Editor.Links</code> - 控制编辑器中是否检测链接并使其可被点击</li>
</ul>
<p>~/.ssh/config的配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Host 192.168.0.153</span><br><span class="line">  HostName 192.168.0.153</span><br><span class="line">  User root</span><br><span class="line">  ForwardAgent yes</span><br></pre></td></tr></table></figure>

<blockquote>
<p>分别指定远程连接的地址和用户名</p>
</blockquote>
<h2 id="快捷键使用"><a href="#快捷键使用" class="headerlink" title="快捷键使用"></a>快捷键使用</h2><blockquote>
<p>在Mac下ctrl均使用command替代</p>
</blockquote>
<h3 id="软件操作"><a href="#软件操作" class="headerlink" title="软件操作"></a>软件操作</h3><ul>
<li><code>ctrl + shift + p</code> /<code>f1</code> - 打开命令面板</li>
<li><code>ctrl + p</code> - 文件搜索框<ul>
<li><code>?</code> - 列出当前可执行的动作</li>
<li><code>!</code>/<code>Ctrl+Shift+M</code> - 显示Errors或Warnings</li>
<li><code>:</code>/<code>Ctrl+G</code> - 跳转到行数</li>
<li><code>@</code>/<code>Ctrl+Shift+O</code> - 跳转到symbol，查找属性或函数</li>
<li><code>#</code>/<code>Ctrl+T</code> - 根据名字查找symbol</li>
</ul>
</li>
</ul>
<h3 id="窗口管理"><a href="#窗口管理" class="headerlink" title="窗口管理"></a>窗口管理</h3><ul>
<li><code>Ctrl+N/W</code> - 新建/关闭tab页</li>
<li><code>Ctrl+Shift+N/W</code> - 打开/关闭一个新的VSCode编辑器</li>
<li><code>Ctrl+Tab</code> - 切换窗口</li>
<li><code>Ctrl+\</code> - 向右拆分屏幕，最多三个</li>
<li><code>Ctrl+1/2/3</code> - 切换拆分后的编辑器窗口</li>
<li><code>Ctrl + O</code> - 打开文件</li>
</ul>
<h3 id="代码格式"><a href="#代码格式" class="headerlink" title="代码格式"></a>代码格式</h3><ul>
<li><code>Ctrl+[/]</code> - 代码行向左或者向右缩进</li>
<li><code>Ctrl+C/X</code> - 复制/剪切当前行/选中内容</li>
<li><code>Shift+Alt+F</code> - 代码格式化</li>
<li><code>Alt+Up/Down</code> - 将当前代码向上或向下移动一行</li>
<li><code>Shift+Alt+Up/Down</code> - 将代码向上/向下复制一行</li>
<li><code>Ctrl+Enter</code> - 在当前行下方插入一行</li>
<li><code>Ctrl+Shift+Enter</code> - 在当前行上方插入一行</li>
<li><code>Ctrl + D</code> - 选中光标所在词组</li>
</ul>
<h3 id="左侧工具栏"><a href="#左侧工具栏" class="headerlink" title="左侧工具栏"></a>左侧工具栏</h3><ul>
<li><code>ctrl + b</code> - 展开/收起侧边栏</li>
<li><code>ctrl + shift + f</code> - 搜索</li>
<li><code>ctrl + shift + e</code> - 资源管理器<ul>
<li><code>⬆️</code>/ <code>⬇️</code> - 移动光标</li>
<li><code>⬅️</code> - 收起文件夹</li>
<li><code>➡️</code> - 展开文件夹</li>
<li><code>空格</code> - 打开文件</li>
</ul>
</li>
<li><code>ctrl + shift + g</code> - 源代码管理</li>
<li><code>ctrl + shift + x</code> - 插件管理</li>
</ul>
<h2 id="插件及功能"><a href="#插件及功能" class="headerlink" title="插件及功能"></a>插件及功能</h2><ul>
<li><strong>Chinese Language</strong>: VSCode中文插件，国产程序员开发必备插件</li>
<li><strong>TabNine</strong>: 智能输入插件，根据输入历史和场景，自动预测输入内容</li>
<li><strong>Git History</strong>: 查看git历史记录的插件，安装后打开文件在标签页右键，会看到最下面多了一个<code>Git: View File History</code>；提供了查看提交记录，文件历史，比较分支和不同提交之间的区别</li>
<li><strong>GitLens-Git supercharged</strong>: 该插件增强了VSCode自带的git功能，可以方便在每一行最后看到该行最近的改动记录。</li>
<li><strong>Markdown All in One</strong>: VSCode下编辑Markdown较为全能的插件，提供了键盘快捷方式、TOC目录、自动预览等功能</li>
<li><strong>Markdown Preview</strong>: 该插件是一个提供Github风格的Markdown预览插件</li>
<li><strong>open in browser</strong>: 该插件是一个允许用户用浏览器或应用程序打开当前的文件，方便HTML开发预览</li>
<li><strong>OpenAPI (Swagger) Editor</strong>: 该插件在VSCode中提供了对JSON或YAML格式的OpenAPI规范（OAS）（以前称为Swagger规范）的支持。 、包括，例如文档lint，代码导航，定义链接，静态安全分析等！</li>
<li><strong>openapi-lint</strong>: 该插件为OpenAPI文件提供了更为强大的lint功能，包括对$ref引用的lint</li>
<li><strong>Pylance</strong>: 该插件提供了VSCode上开发Python文件的服务支持，前身为Pyright，提供了包括python代码lint，自动跳转，自动导入等Pycharm才拥有的功能。该插件通常每周四更新</li>
<li><strong>Python</strong>: Python开发的基础插件，提供运行、调试、检测代码等功能</li>
<li><strong>Remote - SSH</strong>: VSCode上远程开发的必备插件，使您可以将带有SSH服务器的任何远程计算机用作开发环境。</li>
<li><strong>Remote - SSH: Editing Configuration Files</strong>: 编辑SSH配置文件时，此扩展补充了Remote-SSH扩展的语法颜色，关键字intellisense和简单摘要。</li>
<li><strong>YAML</strong>: 该插件提供对YAML语法支持以及内置的Kubernetes语法支持</li>
<li><strong>Comment Translate</strong>: vscode中的翻译插件，可以翻译注释，驼峰变量等单词，英语不好的开发者必备插件</li>
</ul>
<h2 id="常见的问题"><a href="#常见的问题" class="headerlink" title="常见的问题"></a>常见的问题</h2><p><strong>关闭预览功能</strong></p>
<p>setting中搜索<code>workbench.editor.enablePreview</code>，将前面的勾去掉即可</p>
<p><strong>go包跳转到外部网站</strong></p>
<p>settings中搜索<code>Editor.Links</code>，将前面的勾去掉即可</p>
<p><strong>光标所在词组高亮</strong></p>
<p>settings中搜索<code>editor.occurrencesHighlight</code>，去掉勾即可</p>
]]></content>
      <categories>
        <category>软件上手</category>
      </categories>
      <tags>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10中AMD显卡开机黑屏问题</title>
    <url>/2020/window_issue/</url>
    <content><![CDATA[<p>分享一些Windows在使用时遇到的一些问题和一些解决办法，每个方法自己均实验过，确保能用，但不确保是最好的解决办法</p>
<h2 id="AMD显卡开机黑屏"><a href="#AMD显卡开机黑屏" class="headerlink" title="AMD显卡开机黑屏"></a>AMD显卡开机黑屏</h2><p>升级Windows10后，许多搭载AMD显卡的老机器开机的时候会有一到两分钟的黑屏时间，究其原因就是ulps导致的，一般解决办法有一下两种，一下办法提到的工具打包在<a href="https://stolenzc.lanzous.com/iwqk9hcxlve" target="_blank" rel="noopener">win10-amd_黑屏文件</a>：</p>
<p>方法一：</p>
<ol>
<li>在控制面版中卸载AMD的显卡程序</li>
<li>卸载完毕后，从win10设置-更新和安全-恢复-高级启动-立即重新启动中进入安全模式</li>
<li>在安全模式中使用DDU，单机清除并重启（clear and restart）</li>
<li>开机后，打开wushowhide.diagcab文件，选择hide updatas</li>
<li>重新安装最新显卡驱动</li>
</ol>
<p>方法二：</p>
<ol>
<li>运行ULPS中的disable注册表文件</li>
<li>选择重启（注意：不是关机，是重启）</li>
<li>在桌面右键-显示卡属性-电源-可切换显示卡全局设置-还有其他省电方法，将前面的勾去掉</li>
<li>先关机，再开机，在电源设置中将快速启动关闭。</li>
</ol>
]]></content>
      <categories>
        <category>故障避坑</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows批处理命令</title>
    <url>/2020/windows_cmder/</url>
    <content><![CDATA[<h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><h3 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h3><p>语法：<code>echo [on/off] [message]</code></p>
<p>说明：打开关闭回显，或显示输出消息，后面不加参数则显示当前回显设置，</p>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">echo hello,world</span><br></pre></td></tr></table></figure>

<p>备注：回显表示终端会显示当前这条命令内容，在命令前加@可以让当前命令不显示回显，只执行结果</p>
<h3 id="rem"><a href="#rem" class="headerlink" title="rem"></a>rem</h3><p>语法：<code>rem 注释内容</code></p>
<p>说明：注释掉后面的内容，不会执行，但是如果未关闭回显，该行内容会在终端显示</p>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rem 你好</span><br><span class="line">:: 你好</span><br></pre></td></tr></table></figure>

<p>备注：rem会回显该行命令，::不会回显该行命令</p>
<h3 id="pause"><a href="#pause" class="headerlink" title="pause"></a>pause</h3><p>语法：<code>pause</code></p>
<p>说明：通常为暂停程序执行，在终端上显示按任意键继续…</p>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">echo hello,world</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>

<h3 id="call"><a href="#call" class="headerlink" title="call"></a>call</h3><p>语法：<code>call [文件路径] [:label] [parameter]</code></p>
<p>说明：调用执行另一个bat文件，文件路径用绝对路径应该从磁盘开始，如<code>C:\Users\stolenzc\Desktop\hello.bat</code>，可以使用标签进行跳转，功能类似goto，但是使用标签前面必须加冒号，也可以向bat文件传参，另一个bat文件通过传参顺序<code>%1</code>、<code>%2</code>、<code>%3</code>取参数。</p>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">call :label1 hello world</span><br><span class="line">echo 1</span><br><span class="line">:label1</span><br><span class="line">echo %2 %1</span><br><span class="line">rem 执行结果：world hello 1 echo打开状态</span><br><span class="line">------------分割线-----------------</span><br><span class="line">call C:\Users\stolenzc\Desktop\hello.bat</span><br></pre></td></tr></table></figure>

<h3 id="start"><a href="#start" class="headerlink" title="start"></a>start</h3><p>语法：<code>start 程序文件名或dos命令</code></p>
<p>说明：调用外部程序，所有DOS命令和命令行程序都可以在start后执行</p>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">start calc.exe</span><br><span class="line">start shutdown -s -t 1000</span><br></pre></td></tr></table></figure>

<h3 id="goto"><a href="#goto" class="headerlink" title="goto"></a>goto</h3><p>语法：<code>goto 标签</code></p>
<p>说明：跳转到标签处继续向下执行</p>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:1</span><br><span class="line">start</span><br><span class="line">goto 1</span><br></pre></td></tr></table></figure>

<h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><p>语法：<code>set a=5</code>、<code>set a=</code></p>
<p>说明：显示、设置或删除变量。</p>
<p>参数：</p>
<blockquote>
<p>  /A - 指定等号右边的字符串为数字表达式</p>
<p>  /P - 用户输入内容赋值给变量，等号右边可以设置输入提示</p>
</blockquote>
<p>示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set a&#x3D;5</span><br><span class="line">echo %a%</span><br><span class="line">set a&#x3D;</span><br><span class="line">echo %a%</span><br><span class="line">rem 执行结果：5 ECHO处于打开状态</span><br></pre></td></tr></table></figure>

<p>备注：<code>set a=</code>表示删除变量，如果要使用变量前后需要加%</p>
<h2 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h2><p><code>@</code> - 本条命令在终端中关闭回显</p>
<p><code>&gt;</code> - 将输出内容写入到文件中去</p>
<p><code>&gt;&gt;</code> - 将输出内容追加到文件中去</p>
<p><code>&lt;</code> - 将输入信息来源指定为设备或文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set &#x2F;p ifo&#x3D;&lt;a.txt</span><br></pre></td></tr></table></figure>

<p><code>|</code> - 将管道前面的输出作为后面命令的输入</p>
<p><code>^</code> - 将特殊符号进行转义，如<code>| &amp; &gt; &lt;</code></p>
<p><code>%</code> - 转义<code>%</code>，如<code>%%</code>将输出<code>%</code></p>
<p><code>&amp;</code> - 连接多个命令，前面无论成功失败都执行后面的</p>
<p><code>&amp;&amp;</code> - 连接多个命令，前面成功时执行后面的</p>
<p><code>||</code> - 连接多个命令，前面失败时执行后面的</p>
<h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2>]]></content>
      <categories>
        <category>系统入门</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>批处理</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows系统配置</title>
    <url>/2020/windows_config/</url>
    <content><![CDATA[<h2 id="关闭Windows-Defender"><a href="#关闭Windows-Defender" class="headerlink" title="关闭Windows Defender"></a>关闭Windows Defender</h2><p>定位到注册表<code>计算机\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SecurityHealthService</code>将start的值改为4即可。</p>
<h2 id="仅关闭defender实时保护"><a href="#仅关闭defender实时保护" class="headerlink" title="仅关闭defender实时保护"></a>仅关闭defender实时保护</h2><p>注册表<code>计算机\HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows Defender</code>中新建DisableAntiSpyware，并双击赋值为1</p>
<h2 id="右下角时间显示秒"><a href="#右下角时间显示秒" class="headerlink" title="右下角时间显示秒"></a>右下角时间显示秒</h2><ol start="2">
<li>定位到<code>计算机\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced</code><br>新建“DWORD 值”键入 ShowSecondsInSystemClock，修改“值”为1</li>
<li>重启电脑</li>
</ol>
<h2 id="锁屏界面设置显示秒"><a href="#锁屏界面设置显示秒" class="headerlink" title="锁屏界面设置显示秒"></a>锁屏界面设置显示秒</h2><ol>
<li><p>控制面板中’更改时间日期、数字格式&gt;格式-其他设置&gt;时间-时间格式-短格式:H:mm:ss</p>
</li>
<li><p>重启电脑</p>
</li>
</ol>
<h2 id="完全控制面板"><a href="#完全控制面板" class="headerlink" title="完全控制面板"></a>完全控制面板</h2><p>新建文件夹命名为:<code>GodMode.{ED7BA470-8E54-465E-825C-99712043E01C}</code></p>
<h2 id="更改字体"><a href="#更改字体" class="headerlink" title="更改字体"></a>更改字体</h2><p>定位到<code>\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Fonts</code>:(<code>Microsoft YaHei &amp; Microsoft YaHei UI (TrueType)</code>)和(<code>Microsoft YaHei Bold &amp; Microsoft YaHei UI Bold(TrueType)</code>)改为自己喜欢的字体即可.</p>
<h2 id="关闭资源管理器多余的图标"><a href="#关闭资源管理器多余的图标" class="headerlink" title="关闭资源管理器多余的图标"></a>关闭资源管理器多余的图标</h2><ol>
<li><p>打开注册表编辑器</p>
</li>
<li><p>搜索并定位到 <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions</code>，此时你会看到很多长字符串；</p>
</li>
<li><p>我们的目的就是找出其中代表6个置顶文件夹的字符串，然后将其子项“PropertyBag”中的“ThisPCPolicy”由show改为Hide即可，具体对应关系如下：</p>
</li>
</ol>
<p>图片：<code>{0ddd015d-b06c-45d5-8c4c-f59713854639}＼PropertyBag</code></p>
<p>视频：<code>{35286a68-3c57-41a1-bbb1-0eae73d76c95}＼PropertyBag</code></p>
<p>下载：<code>{7d83ee9b-2244-4e70-b1f5-5393042af1e4}＼PropertyBag</code></p>
<p>音乐：<code>{a0c69a99-21c8-4671-8703-7934162fcf1d}＼PropertyBag</code></p>
<p>桌面：<code>{B4BFCC3A-DB2C-424C-B029-7FE99A87C641}＼PropertyBag</code></p>
<p>文档：<code>{f42ee2d3-909f-4907-8871-4c22fc0bf756}＼PropertyBag</code></p>
<ol start="4">
<li>删除3D对象</li>
</ol>
<p><code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\MyComputer\NameSpace\</code><br>找到<code>{0DB7E03F-FC29-4DC6-9020-FF41B59E513A}</code>，删除它</p>
<h2 id="卸载自带软件"><a href="#卸载自带软件" class="headerlink" title="卸载自带软件"></a>卸载自带软件</h2><p>以管理员身份运行powershell执行命令</p>
<p><code>Get-AppxPackage | Select Name, PackageFullName</code> - 获取软件包名</p>
<p>人脉：<code>get-appxpackage *Microsoft.People* | remove-appxpackage</code></p>
<p>获取帮助：<code>get-appxpackage *Microsoft.GetHelp* | remove-appxpackage</code></p>
]]></content>
      <categories>
        <category>系统入门</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows Terminal使用技巧</title>
    <url>/2020/windows_terminal/</url>
    <content><![CDATA[<p>Windows Terminal的一些使用教程和配置教程<a id="more"></a></p>
<h2 id="配置教程"><a href="#配置教程" class="headerlink" title="配置教程"></a>配置教程</h2><p>详细配置参阅<a href="https://github.com/microsoft/terminal/blob/master/doc/cascadia/SettingsSchema.md" target="_blank" rel="noopener">Windows Terminal Settings Schema</a></p>
<p>有关中文翻译参阅<a href="https://www.jianshu.com/p/13e832853926" target="_blank" rel="noopener"></a></p>
<h3 id="Global"><a href="#Global" class="headerlink" title="Global"></a>Global</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 默认的命令行工具</span></span><br><span class="line">    <span class="attr">"defaultProfile"</span> : <span class="string">"&#123;58ad8b0c-3ef8-5f4d-bc6f-13e4c00f2530&#125;"</span>,</span><br><span class="line">    <span class="comment">// 窗口宽度</span></span><br><span class="line">    <span class="attr">"initialCols"</span> : <span class="number">90</span>,</span><br><span class="line">    <span class="comment">// 窗口高度</span></span><br><span class="line">    <span class="attr">"initialRows"</span> : <span class="number">25</span>,</span><br><span class="line">    <span class="comment">// 默认主题</span></span><br><span class="line">    <span class="attr">"requestedTheme"</span> : <span class="string">"system"</span>,</span><br><span class="line">    <span class="comment">// 快捷键配置</span></span><br><span class="line">    <span class="attr">"keybindings"</span> : []</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="profile"><a href="#profile" class="headerlink" title="profile"></a>profile</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 设置命令行的唯一id</span></span><br><span class="line">    <span class="attr">"guid"</span>: <span class="string">"&#123;61c54bbd-c2c6-5271-96e7-009a87ff44bf&#125;"</span>,</span><br><span class="line">    <span class="comment">// 设置命令行显示的名称</span></span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"Windows PowerShell"</span>,</span><br><span class="line">    <span class="comment">// 设置命令行执行时候运行的程序</span></span><br><span class="line">    <span class="attr">"commandline"</span>: <span class="string">"powershell.exe"</span>,</span><br><span class="line">    <span class="comment">// 设置命令行的字体</span></span><br><span class="line">    <span class="attr">"fontFace"</span>: <span class="string">"Cascadia Code"</span>,</span><br><span class="line">    <span class="comment">// 设置命令行的字体大小</span></span><br><span class="line">    <span class="attr">"fontSize"</span>: <span class="number">14</span>,</span><br><span class="line">    <span class="comment">// 设置是否显示该命令行</span></span><br><span class="line">    <span class="attr">"hidden"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="comment">// 设置启动后所在的路径</span></span><br><span class="line">    <span class="attr">"startingDirectory"</span> : <span class="literal">null</span>,</span><br><span class="line">    <span class="comment">// 使用不透明度</span></span><br><span class="line">    <span class="attr">"useAcrylic"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 不透明度</span></span><br><span class="line">    <span class="attr">"acrylicOpacity"</span>: <span class="number">0.75</span>,</span><br><span class="line">    <span class="comment">// 退出后关闭</span></span><br><span class="line">    <span class="attr">"closeOnExit"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 颜色主题选择（需要在Schema中配置）</span></span><br><span class="line">    <span class="attr">"colorScheme"</span>: <span class="string">"Campbell"</span>,</span><br><span class="line">    <span class="comment">// 光标颜色</span></span><br><span class="line">    <span class="attr">"cursorColor"</span>: <span class="string">"#FFFFFF"</span>,</span><br><span class="line">    <span class="comment">// 光标类型，可选值 "vintage" ( ▃ ), "bar" ( ┃ ), </span></span><br><span class="line">    <span class="comment">// "underscore" ( ▁ ), "filledBox" ( █ ), "emptyBox" ( ▯ )</span></span><br><span class="line">    <span class="attr">"cursorShape"</span>: <span class="string">"bar"</span>,</span><br><span class="line">    <span class="comment">// 历史大小</span></span><br><span class="line">    <span class="attr">"historySize"</span>: <span class="number">9001</span>,</span><br><span class="line">    <span class="attr">"padding"</span>: <span class="string">"0, 0, 0, 0"</span>,</span><br><span class="line">    <span class="comment">// 嗅探输入</span></span><br><span class="line">    <span class="attr">"snapOnInput"</span>: <span class="literal">true</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>如果每个命令行工具的配置相同，可以配置在default中，表示对所有命令行生效</p>
<p><strong>注意：</strong>如果配置中需要填写路径，用Windows中的<code>\</code>时需要进行转义，可以使用<code>/</code>来表示路径</p>
<h2 id="在当前目录打开方法"><a href="#在当前目录打开方法" class="headerlink" title="在当前目录打开方法"></a>在当前目录打开方法</h2><ol>
<li>配置命令行的<code>startingDirectory</code>为null</li>
<li>在需要打开的目录中按<code>ctrl + L</code>或者光标定位到文件管理器地址栏</li>
<li>输入wt，按回车，就会从当前目录中打开Windows Terminal默认的命令行工具</li>
</ol>
<h2 id="配置键盘切换tab页"><a href="#配置键盘切换tab页" class="headerlink" title="配置键盘切换tab页"></a>配置键盘切换tab页</h2><ol>
<li>在配置中的<code>keybindings</code>中添加<code>{ &quot;command&quot;: { &quot;action&quot;: &quot;switchToTab&quot;, &quot;index&quot;: 0}, &quot;keys&quot;: [&quot;ctrl+alt+1&quot;]},</code></li>
<li>如果经常打开多个标签页，可以多配置几条信息</li>
<li>使用<code>ctrl+alt+数字键就可以完成tab页的切换</code></li>
</ol>
<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p><code>shift + alt + =</code> - 横向分屏</p>
<p><code>shift + alt + -</code> - 竖向分屏</p>
]]></content>
      <categories>
        <category>软件上手</category>
      </categories>
      <tags>
        <tag>Windows Terminal</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows启用WSL2</title>
    <url>/2020/wsl/</url>
    <content><![CDATA[<p>Windows升级2004后，切换WSL1和WSL2的方法<a id="more"></a></p>
<h2 id="系统版本"><a href="#系统版本" class="headerlink" title="系统版本"></a>系统版本</h2><p>Windows：Windows10 2004 19041.207</p>
<p>Linux：Ubuntu 18.04LTS 20190521build</p>
<h2 id="切换WSL"><a href="#切换WSL" class="headerlink" title="切换WSL"></a>切换WSL</h2><h3 id="1-打开wsl"><a href="#1-打开wsl" class="headerlink" title="1. 打开wsl"></a>1. 打开wsl</h3><p>可以通过<code>控制面板&gt;程序&gt;程序和功能&gt;启用或关闭Windows功能</code>，勾选<code>适用于Linux的Windows子系统</code>和<code>启用虚拟机平台</code></p>
<p>也可以通过powershell命令行进行开启</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 启用虚拟机平台</span><br><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform</span><br><span class="line"># 启用WSL</span><br><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：修改之后需要进行重启，虚拟机平台一定要启动，否则无法将Linux发行版转到WSL2上去</p>
<h3 id="2-安装一个Linux"><a href="#2-安装一个Linux" class="headerlink" title="2. 安装一个Linux"></a>2. 安装一个Linux</h3><p>在Microsoft Store里面搜索Linux就可以看到许多支持WSL的Linux，选择一个你喜欢的进行下载，<strong>下载好后打开才会进行安装</strong>，直到提示输入用户名和密码，表示安装已经完成</p>
<h3 id="3-WSL1和WSL2的切换"><a href="#3-WSL1和WSL2的切换" class="headerlink" title="3. WSL1和WSL2的切换"></a>3. WSL1和WSL2的切换</h3><p>WSL2的使用必须要Windows系统版本大于或等于<strong>Windows 10.0.18917</strong></p>
<table>
<thead>
<tr>
<th align="left">命令</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>wsl -l</code></td>
<td align="left">列出当前所有安装的Linux发行版</td>
</tr>
<tr>
<td align="left"><code>wsl --set-version &lt;Distro&gt; 2</code></td>
<td align="left">WSL版本的切换，<code>&lt;Distro&gt;</code>表示Linux发行版的名称，即<code>wsl -l</code>列出的名称</td>
</tr>
<tr>
<td align="left"><code>wsl --set-default-version 2</code></td>
<td align="left">设置默认安装的Linux发行版都在WSL2上</td>
</tr>
<tr>
<td align="left"><code>wsl --list --verbose</code></td>
<td align="left">查看所有安装的Linux发行版并且在哪个WSL上面。</td>
</tr>
<tr>
<td align="left"><code>wsl --shutdown</code></td>
<td align="left">终止所有正在运行的Linux发行版和WSL2容器</td>
</tr>
</tbody></table>
<p><strong>注意</strong>：如果显示”WSL 2 需要更新其内核组件“，可以访问<a href="https://docs.microsoft.com/zh-cn/windows/wsl/wsl2-kernel" target="_blank" rel="noopener">更新 WSL 2 Linux 内核</a>进行下载更新包。</p>
]]></content>
      <categories>
        <category>软件</category>
      </categories>
      <tags>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows必备的软件和安装方法</title>
    <url>/2020/windows_software_manual/</url>
    <content><![CDATA[<p>软件合集<a id="more"></a></p>
<h2 id="Listary"><a href="#Listary" class="headerlink" title="Listary"></a>Listary</h2><p>Listary是一款Windows下非常好用的搜索工具，不论是搜文件，搜软件，速度都极快。下载地址：<a href="https://www.listary.com/" target="_blank" rel="noopener">官网</a></p>
<p>软件分为免费版和pro版，从个人使用来说，免费版已经足够使用了，使用双击Ctrl唤出搜索框，然后输入查找内容。该程序本质上来说只是搜索文件，但可以查找到软件的启动文件从而实现软件查找。还可以自定义配置，比如我在<code>关键字&gt;自定义</code>中定义了<code>psa</code>，设置路径为<code>C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe</code>，并且勾选以管理员身份运行，那么在搜索框中输入psa就可以直接启动管理员身份的powershell。</p>
<h2 id="QuickLook"><a href="#QuickLook" class="headerlink" title="QuickLook"></a>QuickLook</h2><p>这也是一个继承Mac优秀体验的软件，通过空格键对文件进行快速预览，源码地址：<a href="https://github.com/QL-Win/QuickLook" target="_blank" rel="noopener">QuickLook</a>，相同功能的还有<a href="http://1218.io/" target="_blank" rel="noopener">Seer</a></p>
<p>QuickLook有个小问题，看html文件没法查看源代码，而是显示的渲染后的页面。但Seer是直接查看源代码。但不知道为什么，本人更喜欢QuickLook这款软件。</p>
<p>QuickLook和Seer都没法直接查看office文件，需要安装相应的插件，而且安装了相应的插件后，预览速度也非常慢。这一点都没有什么好的解决办法。</p>
<h2 id="Listen1"><a href="#Listen1" class="headerlink" title="Listen1"></a>Listen1</h2><p>Listen1是一款开源的多平台听歌软件，源代码地址：<a href="https://github.com/listen1/listen1_desktop" target="_blank" rel="noopener">Listen1桌面版</a>、<a href="https://github.com/listen1/listen1_chrome_extension" target="_blank" rel="noopener">Listen1浏览器插件版</a></p>
<p>说明：这款软件目前还能使用，但是虾米音乐的部分内容已经没法用了，最近的一次代码提交也是五个月之前（2019-11），所以可能这款软件已经成为了历史，不过依然还是能听QQ音乐、网易云音乐、酷狗音乐、酷我音乐、咪咕音乐的歌曲</p>
<p>重要说明：该软件不支持缓存歌曲，所有歌曲均需要联网在线听。</p>
<h2 id="Geek"><a href="#Geek" class="headerlink" title="Geek"></a>Geek</h2><p>Geek是一款非常优秀的软件卸载工具，下载地址：<a href="https://geekuninstaller.com/" target="_blank" rel="noopener">官网</a></p>
<p>软件分为免费版和付费版，但我试用了付费版发现还没有免费版好用，该软件可以自动标记出新安装的软件，卸载完成后，会进行文件残留扫描和注册表清理，相对于控制面板中进行卸载能更彻底，</p>
<p>重要说明：本人使用该软件卸载Windows Store app的时候，卸载完的app回自动恢复，推荐卸载Windows自带的app还是使用Win10设置或者使用Powershell进行卸载。</p>
<h2 id="Velocity"><a href="#Velocity" class="headerlink" title="Velocity"></a>Velocity</h2><p>Velocity是一款Windows下的开发文档查询手册，文档来源也是dash的源，下载地址<a href="https://velocity.silverlakesoftware.com/" target="_blank" rel="noopener">Velocity官网</a>，相同的还有<a href="https://zealdocs.org/" target="_blank" rel="noopener">Zeal</a></p>
<p>两款软件大部分的docsets都来自于dash，Velocity支持第三方用户上传的docsets，例如可以下载djangorestframework手册，Zeal是通过第三方网站<a href="https://zealusercontributions.now.sh/" target="_blank" rel="noopener">Zeal User Contributions</a>来支持第三方手册的。Velocity的界面不如Zeal美观，而且两款软件下载docsets的速度都异常缓慢。此处推荐搭配网页版手册查询站使用<a href="https://devdocs.io/" target="_blank" rel="noopener">Dev Docs</a></p>
<p>Velocity并不是一款完全免费的软件，未付费使用会时常弹出8秒的弹框，但是不影响功能上的使用。</p>
<h2 id="FastCopy"><a href="#FastCopy" class="headerlink" title="FastCopy"></a>FastCopy</h2><p>FastCopy是一款Windows下快速复制和备份的软件，下载地址：<a href="https://mapaler.github.io/FastCopy-M/" target="_blank" rel="noopener">官方网址</a></p>
<p>FastCopy最实用的场景为进程需要对大量琐碎文件进行备份。如果使用完全拷贝会花费大量的时间，如果进行差异拷贝，则同名文件不会进行拷贝，FastCopy可以按照文件的大小和最后修改时间进行备份，修改过的文件就拷贝，未修改过的文件就不拷贝，这样可以在极短的时间内进行全量备份。</p>
<h2 id="HeidiSQL"><a href="#HeidiSQL" class="headerlink" title="HeidiSQL"></a>HeidiSQL</h2><p>HeidiSQL是一款程序员必备的SQL图形化客户端软件，下载地址：<a href="https://www.heidisql.com/" target="_blank" rel="noopener">HeidiSQL官网</a></p>
<p>HeidiSQL是一款免费的SQL图形化软件，支持MySQL、MariaDB、Microsoft SQL server、PostgreSQL。界面美观，功能强大、免费好用。</p>
<h2 id="Termius"><a href="#Termius" class="headerlink" title="Termius"></a>Termius</h2><p>Termius是一款跨平台的SSH连接客户端，下载地址：<a href="https://www.termius.com/" target="_blank" rel="noopener">Termius官网</a></p>
<p>Termius最大的特点就是简洁美观，该软件可以免费使用。多个命令行窗口管理，还可以配置本地命令行工具，直接在软件内使用本机的命令行，配合多窗口管理，可以告别开多个cmd或powershell的时代。多窗口管理微软也推出了一款软件：<a href="https://github.com/Microsoft/Terminal" target="_blank" rel="noopener">Windows Terminal</a>，安装推荐使用Microsoft Store</p>
<h2 id="Postman"><a href="#Postman" class="headerlink" title="Postman"></a>Postman</h2><p>Postman是一款接口测试工具，提供了丰富的请求方式和便捷的参数传递方式，下载地址：<a href="https://www.postman.com/" target="_blank" rel="noopener">Postman官网</a></p>
<p>这里还推荐一款国内的接口测试工具，叫做<a href="https://www.apipost.cn/" target="_blank" rel="noopener">ApiPost</a>，纯中文支持，内存占用也比Postman小</p>
<h2 id="PotPlayer"><a href="#PotPlayer" class="headerlink" title="PotPlayer"></a>PotPlayer</h2><p>超级好用的一款Windows本地视频播放器，下载地址：<a href="http://potplayer.daum.net/" target="_blank" rel="noopener">PotPlayer官网</a>（该地址为墙外地址）</p>
<p>作为本地视频播放器，国内也有不少，最出名的要数暴风影音、新版QQ影音。暴风影音有个最大的问题就是倍速播放声音会失真，QQ影音使用过一段时间，但总感觉用着不顺手，特别是快进和快退。当然不看本地视频内容这些软件就都没必要了。</p>
<h2 id="IDM"><a href="#IDM" class="headerlink" title="IDM"></a>IDM</h2><p>Windows下最好用的下载器，下载地址：<a href="http://www.internetdownloadmanager.com/" target="_blank" rel="noopener">IDM官网</a>，备用网址：<a href="https://stolenzc.lanzous.com/iJOKXhcxlpi" target="_blank" rel="noopener">IDM6.36</a></p>
<p>该软件并不是免费软件，30天免费试用后需要购买才能继续使用，<a href="https://stolenzc.lanzous.com/iXytqhcxloh" target="_blank" rel="noopener">trial reset软件</a>可以将试用时间重新调为30天，以此一直用下去。</p>
<p>也可以使用<a href="https://stolenzc.lanzous.com/ioy0lhcxlng" target="_blank" rel="noopener">Patch软件</a>，按照安装说明注册，该方法通常更加稳定。</p>
<h2 id="VScode"><a href="#VScode" class="headerlink" title="VScode"></a>VScode</h2><p>这个软件不用介绍，最强大的编辑器，懂的自然懂，下载地址：<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VScode官网</a>（访问速度经常感人）</p>
<h2 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h2><p>会对Markdown文件进行实时渲染的软件，用来看Markdown通常是最好的选择，下载地址：<a href="https://typora.io/" target="_blank" rel="noopener">Typora官网</a></p>
<h2 id="PyCharm"><a href="#PyCharm" class="headerlink" title="PyCharm"></a>PyCharm</h2><p>Python开发利器。如果是Python开发者，选它就对了，下载地址：<a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noopener">Pycharm官网</a></p>
<h2 id="Edge"><a href="#Edge" class="headerlink" title="Edge"></a>Edge</h2><p>微软最新出品的基于chromium内核的浏览器，比Chrome更好用，支持同步，能直接访问扩展商店，多平台支持（当前还缺少Linux的支持），下载地址：<a href="https://www.microsoft.com/zh-cn/edge" target="_blank" rel="noopener">Edge稳定版</a>、<a href="https://www.microsoftedgeinsider.com/zh-cn/download/" target="_blank" rel="noopener">Edge开发版</a></p>
<h2 id="m3u8-ffmpeg"><a href="#m3u8-ffmpeg" class="headerlink" title="m3u8+ffmpeg"></a>m3u8+ffmpeg</h2><p>该软件的介绍主要是为了补充IDM的功能，IDM拥有强大的站点抓取功能，许多在线观看的视频都能抓取到下载链接，但是现在出现了一种直播格式m3u8，该格式主要是将视频文件分为了许多ts文件，从而禁止视频的下载。此处提供的<code>N_m3u8DL-CLI_v2.6.3.exe</code>主要作用是解析m3u8文件，将其中的ts文件全部下载下来；<code>ffmpeg.exe</code>文件主要就是将所有的ts文件整合为一个视频文件，方便管理观看。</p>
<p><strong>重要说明：</strong><code>ffmpeg.exe</code>文件需要放在<code>N_m3u8DL-CLI_v2.6.3.exe</code>同级目录下或者配置在环境变量中。</p>
<p>下载地址：<a href="https://stolenzc.lanzous.com/iYYvohcxlqj" target="_blank" rel="noopener">m3u8-download</a></p>
<p>源码地址：<a href="https://github.com/nilaoda/N_m3u8DL-CLI" target="_blank" rel="noopener">N_m3u8DL-CLI</a></p>
]]></content>
      <categories>
        <category>系统入门</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
</search>
